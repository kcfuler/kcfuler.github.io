"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[688],{9613:(n,i,t)=>{t.d(i,{Zo:()=>d,kt:()=>k});var e=t(9496);function a(n,i,t){return i in n?Object.defineProperty(n,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[i]=t,n}function l(n,i){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);i&&(e=e.filter((function(i){return Object.getOwnPropertyDescriptor(n,i).enumerable}))),t.push.apply(t,e)}return t}function r(n){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?l(Object(t),!0).forEach((function(i){a(n,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(i){Object.defineProperty(n,i,Object.getOwnPropertyDescriptor(t,i))}))}return n}function s(n,i){if(null==n)return{};var t,e,a=function(n,i){if(null==n)return{};var t,e,a={},l=Object.keys(n);for(e=0;e<l.length;e++)t=l[e],i.indexOf(t)>=0||(a[t]=n[t]);return a}(n,i);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(e=0;e<l.length;e++)t=l[e],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var p=e.createContext({}),o=function(n){var i=e.useContext(p),t=i;return n&&(t="function"==typeof n?n(i):r(r({},i),n)),t},d=function(n){var i=o(n.components);return e.createElement(p.Provider,{value:i},n.children)},u="mdxType",m={inlineCode:"code",wrapper:function(n){var i=n.children;return e.createElement(e.Fragment,{},i)}},c=e.forwardRef((function(n,i){var t=n.components,a=n.mdxType,l=n.originalType,p=n.parentName,d=s(n,["components","mdxType","originalType","parentName"]),u=o(t),c=a,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||l;return t?e.createElement(k,r(r({ref:i},d),{},{components:t})):e.createElement(k,r({ref:i},d))}));function k(n,i){var t=arguments,a=i&&i.mdxType;if("string"==typeof n||a){var l=t.length,r=new Array(l);r[0]=c;var s={};for(var p in i)hasOwnProperty.call(i,p)&&(s[p]=i[p]);s.originalType=n,s[u]="string"==typeof n?n:a,r[1]=s;for(var o=2;o<l;o++)r[o]=t[o];return e.createElement.apply(null,r)}return e.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6689:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var e=t(8028),a=(t(9496),t(9613));const l={sidebar_position:1},r=void 0,s={unversionedId:"\u7b97\u6cd5/\u7b97\u6cd5\u57fa\u7840\u6a21\u677f",id:"\u7b97\u6cd5/\u7b97\u6cd5\u57fa\u7840\u6a21\u677f",title:"\u7b97\u6cd5\u57fa\u7840\u6a21\u677f",description:"\u7406\u8bba\u53c2\u8003\uff1aOI Wiki - OI Wiki",source:"@site/docs/\u7b97\u6cd5/\u7b97\u6cd5\u57fa\u7840\u6a21\u677f.md",sourceDirName:"\u7b97\u6cd5",slug:"/\u7b97\u6cd5/\u7b97\u6cd5\u57fa\u7840\u6a21\u677f",permalink:"/docs/\u7b97\u6cd5/\u7b97\u6cd5\u57fa\u7840\u6a21\u677f",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u7b97\u6cd5/\u7b97\u6cd5\u57fa\u7840\u6a21\u677f.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"Records",previous:{title:"\u7b97\u6cd5\u5b66\u4e60",permalink:"/docs/category/\u7b97\u6cd5\u5b66\u4e60"}},p={},o=[{value:"\u57fa\u7840\u7b97\u6cd5",id:"\u57fa\u7840\u7b97\u6cd5",level:2},{value:"\u6392\u5e8f",id:"\u6392\u5e8f",level:3},{value:"\u5feb\u6392",id:"\u5feb\u6392",level:4},{value:"\u5feb\u901f\u9009\u62e9\u7b97\u6cd5",id:"\u5feb\u901f\u9009\u62e9\u7b97\u6cd5",level:5},{value:"\u5f52\u5e76\u6392\u5e8f",id:"\u5f52\u5e76\u6392\u5e8f",level:4},{value:"\u57fa\u7840\u6a21\u677f",id:"\u57fa\u7840\u6a21\u677f",level:5},{value:"\u9006\u5e8f\u5bf9",id:"\u9006\u5e8f\u5bf9",level:5},{value:"\u4e8c\u5206",id:"\u4e8c\u5206",level:4},{value:"\u6a21\u677f",id:"\u6a21\u677f",level:5},{value:"\u524d\u7f00\u548c\u4e0e\u5dee\u5206",id:"\u524d\u7f00\u548c\u4e0e\u5dee\u5206",level:3},{value:"\u524d\u7f00\u548c",id:"\u524d\u7f00\u548c",level:4},{value:"\u5dee\u5206",id:"\u5dee\u5206",level:4},{value:"\u53cc\u6307\u9488",id:"\u53cc\u6307\u9488",level:3},{value:"\u4f4d\u8fd0\u7b97",id:"\u4f4d\u8fd0\u7b97",level:3},{value:"\u79bb\u6563\u5316",id:"\u79bb\u6563\u5316",level:3},{value:"\u4e2a\u4eba\u4e00\u4e9b\u7406\u89e3\uff08\u6709\u8bef\u671b\u6307\u6b63\uff09",id:"\u4e2a\u4eba\u4e00\u4e9b\u7406\u89e3\u6709\u8bef\u671b\u6307\u6b63",level:4},{value:"\u533a\u95f4\u5408\u5e76",id:"\u533a\u95f4\u5408\u5e76",level:3},{value:"\u94fe\u8868",id:"\u94fe\u8868",level:2},{value:"\u5355\u94fe\u8868",id:"\u5355\u94fe\u8868",level:3},{value:"\u53cc\u94fe\u8868",id:"\u53cc\u94fe\u8868",level:3},{value:"\u57fa\u7840\u6a21\u677f",id:"\u57fa\u7840\u6a21\u677f-1",level:4},{value:"\u6808",id:"\u6808",level:3},{value:"\u57fa\u7840\u6a21\u677f",id:"\u57fa\u7840\u6a21\u677f-2",level:4},{value:"\u6570\u7ec4\u6a21\u62df\u6808",id:"\u6570\u7ec4\u6a21\u62df\u6808",level:5},{value:"\u5355\u8c03\u6808",id:"\u5355\u8c03\u6808",level:4},{value:"\u5e94\u7528",id:"\u5e94\u7528",level:5},{value:"\u5355\u8c03\u961f\u5217",id:"\u5355\u8c03\u961f\u5217",level:4},{value:"KMP",id:"kmp",level:2},{value:"Trie( \u5b57\u5178\u6811)",id:"trie-\u5b57\u5178\u6811",level:2},{value:"\u5e76\u67e5\u96c6",id:"\u5e76\u67e5\u96c6",level:2},{value:"\u4e3b\u8981\u64cd\u4f5c",id:"\u4e3b\u8981\u64cd\u4f5c",level:3},{value:"\u57fa\u672c\u539f\u7406",id:"\u57fa\u672c\u539f\u7406",level:3},{value:"\u4f18\u5316",id:"\u4f18\u5316",level:4},{value:"\u62d3\u5c55",id:"\u62d3\u5c55",level:3},{value:"\u8fde\u901a\u5757",id:"\u8fde\u901a\u5757",level:4},{value:"\u5806",id:"\u5806",level:2},{value:"\u5982\u4f55\u624b\u5199\u4e00\u4e2a\u5806",id:"\u5982\u4f55\u624b\u5199\u4e00\u4e2a\u5806",level:3},{value:"HASH \u8868\u548c STL\u7b80\u4ecb",id:"hash-\u8868\u548c-stl\u7b80\u4ecb",level:2},{value:"\u54c8\u5e0c\u8868",id:"\u54c8\u5e0c\u8868",level:3},{value:"\u54c8\u5e0c\u8868\u7684\u4e3b\u8981\u4f5c\u7528",id:"\u54c8\u5e0c\u8868\u7684\u4e3b\u8981\u4f5c\u7528",level:4},{value:"\u5b57\u7b26\u4e32\u54c8\u5e0c",id:"\u5b57\u7b26\u4e32\u54c8\u5e0c",level:4},{value:"STL\u4ecb\u7ecd",id:"stl\u4ecb\u7ecd",level:3},{value:"DFS | BFS | \u6811\u4e0e\u56fe\u7684\u5b58\u50a8 | \u62d3\u6251\u6392\u5e8f",id:"dfs--bfs--\u6811\u4e0e\u56fe\u7684\u5b58\u50a8--\u62d3\u6251\u6392\u5e8f",level:2},{value:"BFS",id:"bfs",level:3},{value:"\u6811\u548c\u56fe\u7684\u5b58\u50a8",id:"\u6811\u548c\u56fe\u7684\u5b58\u50a8",level:3},{value:"\u6700\u77ed\u8def",id:"\u6700\u77ed\u8def",level:2},{value:"\u6982\u89c8",id:"\u6982\u89c8",level:3},{value:"dijkstra",id:"dijkstra",level:3},{value:"\u6734\u7d20dijkstra",id:"\u6734\u7d20dijkstra",level:4},{value:"\u5806\u4f18\u5316\u7248\u672c",id:"\u5806\u4f18\u5316\u7248\u672c",level:4},{value:"Bellman - Ford",id:"bellman---ford",level:3},{value:"SPFA",id:"spfa",level:3},{value:"\u6c42\u6700\u77ed\u8def",id:"\u6c42\u6700\u77ed\u8def",level:4},{value:"spfa\u6c42\u8d1f\u73af",id:"spfa\u6c42\u8d1f\u73af",level:4},{value:"Floyd",id:"floyd",level:3},{value:"\u5c0f\u603b\u7ed3",id:"\u5c0f\u603b\u7ed3",level:3},{value:"\u6700\u5c0f\u751f\u6210\u6811",id:"\u6700\u5c0f\u751f\u6210\u6811",level:2},{value:"Prim \u7b97\u6cd5",id:"prim-\u7b97\u6cd5",level:3},{value:"\u7a20\u5bc6\u56fe\uff08\u6734\u7d20\u7248\uff09O(n ^ 2)",id:"\u7a20\u5bc6\u56fe\u6734\u7d20\u7248on--2",level:4},{value:"Kruskal \u7b97\u6cd5 O(mlogm) -- \u7a00\u758f\u56fe",id:"kruskal-\u7b97\u6cd5-omlogm----\u7a00\u758f\u56fe",level:3},{value:"\u4e8c\u5206\u56fe",id:"\u4e8c\u5206\u56fe",level:2},{value:"\u67d3\u8272\u6cd5 O( m +n )",id:"\u67d3\u8272\u6cd5-o-m-n-",level:3},{value:"\u5308\u7259\u5229\u7b97\u6cd5 O(mn)",id:"\u5308\u7259\u5229\u7b97\u6cd5-omn",level:3},{value:"\u6570\u8bba",id:"\u6570\u8bba",level:2},{value:"\u8d28\u6570",id:"\u8d28\u6570",level:3},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:4},{value:"\u8bd5\u9664\u6cd5",id:"\u8bd5\u9664\u6cd5",level:6},{value:"\u7b5b\u6cd5",id:"\u7b5b\u6cd5",level:6},{value:"\u7ea6\u6570",id:"\u7ea6\u6570",level:3},{value:"\u8bd5\u9664\u6cd5",id:"\u8bd5\u9664\u6cd5-1",level:4},{value:"\u7ea6\u6570\u4e2a\u6570",id:"\u7ea6\u6570\u4e2a\u6570",level:4},{value:"\u7ea6\u6570\u4e4b\u548c",id:"\u7ea6\u6570\u4e4b\u548c",level:4},{value:"\u6700\u5927\u516c\u7ea6\u6570",id:"\u6700\u5927\u516c\u7ea6\u6570",level:4},{value:"\u6b27\u62c9\u51fd\u6570",id:"\u6b27\u62c9\u51fd\u6570",level:2},{value:"\u6734\u7d20\u5b9e\u73b0",id:"\u6734\u7d20\u5b9e\u73b0",level:3},{value:"\u7ebf\u6027\u7b5b\u5b9e\u73b0",id:"\u7ebf\u6027\u7b5b\u5b9e\u73b0",level:3},{value:"\u5feb\u901f\u5e42",id:"\u5feb\u901f\u5e42",level:2},{value:"\u5feb\u901f\u5e42\u6c42\u9006\u5143",id:"\u5feb\u901f\u5e42\u6c42\u9006\u5143",level:3},{value:"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5",id:"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5",level:2},{value:"\u88f4\u8700\u5b9a\u7406",id:"\u88f4\u8700\u5b9a\u7406",level:3},{value:"\u6c42\u89e3\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b",id:"\u6c42\u89e3\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b",level:3},{value:"\u80cc\u5305",id:"\u80cc\u5305",level:2},{value:"01\u80cc\u5305",id:"01\u80cc\u5305",level:4},{value:"\u5206\u6790",id:"\u5206\u6790",level:5},{value:"\u5b8c\u5168\u80cc\u5305",id:"\u5b8c\u5168\u80cc\u5305",level:4},{value:"\u591a\u91cd\u80cc\u5305",id:"\u591a\u91cd\u80cc\u5305",level:4},{value:"\u5206\u7ec4\u80cc\u5305",id:"\u5206\u7ec4\u80cc\u5305",level:4},{value:"\u7ebf\u6027DP",id:"\u7ebf\u6027dp",level:2},{value:"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898",id:"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898",level:3},{value:"\u65f6\u95f4\u590d\u6742\u5ea6",id:"\u65f6\u95f4\u590d\u6742\u5ea6",level:4},{value:"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217",id:"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217",level:3},{value:"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",id:"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217",level:3},{value:"\u6700\u77ed\u7f16\u8f91\u8ddd\u79bb",id:"\u6700\u77ed\u7f16\u8f91\u8ddd\u79bb",level:3},{value:"\u7f16\u8f91\u8ddd\u79bb",id:"\u7f16\u8f91\u8ddd\u79bb",level:3},{value:"\u533a\u95f4DP",id:"\u533a\u95f4dp",level:2},{value:"\u8ba1\u6570\u7c7bDP",id:"\u8ba1\u6570\u7c7bdp",level:2},{value:"\u5b8c\u5168\u80cc\u5305\u5199\u6cd5",id:"\u5b8c\u5168\u80cc\u5305\u5199\u6cd5",level:3},{value:"\u53e6\u5916\u4e00\u79cd\u5206\u6790\u65b9\u5f0f",id:"\u53e6\u5916\u4e00\u79cd\u5206\u6790\u65b9\u5f0f",level:3},{value:"\u6570\u4f4d\u7edf\u8ba1DP",id:"\u6570\u4f4d\u7edf\u8ba1dp",level:2},{value:"\u601d\u8def",id:"\u601d\u8def",level:3}],d={toc:o},u="wrapper";function m(n){let{components:i,...t}=n;return(0,a.kt)(u,(0,e.Z)({},d,t,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u7406\u8bba\u53c2\u8003\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://oi-wiki.org/"},"OI Wiki - OI Wiki"))),(0,a.kt)("h2",{id:"\u57fa\u7840\u7b97\u6cd5"},"\u57fa\u7840\u7b97\u6cd5"),(0,a.kt)("h3",{id:"\u6392\u5e8f"},"\u6392\u5e8f"),(0,a.kt)("h4",{id:"\u5feb\u6392"},"\u5feb\u6392"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e6 + 10;\n\nint a[N];\n\nvoid quick_sort(int a[] , int l , int r){\n\n    // \u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u4f20\u5165 l == r \u7684\u503c\uff0c \u6240\u4ee5\u9700\u8981\u53d6\u7b49\n    if( l >= r ) return ;\n\n    // \u7b80\u5316\u7248\u7684 partition\n    int x = a[(r+l)/2] , i = l - 1 ,  j = r + 1;\n\n    // \u4ea4\u6362\uff1a\u5de6\u8fb9\u7684\u5c0f\uff0c\u53f3\u8fb9\u7684\u5927\n    while( i < j ){\n        do i ++ ; while( x > a[i]);\n        do j -- ; while( x < a[j]);\n        if( i < j ) swap( a[i] , a[j]);\n    }\n\n    // \u5206\u6cbb\n    quick_sort(a, l , j);\n    quick_sort(a, j+1 , r);\n}\n\nint main (){\n    int n;\n    scanf(\u201c%d\u201d , &n);\n\n    for( int i = 0 ; i < n ; i++) scanf("%d" , &a[i]);\n\n    quick_sort(a , 0 , n-1);\n\n    for( int i = 0 ; i < n ; i++) printf("%d " , a[i]);\n\n    return 0;\n}\n')),(0,a.kt)("h5",{id:"\u5feb\u901f\u9009\u62e9\u7b97\u6cd5"},"\u5feb\u901f\u9009\u62e9\u7b97\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e6 + 10;\nint a[N];\nint n, k;\n\nint quick_pick(int l, int r, int k){\n    if( l == r ) return a[l];\n\n    int x = a[(l + r) / 2], i = l - 1 , j = r + 1;\n\n    while( i < j ){\n        do i ++ ; while( x > a[i] );\n        do j -- ; while( x < a[j] );\n        if( i < j ) swap(a[i], a[j]);\n    }\n\n    int sl = j - l + 1;// \u4e2d\u70b9\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\n\n    // \u8fd9\u91cc\u8981\u8003\u8651\u5230\u76f8\u7b49\u7684\u60c5\u51b5, \u56e0\u4e3a\u662f\u6570\u7ec4\u957f\u5ea6 == k \u6240\u4ee5\u5b9e\u9645\u4e0a\u503c\u8fd8\u5728\u5de6\u8fb9\n    if( sl >= k ) return quick_pick(l, j, k);\n    else return quick_pick(j + 1, r, k - sl);\n}\n\nint main (){\n    cin>> n >> k;\n\n    for(int i = 0 ;i < n; i ++ ) cin >> a[i];\n\n    int res = quick_pick(0, n - 1, k);\n\n    cout<< res << endl;\n\n    return 0;\n}\n")),(0,a.kt)("h4",{id:"\u5f52\u5e76\u6392\u5e8f"},"\u5f52\u5e76\u6392\u5e8f"),(0,a.kt)("h5",{id:"\u57fa\u7840\u6a21\u677f"},"\u57fa\u7840\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e6+10;\nint a[N] , tmp[N];// \u5f52\u5e76\u9700\u8981\u989d\u5916\u7a7a\u95f4\n\nvoid merge_sort(int a[] , int l , int r){\n    if( l >= r) return ;\n\n    int mid = (l + r) >> 1;\n\n    merge_sort(a, l , mid ) , merge_sort( a, mid + 1, r);\n\n    int k = 0  , i = l , j = mid + 1;\n    //\u5c06\u6570\u636e \u6309\u987a\u5e8f \u8f6c\u79fb\u5230\u4e34\u65f6\u6570\u7ec4\u4e2d\n    while( i <= mid && j <= r){\n        if( a[i] >= a[j] ) tmp[k++] = a[j++];\n        else tmp[k++] = a[i++];\n    }\n    while( i <= mid ) tmp[k++] = a[i++];\n    while( j <= r) tmp[k++] = a[j++];\n\n    for( i = l , j = 0 ; i <= r ; i ++ , j ++) a[i] = tmp[j]; // \u6392\u5e8f\u597d\u4e4b\u540e\u8f6c\u79fb\u56de\u53bb\n}\n\nint main (){\n    int n;\n    scanf(\u201c%d\u201d, &n);\n\n    for(int i = 0; i < n ;i ++) scanf("%d" , &a[i]);\n\n    merge_sort(a, 0 , n - 1);\n\n    for(int i = 0 ;i < n ;i++) printf("%d " , a[i]);\n\n    return 0;\n}\n')),(0,a.kt)("h5",{id:"\u9006\u5e8f\u5bf9"},"\u9006\u5e8f\u5bf9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 1e6 + 10;\nint a[N], t[N];\nint n;\nLL res = 0;\n\nvoid merge_sort(int l, int r ){\n    if( l >= r) return ;\n\n    int mid = (l + r) / 2;\n    merge_sort(l , mid), merge_sort(mid + 1, r);\n\n    int k = 0, i = l , j = mid + 1;\n\n    while( i <= mid && j <= r ){\n        if( a[i] <= a[j] ) t[k ++] = a[i ++];\n        else {\n            t[k ++] = a[j ++];\n            res += mid - i + 1;\n        }\n    }\n    while( i <= mid) t[k ++] = a[i ++];\n    while( j <= r  ) t[k ++] = a[j ++];\n\n    for(int i = l , j = 0 ; i <= r ; i ++ , j ++ ) a[i] = t[j];\n}\n\nint main (){\n\n    cin>> n;\n\n    for(int i = 0 ; i < n; i ++) cin>> a[i];\n\n    merge_sort(0, n - 1);\n\n    cout<< res << endl;\n\n    return 0;\n}\n")),(0,a.kt)("h4",{id:"\u4e8c\u5206"},"\u4e8c\u5206"),(0,a.kt)("h5",{id:"\u6a21\u677f"},"\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint a[N];\n\nint main (){\n    int n , m ;\n    cin>>n>>m;\n\n    for(int i = 0 ;i < n ;i++) cin>>a[i];\n\n    while( m --){\n        int k ;\n        cin>>k;\n\n        int l = 0 , r = n - 1 ;\n\n        while ( l < r ) {\n            int mid = ( l + r ) >> 1; // \u4e0b\u754c\n\n            if( a[mid] >= k ) r = mid;\n            else l = mid + 1;\n        }\n\n        if( a[l] != k) cout<<"-1 -1"<<endl;\n        else {\n\n            cout<<l<<" ";\n\n            int l = 0 , r = n - 1;\n            while( l < r ){\n                int mid = ( l + r + 1 ) >> 1;//\u4e0a\u754c\n\n                if( a[mid] <= k) l = mid;\n                else r = mid - 1;\n            } \n            cout<<r<<endl;\n        }\n    } \n\n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nint main (){\n    double k ;\n    cin>>k;\n    \n    double l = -10000, r = 10000;\n    \n    while( r - l > 1e-8){ // \u6ce8\u610f\u662f\u8981\u8d8a\u6765\u8d8a\u63a5\u8fd1\n        \n        double mid = ( l + r ) / 2 ;\n        \n        if( mid * mid * mid >= k) r = mid;\n        else l = mid;\n    }\n    \n    printf("%.6lf\\n",l);//\u63a7\u5236\u5c0f\u6570\u6570\u4f4d\u7684\u8f93\u51fa\u5f88\u597d\u7528\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u524d\u7f00\u548c\u4e0e\u5dee\u5206"},"\u524d\u7f00\u548c\u4e0e\u5dee\u5206"),(0,a.kt)("h4",{id:"\u524d\u7f00\u548c"},"\u524d\u7f00\u548c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint a[N] , pre[N];\n\nint main (){\n    int n , m;\n    scanf("%d%d" ,&n ,& m);\n\n    for(int i = 1 ; i <= n ;i++) scanf("%d" , &a[i]);\n\n    for(int i = 1 ; i <= n ;i++) pre[i] = pre[i - 1] + a[i];\n\n    while( m --){\n        int s  , e ;\n        scanf("%d%d" , &s,&e);\n        printf("%d\\n", pre[e] - pre[ s - 1 ]);\n    }\n\n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint a[N][N] , s[N][N];\n\nint m , n , q;\n\nint main (){\n\n    cin>>n>>m>>q;//\u6ce8\u610f\u77e9\u9635\u7684\u8bfb\u5165\n\n    for(int i = 1 ; i <= n ;i ++)\n        for( int j = 1 ; j <= m ; j++)\n            cin>>a[i][j];\n\n    for(int i = 1; i <= n ;i ++)\n        for(int j = 1 ; j <= m ; j++)\n            s[i][j] = s[i-1][j] + s[i][j-1] - s[i-1][j-1] + a[i][j];\n\n    while( q --){\n        int x1, y1, x2,y2;\n        cin>>x1>>y1>>x2>>y2;\n\n        int res = s[x2][y2] - s[x1-1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1];\n\n        cout<<res<<endl;\n    }\n\n    return 0;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2023/jpeg/22577092/1681461966024-330fd4a8-edc7-4232-a9cb-35315db04d92.jpeg",alt:null})),(0,a.kt)("h4",{id:"\u5dee\u5206"},"\u5dee\u5206"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://oi-wiki.org/basic/prefix-sum/#%E5%B7%AE%E5%88%86"},"\u524d\u7f00\u548c & \u5dee\u5206 - OI Wiki"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint a[N] , s[N];\n\n// \u5bf9\u6574\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\nvoid insert(int l , int r , int v){\n    s[l] += v;\n    s[r+1] -= v;\n}\n\nint main(){\n    int n , m ;\n    cin>>n>>m;\n\n    for(int i = 1 ;i <= n ;i++) cin>>a[i]; // \u8bfb\u5165\u521d\u59cb\u6570\u7ec4\n\n    for(int i = 1 ;i <= n ;i++) insert(i , i ,a[i]); // \u521d\u59cb\u5316\u5dee\u5206\u6570\u7ec4\uff08\u7b49\u4ef7\u4e3a\u5728\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u6dfb\u52a0\u5bf9\u5e94\u7684a[i]\uff09\n\n    while( m --){\n        int l , r , c;\n        cin>>l>>r>>c;\n        insert(l,r,c);//\u8fdb\u884c\u533a\u95f4\u7684\u64cd\u4f5c\n    }\n\n    for(int i = 1 ;i <= n ;i++) s[i] = s[i] + s[i - 1]; // \u8fd8\u539f\uff0c\u524d\u7f00\u548c \n\n    for(int i = 1 ;i <= n ;i++) cout<<s[i]<<" "; \n\n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint a[N][N],s[N][N];\n\n//\u4e8c\u7ef4\u5dee\u5206\uff0c\u60f3\u8c61\u77e9\u9635\u7684\u9762\u79ef\u53d8\u5316, \u64cd\u4f5c\u65b9\u5f0f\u548c\u4e00\u7ef4\u76f8\u540c\nvoid insert(int x1 , int y1, int x2 , int y2, int c){\n    s[x1][y1] += c;\n    s[x2 + 1][y1] -= c;\n    s[x1][y2 + 1] -= c;\n    s[x2 + 1][y2 + 1] += c;\n}\n\nint main (){\n    int n , m, q;\n    cin>>n>>m>>q;\n\n    for(int i = 1 ; i <= n ;i++)\n        for(int j = 1 ;j <= m ;j++)\n            cin>>a[i][j];\n\n    for(int i = 1 ; i <= n ;i++)\n        for(int j = 1; j <= m;j++)\n            insert(i , j , i , j , a[i][j]);// \u8fb9\u754c\uff0c\u6784\u9020\u5dee\u5206\u6570\u7ec4\n\n    while( q--){\n        int x1,y1,x2,y2,c;\n\n        cin>>x1>>y1>>x2>>y2>>c;\n\n        insert(x1,y1,x2,y2,c);\n    }\n\n    for(int i = 1; i <= n;i ++)\n        for(int j = 1 ; j <= m ;j ++)\n            s[i][j] = s[i][j] + s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1]; // \u524d\u7f00\u548c\uff0c\u8fd8\u539f\u4e3a\u64cd\u4f5c\u540e\u7684\u6570\u7ec4\n\n    for(int i = 1; i <= n;i ++)\n        {\n            for(int j = 1 ; j <= m ;j++) cout<<s[i][j]<<" ";\n            cout<<endl;\n        }\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u53cc\u6307\u9488"},"\u53cc\u6307\u9488"),(0,a.kt)("p",null,"\u6700\u957f\u4e0d\u8fde\u7eed\u5b50\u5e8f\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint a[N] , c[N];\n\nint main (){\n    int n;\n    cin>>n;\n\n    for(int i = 0 ; i < n ; i ++) cin>>a[i];\n\n    int res = 0 , j = 0;\n\n    for(int i = 0 ; i < n ; i ++){\n        c[a[i]]++;\n\n        while( c[a[i]] > 1){\n\n            c[a[j]]--; // \u6e05\u9664\u5bf9\u524d\u9762\u7684\u6570\u7684\u8ba1\u6570\n            j++;\n        }\n\n        res = max( res , i - j + 1);\n    }\n\n    cout<<res<<endl;\n\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u6570\u7ec4\u5143\u7d20\u7684\u76ee\u6807\u548c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint a[N] , b[N];\n\nint main (){\n    int n , m , x;\n    cin>>n>>m>>x;\n    \n    for(int i = 0; i < n ;i++) cin>>a[i];\n    \n    for(int i = 0; i < m ;i++) cin>>b[i];\n\n    for(int i = 0 , j = m - 1; i < n , j >= 0 ;i++)\n    {\n        while(a[i] + b[j] > x) j--;\n        if(a[i] + b[j] == x) \n        {\n            cout<<i<<" "<<j<<endl;\n            break;\n        }\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("p",null,"\u5224\u65ad\u5b50\u5e8f\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint a[N], b[N];\n\nint main ()\n{\n    int n , m ;\n    cin>>n>>m;\n\n    for(int i = 0 ; i < n ; i++) cin>>a[i];\n    for(int j = 0 ; j < m ; j++) cin>>b[j];\n\n    int i = 0 , j = 0;\n    while( i < n && j < m){\n        if( a[i] == b[j]) i++;\n        j++;\n    }\n\n    if( i == n) puts("Yes");\n    else puts("No");\n\n    return 0;\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5148\u60f3\u6e05\u695a i \u548c j \u8981\u5982\u4f55\u53d8\u5316\uff0c\u91cd\u8981\u7684\u662f\u601d\u60f3\u3002")),(0,a.kt)("h3",{id:"\u4f4d\u8fd0\u7b97"},"\u4f4d\u8fd0\u7b97"),(0,a.kt)("p",null,"\u8fd9\u91cc\u53ea\u6d89\u53ca\u5230\u4e24\u79cd\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"n\u7684\u4e8c\u8fdb\u5236\u4e2d\u7b2ck\u4f4d\u662f\u51e0")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"n >> k & 1")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"lowbit -- \u83b7\u5f97\u6700\u540e\u4e00\u4e2a1")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nint lowbit(int x){//\u53d6\u5230\u6700\u540e\u4e00\u4e2a1\n    return x & -x;\n}\n\nint main (){\n    int n ; \n    cin>>n;\n    \n    while( n --){\n        int x ;\n        cin>>x;\n        \n        int res = 0;\n        \n        while(x) x-=lowbit(x), res+=1; // \u51cf\u4e3a0\u7684\u65f6\u5019\u5c31\u5f97\u5230\u4e861\u7684\u4e2a\u6570\n        \n        cout<<res<<" ";\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u79bb\u6563\u5316"},"\u79bb\u6563\u5316"),(0,a.kt)("p",null,"\u8fd9\u91cc\u6307\u7684\u662f\u6709\u5e8f\u7684\u79bb\u6563\u5316"),(0,a.kt)("h4",{id:"\u4e2a\u4eba\u4e00\u4e9b\u7406\u89e3\u6709\u8bef\u671b\u6307\u6b63"},"\u4e2a\u4eba\u4e00\u4e9b\u7406\u89e3\uff08\u6709\u8bef\u671b\u6307\u6b63\uff09"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u79bb\u6563\u5316\u7684\u51e0\u4e2a\u5fc5\u987b\u6b65\u9aa4 "),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8",(0,a.kt)("strong",{parentName:"li"},"\u6e90\u6570\u7ec4\u7684\u4e0b\u6807")," "),(0,a.kt)("li",{parentName:"ol"},"\u5bf9\u5b58\u50a8\u4e0b\u6807\u7684\u6570\u7ec4\u8fdb\u884c",(0,a.kt)("strong",{parentName:"li"},"\u6392\u5e8f\u548c\u53bb\u91cd")," \uff0c \u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e8c\u5206\u7684\u6548\u7387 \u548c \u8282\u7ea6\u7a7a\u95f4 "),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,a.kt)("strong",{parentName:"li"},"\u4e8c\u5206"),"\u5b9e\u73b0\u4e0b\u6807\u7684\u67e5\u627e "),(0,a.kt)("li",{parentName:"ol"},"\u6570\u8f74\u662f",(0,a.kt)("strong",{parentName:"li"},"\u6709\u5e8f"),"\u7684\uff0c\u800c\u6392\u5e8f\u4e4b\u540e\u7684\u6570\u7ec4\u4e5f\u662f",(0,a.kt)("strong",{parentName:"li"},"\u6709\u5e8f"),"\u7684 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\ntypedef pair<int ,int > PII;\n\nconst int N = 3e5 + 10;\nint n , m;\nint a[N] , s[N];\n\nvector<int> alls;\nvector<PII> add, query;\n\nint find(int x ){\n    int l = 0  , r = alls.size() - 1;\n\n    while( l < r){\n        int mid = ( l + r ) >> 1;\n        if( alls[mid] >= x) r = mid;\n        else l = mid + 1;\n    }\n\n    return r + 1; // \u8fd9\u91cc\u7684+1\u662f\u4e3a\u4e86\u914d\u5408\u6784\u9020\u524d\u7f00\u548c\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"int main (){\n    cin>>n>>m;\n\n    while( n --){\n        int x ,c ;\n        cin>>x>>c;\n\n        add.push_back({x,c});\n\n        alls.push_back(x);\n    }\n\n    while ( m --){\n        int l , r ;\n        cin>>l>>r;\n        query.push_back({l , r });\n\n        alls.push_back(l);\n        alls.push_back(r);\n    }\n\n    //\u6392\u5e8f+\u53bb\u91cd , \u8fd9\u4e00\u6b65\u4e0d\u80fd\u5fd8\u8bb0\uff0c\u4e0d\u7136\u4e8c\u5206\u4f1a\u51fa\u95ee\u9898\n    sort( alls.begin() , alls.end());\n    alls.erase( unique(alls.begin(),alls.end()) , alls.end());\n\n    //\u79bb\u6563\u5316\n    for( auto item : add){\n        int x = find( item.first );\n        a[x] += item.second;\n    }\n\n    for( int i = 1 ; i <= (int)alls.size() ; i++) s[i] = s[i - 1] + a[i];//\u8ba1\u7b97\u524d\u7f00\u548c\n\n    for( auto item : query){\n        int l = find(item.first);\n        int r = find(item.second);\n\n        cout<<s[r] - s[l - 1]<<endl;\n    }\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u533a\u95f4\u5408\u5e76"},"\u533a\u95f4\u5408\u5e76"),(0,a.kt)("p",null,"\u6838\u5fc3\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6392\u5e8f "),(0,a.kt)("li",{parentName:"ul"},"\u53cc\u6307\u9488\uff08\uff1f\uff09 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\ntypedef pair<int , int> PII;\n\nvoid merge(vector<PII> &segs){\n    sort(segs.begin() , segs.end());\n    \n    vector<PII> res;\n    \n    int st = -2e9  ,ed = -2e9; // \u56e0\u4e3a\u6392\u5e8f\u4e4b\u540e\u6574\u4e2a\u533a\u95f4\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u7528\u4e24\u4e2a\u53d8\u91cf\u53ef\u4ee5\u8868\u793a\n    \n    for(auto seg : segs){\n        if( seg.first > ed){\n            if( ed != -2e9) // \u89c4\u907f\u8d77\u59cb\u70b9\n                res.push_back({st , ed});\n                st = seg.first , ed = seg.second;\n        }\n        else ed = max( ed , seg.second);\n    }\n    \n    if( st != -2e9) res.push_back({st , ed}); // \u907f\u514d\u4e3a\u7a7a\u7684\u60c5\u51b5\n    \n    segs = res;\n    \n}\n\nint main (){\n    int n ;\n    cin>>n;\n    \n    vector<PII> segs;\n    \n    while( n --){\n        int st , ed ;\n        cin>>st>>ed;\n        \n        segs.push_back({st,ed});\n    }\n    \n    merge(segs);\n    \n    cout<<segs.size()<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h1",{id:"\u6570\u636e\u7ed3\u6784"},"\u6570\u636e\u7ed3\u6784"),(0,a.kt)("h2",{id:"\u94fe\u8868"},"\u94fe\u8868"),(0,a.kt)("p",null,"\u8fd9\u91cc\u7684\u94fe\u8868\u90fd\u662f\u4f7f\u7528\u6570\u7ec4\u6a21\u62df\u7684\u65b9\u5f0f\u8fdb\u884c\u5b58\u50a8\u7684\u3002"),(0,a.kt)("h3",{id:"\u5355\u94fe\u8868"},"\u5355\u94fe\u8868"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\n\nint e[N], ne[N], head, idx;//\u8fd9\u91cc\u7684idx \u6211\u89c9\u5f97\u53ef\u4ee5\u770b\u505a\u8c03\u7528\u6808\u91cc\u9762\u7684\u6307\u9488\uff0c\u4f7f\u7528\u5b83\u6765\u65b0\u5efa\u4e00\u4e2a\u5143\u7d20\n\nvoid init(){\n    head = -1;\n    idx = 0;\n}\n\nvoid insert_to_head( int x)\n{\n    e[idx] = x, ne[idx] = head, head = idx, idx++;\n}\n\nvoid insert_to_next(int k, int x)\n{\n    e[idx] = x, ne[idx] = ne[k], ne[k] = idx, idx++;  \n}\n\nvoid remove(int k)\n{\n    ne[k] = ne[ne[k]];\n}\n\nint main ()\n{\n    int m ;\n\n    cin>>m;\n\n    init();\n\n    while( m--)\n    {\n        int k, x;\n        char op;\n\n        cin>>op;\n\n        if(op == 'H')\n        {\n\n            cin>>x;\n            insert_to_head(x);\n        }\n        else if(op == 'D')\n        {\n\n            cin>>k;\n            if(k == 0) head = ne[head];\n            remove(k - 1);\n        }\n        else\n        {\n\n            cin>>k>>x;\n            insert_to_next(k - 1, x);//\u6ce8\u610f k \u548c head\u521d\u59cb\u503c\u7684\u5bf9\u5e94\u5173\u7cfb\n        }\n    }\n\n    for(int i = head; i != -1; i = ne[i]) cout<<e[i]<<\" \";\n    cout<<endl;\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u53cc\u94fe\u8868"},"\u53cc\u94fe\u8868"),(0,a.kt)("h4",{id:"\u57fa\u7840\u6a21\u677f-1"},"\u57fa\u7840\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <string>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint e[N], l[N], r[N], idx;\n\nvoid init(){\n    l[1] = 0,r[0] = 1,idx = 2;\n}\n\nvoid insert(int k, int x)\n{\n    e[idx] = x, r[idx] = r[k], l[idx] = k, l[r[k]] = idx, r[k] = idx, idx++;\n}\n\nvoid remove(int k)\n{\n    l[r[k]] = l[k]; // \u53f3\u8fb9\u7684\u5de6\u8fb9\u7b49\u4e8e\u5de6\u8fb9\n    r[l[k]] = r[k]; // \u5de6\u8fb9\u7684\u53f3\u8fb9\u7b49\u4e8e\u53f3\u8fb9\n}\n\nint main ()\n{\n    int m ;\n    cin>>m;\n\n    init();// \u4e00\u5b9a\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff0c\u4e0d\u7136\u4f1a\u53d8\u5f97\u4e0d\u5e78\n\n    while(m --)\n    {\n        int k, x;\n        string op;\n\n        cin>>op;\n\n        if( op == "L")\n        {\n            cin>>x;\n            insert(0, x);\n        }\n        else if( op == "R")\n        {\n            cin>>x;\n            insert(l[1], x);\n        }\n        else if( op == "D")\n        {\n            cin>>k;\n            remove(k + 1);\n        }\n        else if( op == "IL")\n        {\n            cin>>k>>x;\n            insert(l[k + 1], x);\n        }\n        else\n        {\n            cin>>k>>x;\n            insert(k + 1, x);\n        }\n    }\n\n    for(int i = r[0]; i != 1; i = r[i]) cout<<e[i]<<" ";\n    cout<<endl;\n\n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u6808"},"\u6808"),(0,a.kt)("h4",{id:"\u57fa\u7840\u6a21\u677f-2"},"\u57fa\u7840\u6a21\u677f"),(0,a.kt)("h5",{id:"\u6570\u7ec4\u6a21\u62df\u6808"},"\u6570\u7ec4\u6a21\u62df\u6808"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <string>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint stk[N],tt;\n\nvoid init_stk()\n{\n    tt = -1;\n}\n\nint main()\n{\n    int m ;\n    cin>>m;\n\n    init_stk();\n\n    while( m --)\n    {\n        int x;\n        string op ;\n\n        cin>>op;\n\n        if(op == "push")\n        {\n            cin>>x;\n            stk[++ tt] = x; \n        }\n        else if(op == "query")\n        {\n            cout<<stk[tt]<<endl;\n        }\n        else if(op == "pop")\n        {\n            tt--;\n        }\n        else if(op == "empty")\n        {\n            if( tt >= 0 ) cout<<"NO"<<endl;\n            else cout<<"YES"<<endl;\n        }\n    }\n\n\n    return 0;\n}\n')),(0,a.kt)("h4",{id:"\u5355\u8c03\u6808"},"\u5355\u8c03\u6808"),(0,a.kt)("p",null,"\u603b\u4f53\u8fc7\u7a0b\uff1a\u5b9a\u4e49\u4e00\u4e2a\u6808\uff0c\u904d\u5386\u6570\u7ec4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6808\u9876\u5143\u7d20 >= \u5f53\u524d\u5143\u7d20 \uff0c \u5f39\u51fa\u6808\u9876\u5143\u7d20 "),(0,a.kt)("li",{parentName:"ul"},"\u6d41\u7a0b\u7ed3\u675f\u4e4b\u540e\u5f53\u524d\u7684\u6808\u9876\u5143\u7d20\u5c31\u662f\u6700\u8fd1\u7684\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u5143\u7d20\u3002 ")),(0,a.kt)("p",null,"\u539f\u7406\uff1a",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"\u786e\u4fdd\u6808\u5185\u5143\u7d20\u9012\u589e")),"\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint stk[N] , tt;\n\nint main ()\n{\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int n;\n    cin>>n;\n    \n    for(int i = 0 ; i < n ; i++) \n    {\n        int x ;\n        cin>>x;\n        while( tt && stk[tt] >= x) tt--;\n        \n        if(stk[tt]) cout<<stk[tt]<<' ';\n        else cout<<\"-1 \";\n        \n        stk[++tt] = x; // \u8bb0\u5f97\u5165\u6808\n    }\n    \n    return 0;\n}\n")),(0,a.kt)("h5",{id:"\u5e94\u7528"},"\u5e94\u7528"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u627e\u5230\u4e00\u4e2a\u6570\u7684\u5de6\u8fb9\u79bb\u5b83\u6700\u8fd1\u7684\u6570")),(0,a.kt)("h4",{id:"\u5355\u8c03\u961f\u5217"},"\u5355\u8c03\u961f\u5217"),(0,a.kt)("p",null,"\u4ee3\u7801\u6a21\u677f\n\u8fd9\u91cc\u662f\u6c42\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"\u6700\u5c0f\u503c | \u6700\u5927\u503c")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e6 + 10;\nint a[N], q[N];//\u4f7f\u7528\u6570\u7ec4\u6a21\u62df\u961f\u5217\n\nint main()\n{\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int n , k;\n    cin>>n>>k;\n    \n    for(int i = 0; i < n ;i ++) cin>>a[i];\n    \n    int hh = 0 , tt = -1; // hh \u4e3a\u961f\u5934\uff0c tt \u4e3a\u961f\u5c3e\n    \n    for(int i = 0; i < n ;i ++)\n    {\n        // \u5224\u65ad\u961f\u5217\u6709\u6ca1\u5728\u6ed1\u52a8\u7a97\u53e3\u4e4b\u5185\n        if( hh <= tt && i - k + 1 > q[hh] )  hh++;\n        \n        while( hh <= tt && a[q[tt]] >= a[i]) tt--; // \u6bd4\u5b83\u5927\u7684\u90fd\u5f39\u51fa\n        \n        q[ ++tt ] = i; // \u961f\u5217\u91cc\u9762\u5b58\u50a8\u7684\u662f\u4e0b\u6807\n        \n        if( i >= k - 1 ) cout<<a[q[hh]]<<" ";\n        \n    }\n    \n    cout<<endl;\n    \n    hh = 0 , tt = -1; // hh \u4e3a\u961f\u5934\uff0c tt \u4e3a\u961f\u5c3e\n    \n    for(int i = 0; i < n ;i ++)\n    {\n        // \u5224\u65ad\u961f\u5217\u6709\u6ca1\u5728\u6ed1\u52a8\u7a97\u53e3\u4e4b\u5185\n        if( hh <= tt && i - k + 1 > q[hh] )  hh++;\n        \n        while( hh <= tt && a[q[tt]] <= a[i]) tt--; // \u6bd4\u5b83\u5c0f\u7684\u90fd\u5f39\u51fa\n        \n        q[ ++tt ] = i; // \u961f\u5217\u91cc\u9762\u5b58\u50a8\u7684\u662f\u4e0b\u6807\n        // \u521d\u59cb\u7684\u65f6\u5019\uff0c\u8981\u6709\u7a97\u53e3\u957f\u5ea6\u518d\u8f93\u51fa\n        if( i >= k - 1 ) cout<<a[q[hh]]<<" ";\n        \n    }\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"deque"),"\uff0c\u53ef\u8bfb\u6027++"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <deque>\n\nusing namespace std;\n/*\n\u5355\u8c03\u961f\u5217\u4e2d\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u6216\u8005\u9012\u51cf\u7684\u5e8f\u5217\uff0c\u4e3b\u8981\u662f\u7ef4\u62a4\u8d77\u70b9\n\u6240\u4ee5\u961f\u5934\u5c31\u662f \u6700\u5927 / \u6700\u5c0f \u503c\n\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\uff0c\u56e0\u4e3a\u8981\u548c\u6ed1\u52a8\u7a97\u53e3\u5bf9\u5e94\uff0c\u6240\u4ee5\u5b58\u50a8\u7684\u662f\u4e0b\u6807\uff0c\u65b9\u4fbf\u7a97\u53e3\u7684\u79fb\u52a8\n*/\nint main(){\n    int n , k;\n    cin>> n >> k;\n    int a[n];\n    \n    for(int i = 0; i < n ; i ++ ) cin>> a[i];\n    \n    deque<int> q(n);\n    int j = 0;\n    for(int i = 0;i < n ;i ++){\n        \n        if( q.size() && i - k + 1 > q.front() ) q.pop_front();\n        \n        while( q.size() && a[q.back()] >= a[i] ) q.pop_back();\n        \n        q.push_back(i);\n        \n        if( i - k + 1 >= 0) {\n            cout<<a[q.front()]<<" "; // \u5355\u8c03\u5e8f\u5217\u7684\u8d77\u70b9\n        }\n    } \n    \n    cout<<endl;\n    \n    q = deque(n, 0);\n    \n    for(int i = 0 ; i < n ;i ++)\n    {\n        if( q.size() && i - k + 1 > q.front() ) q.pop_front();\n        \n        while( q.size() && a[q.back()] <= a[i]) q.pop_back();\n        \n        q.push_back(i);\n        \n        if( i - k + 1 >= 0 ) {\n            cout<<a[q.front()]<<" ";\n        }\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("h2",{id:"kmp"},"KMP"),(0,a.kt)("p",null,"\u672c\u8d28\u4e0a\u5c31\u662f\u5145\u5206\u5229\u7528\u5728\u5339\u914d\u8fc7\u7a0b\u4e2d\u80fd\u591f\u5f97\u5230\u7684\u4fe1\u606f\uff0c\u6765\u8fdb\u884c\u4e0b\u4e00\u6b21\u7684\u5339\u914d\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8fd9\u91cc\u4f7f\u7528",(0,a.kt)("em",{parentName:"li"},"ne\u6570\u7ec4")," \u6765\u4fdd\u5b58\u5728\u5f53\u524d\u957f\u5ea6\u4e0b\uff0c\u5b57\u7b26\u4e32\u6700\u957f\u76f8\u7b49\u524d\u540e\u7f00\u7684\u957f\u5ea6\u3002 "),(0,a.kt)("li",{parentName:"ul"},"\u5728\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6a21\u677f\u5df2\u7ecf\u5339\u914d\u5230\u4e86",(0,a.kt)("inlineCode",{parentName:"li"},"j"),"\u7684\u4f4d\u7f6e\uff0c \u90a3\u4e48\u4ece ",(0,a.kt)("inlineCode",{parentName:"li"},"j")," \u4e4b\u524d\u7684\u4f4d\u7f6e\u80af\u5b9a\u662f\u5df2\u7ecf\u5339\u914d\u8fc7\u4e86\u3002 ")),(0,a.kt)("p",null,"\u5982\u679c\u8bf4 \u4e4b\u524d\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"ne[j]")," \u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5de6\u53f3\u5bf9\u79f0\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u76f8\u7b49\u7684\uff08\u4e5f\u5c31\u662f\u524d\u540e\u7f00\u76f8\u7b49\uff09\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba9 j \u4ece ",(0,a.kt)("inlineCode",{parentName:"p"},"ne[j] "),"\u7684\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\uff0c\u56e0\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"ne[j]"),"\u7684\u6700\u957f\u524d\u540e\u7f00\u662f\u76f8\u7b49\u7684\uff0c\u4e14",(0,a.kt)("inlineCode",{parentName:"p"},"ne[j]")," \u662f\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"j"),"\u4e4b\u524d\uff0c \u4e5f\u5c31\u662f\u5df2\u7ecf\u5339\u914d\u8fc7\u4e86\uff0c \u6240\u4ee5\u5c31\u53ef\u4ee5\u786e\u5b9a",(0,a.kt)("inlineCode",{parentName:"p"},"ne[ j ]"),"\u524d\u9762\u7684\u90e8\u5206\u548c\u539f\u5b57\u7b26\u4e32\u662f\u76f8\u7b49\u7684\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u6b65\u9aa4 \uff0c \u4e5f\u5c31\u8282\u7701\u8c03\u4e86",(0,a.kt)("inlineCode",{parentName:"p"}," ne[ j ]")," \u4ee3\u8868\u7684\u90a3\u4e00\u90e8\u5206\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u8fbe\u5230\u4e86\u4f18\u5316\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6548\u679c\uff0c\u8fd9\u4e2a\u5c31\u662fkmp\u7b97\u6cd5\u3002\n\u6bd4\u8f83\u7b80\u6d01\u7684\u7b97\u6cd5\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nconst int M = 1e6 + 10;\n\nchar p[N] , s[M];\nint n , m;\nint ne[N]; //\u8fd9\u91cc\u4e0d\u7528next \u662f\u56e0\u4e3aiterator \u4e2d\u4e5f\u5b9a\u4e49\u4e86next()\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u9632\u6b62\u51b2\u7a81\n\nint main()\n{\n    // cin.tie(NULL);\n    // ios_base::sync_with_stdio(false);\n\n    cin>> n >> (p+1) >> m >> (s + 1); // \u8fd9\u91cc\u5728\u8f93\u5165\u6570\u7ec4\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u8ba9\u4e0b\u6807\u4ece1\u5f00\u59cb\u4e86\n\n    //\u6c42next\u6570\u7ec4, \u4e5f\u5c31\u662f\u524d\u7f00\u6570\u7ec4\n    for( int i = 2 , j = 0 ; i <= n; i++)\n        {\n            while( j && p[i] != p[j + 1]) j = ne[j];// \u5982\u679c\u8fd8\u80fd\u9000 | \u4e0d\u76f8\u7b49 =\u300b \u9000\u5230\u53ef\u4ee5\u76f8\u7b49\u7684\u4f4d\u7f6e\n            if( p[i] == p[j + 1] ) j ++;\n            ne[i] = j;\n        }\n\n    for( int i = 1 ,j = 0 ; i <= m; i++)\n        {\n            while( j && s[i] != p[j + 1]) j = ne[j];\n            if( s[i] == p[j + 1]) j ++;\n            if( j == n)\n            {\n                cout<< i - n<<" ";\n                j = ne[j];\n            }\n        }\n\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"trie-\u5b57\u5178\u6811"},"Trie( \u5b57\u5178\u6811)"),(0,a.kt)("p",null,"\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"import java.util.* ;\n\npublic class Main{\n    private static int N  = 100010;\n    private static int[][] son = new int[N][26];\n    private static int[] cnt = new int[N];\n    private static int idx = 1;\n    \n    private static void insert( char[] str ){\n        int p = 0;\n        for( int i = 0 ; i < str.length ; i++)\n        {\n            int u = str[i] - 'a';\n            if( son[p][u] == 0 ) son[p][u] = ++idx;\n            p = son[p][u];\n        }\n        \n        cnt[p]++;\n    }\n    \n    private static int query(char[] str){\n        int p = 0;\n        \n        for(int i = 0 ; i < str.length ; i++)\n        {\n            int u = str[i] - 'a';\n            if( son[p][u] == 0 ) return 0;\n            p = son[p][u];\n        }\n        \n        return cnt[p];\n    }\n    \n    \n    public static void main(String [] argvs){\n        Scanner sc = new Scanner( System.in );\n        \n        int n = sc.nextInt();\n        \n        String op;\n        String str;\n        while( n-- > 0 )\n        {\n            op = sc.next();\n            str = sc.next();\n            \n            if( \"I\".equals(op) ) insert(str.toCharArray());\n            else System.out.println(query(str.toCharArray()));\n        }\n        \n    }\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"java\u7684\u8f93\u5165\u8f93\u51fa\u5bf9acm\u6a21\u5f0f\u8fd8\u662f\u4e0d\u592a\u53cb\u597d\uff0c\u597d\u9ebb\u70e6\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint son[N][26] , cnt[N], idx;\nchar str[N];\n\nvoid insert( char *str)\n{\n    int p = 0;\n    for( int i = 0; str[i] ; i++){\n        int u  = str[i] - 'a';\n        if( ! son[p][u] ) son[p][u] = ++idx; // \u6ca1\u6709\u7684\u8bdd\u5c31\u521b\u5efa\n        p = son[p][u];\n    }\n    cnt[p] ++; // \u8fd9\u4e2a\u5355\u8bcd\u7684\u6570\u91cf\n}\n\nint serach(char str[])\n{\n    int p = 0; // \u8fd9\u91cc\u7684p\u548cidx\u914d\u5408\uff0c\u8d77\u5230\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u7684\u4f5c\u7528\uff0c\u6807\u8bc6\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u3002\n    for( int i = 0 ; str[i] ; i++)\n    {\n        int u = str[i] - 'a';\n        if( !son[p][u] ) return 0;\n        p = son[p][u];\n    }\n    return cnt[p];\n}\n\nint main ()\n{\n    int m;\n    cin>>m;\n\n    \n    while( m --)\n    {\n        char op[2];\n        scanf(\"%s%s\", op , str);\n        \n        if(*op == 'I') insert(str);\n        else cout<<serach(str)<<endl;\n    }\n    \n    return 0;\n}\n")),(0,a.kt)("h2",{id:"\u5e76\u67e5\u96c6"},"\u5e76\u67e5\u96c6"),(0,a.kt)("h3",{id:"\u4e3b\u8981\u64cd\u4f5c"},"\u4e3b\u8981\u64cd\u4f5c"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76 "),(0,a.kt)("li",{parentName:"ol"},"\u8be2\u95ee\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d ")),(0,a.kt)("p",null,"\u53ef\u4ee5\u5728",(0,a.kt)("strong",{parentName:"p"},"\u8fd1\u4e4e")," ",(0,a.kt)("inlineCode",{parentName:"p"},"O(1)")," \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e4b\u5185\u5b8c\u6210\u4e24\u4e2a\u64cd\u4f5c"),(0,a.kt)("h3",{id:"\u57fa\u672c\u539f\u7406"},"\u57fa\u672c\u539f\u7406"),(0,a.kt)("p",null,"\u6bcf\u4e00\u4e2a\u96c6\u5408\u7528\u4e00\u68f5\u6811\u6765\u8868\u793a\u3002\u6811\u6839\u7684\u7f16\u53f7\u5c31\u662f\u6574\u4e2a\u96c6\u5408\u7684\u7f16\u53f7\u3002\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u5b83\u7684\u7236\u8282\u70b9\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"p[x]"),"\u8868\u793ax\u7684\u7236\u8282\u70b9"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5982\u4f55\u5224\u65ad\u6811\u6839 \uff1a ",(0,a.kt)("inlineCode",{parentName:"li"},"if (p[x] == x)")," "),(0,a.kt)("li",{parentName:"ol"},"\u5982\u4f55\u6c42x\u7684\u96c6\u5408\u7f16\u53f7\uff1a ",(0,a.kt)("inlineCode",{parentName:"li"},"while( p[x] != x) x = p[x]")," "),(0,a.kt)("li",{parentName:"ol"},"\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u96c6\u5408 : px \u662f x \u7684\u96c6\u5408\u7f16\u53f7 \uff0c py \u662f y \u7684\u96c6\u5408\u7f16\u53f7 ",(0,a.kt)("inlineCode",{parentName:"li"},"p[x] = y")," \u3002 ")),(0,a.kt)("h4",{id:"\u4f18\u5316"},"\u4f18\u5316"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8def\u5f84\u538b\u7f29"),"\uff1a \u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u4e2d\u95f4\u6240\u6709\u8282\u70b9\u90fd\u6307\u5411\u6839\u8282\u70b9\u3002"),(0,a.kt)("p",null,"java\u6a21\u677f\uff08\u88f8\u677f\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'import java.util.*;\n\npublic class Main{\n    private static int N = 100010;\n    private static int [] p = new int[N];\n    \n    private static int find(int x ){\n        if( p[x] != x ) return p[x] = find(p[x]);\n        return p[x];\n    }\n    \n    public static void main(String [] argvs){\n        Scanner sc = new Scanner( System.in );\n        int n = sc.nextInt(), m = sc.nextInt();\n        \n        for(int i = 0 ; i < n ;i++) p[i] = i;\n        \n        while( m -- > 0)\n        {\n                //\u8f93\u5165\u8f93\u51fa\u786e\u5b9e\u9ebb\u70e6\n            String op = sc.next();\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            \n            if( "M".equals(op) ) p[find(a)] = find(b);\n            else {\n                if( find(a) == find(b) ) System.out.println("Yes");\n                else System.out.println("No");\n            } \n        }\n    }\n}\n')),(0,a.kt)("p",null,"C++\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 1e5 + 10;\n\nint p[N];\n\n//\u6838\u5fc3\nint find( int x ){ \n    if( p[x] != x)\n    {\n        return p[x] = find(p[x]); // \u8fd9\u91cc\u7684\u8d4b\u503c\u5c31\u662f\u8def\u5f84\u538b\u7f29\n    }\n    return p[x];\n}\n\nint main (){\n    \n    int n , m;\n    cin>>n>>m;\n    \n    for(int i = 0 ; i <  n; i++) p[i] = i;\n    \n    while( m --)\n    {\n        char op[2];\n        int a, b;\n        cin>>op>>a>>b;\n        \n        if( op[0] == \'M\' ) p[find(a)] = find(b); \n        else {\n            if( find(a) == find(b)) puts("Yes");\n            else puts("No");\n        }\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "os"\n    "bufio"\n)\n\nconst N int = 100010\n\nvar (\n    n, m    int\n    p       [N]int\n)\n\nfunc find( x int ) int {\n    if p[x] != x {\n        p[x] = find(p[x])\n    }\n    return p[x]\n}\n\nfunc main(){\n    \n    reader := bufio.NewReader(os.Stdin)\n    \n    fmt.Fscan(reader,&n, &m);\n    \n    for i := 1; i <= n ; i++ {\n        p[i] = i\n    }\n    \n    \n    for i := 1; i <= m ; i ++{\n        var operator string\n        var x, y int\n        fmt.Fscan(reader, &operator, &x, &y)\n        \n        if operator == "M" {\n            p[find(x)] = find(y)\n        }\n        \n        if operator == "Q" {\n            if find(x) == find(y) {\n                fmt.Println("Yes")\n            } else {\n                fmt.Println("No")\n            }\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"\u62d3\u5c55"},"\u62d3\u5c55"),(0,a.kt)("h4",{id:"\u8fde\u901a\u5757"},"\u8fde\u901a\u5757"),(0,a.kt)("p",null,"![","[Pasted image 20221104105152.png]","]"),(0,a.kt)("p",null,"\u4f7f\u7528\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"size[N]"),"\u6765\u7ef4\u62a4\u8fde\u901a\u5757\u4e2d\u5143\u7d20\u7684\u6570\u91cf\uff0c\u5728\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u5c31\u5c06\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u4e5f\u5408\u5e76\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'import java.util.*;\n\npublic class Main{\n    \n    private static int N = 100010;\n    private static int[] p = new int [N];\n    private static int[] size = new int [N]; //\u7ef4\u62a4\u8fd9\u4e2a\u9898\u76ee\u9700\u8981\u7684\u8fde\u901a\u5757\u4e2d\u5143\u7d20\u7684\u6570\u91cf\n    \n    //\u5e76\u67e5\u96c6\u7684\u6838\u5fc3\n    private static int find( int x ){\n        if( p[x] != x ) return p[x] = find( p[x] );\n        return p[x];\n    }\n    \n    public static void main (String [] argvs){\n        Scanner sc = new Scanner( System.in );\n        \n        int n = sc.nextInt() , m = sc.nextInt();\n        \n        for(int i = 0 ; i < n ; i ++) \n        {\n            p[i] = i;\n            size[i] = 1;\n        }\n        \n        while( m -- > 0)\n        {\n            String op = sc.next();\n\n            \n            if( "C".equals(op)) {\n                int a =  sc.nextInt() , b = sc.nextInt();\n                \n                if( find(a) == find(b)) continue;\n                \n                size[find(b)] += size[find(a)]; // \u8fd9\u91cc\u8981\u6ce8\u610f\u5408\u5e76\u4e4b\u540e\u7684\u72b6\u6001 , \u662fa\u5e76\u5165b\uff0c\u800c\u4e0d\u662f\u53cd\u8fc7\u6765\n                p[find(a)] = find(b);\n            \n            }else if( "Q1".equals(op) ){\n                int a =  sc.nextInt() , b = sc.nextInt();\n                \n                if( find(a) == find(b) ) System.out.println("Yes");\n                \n                else System.out.println("No");\n            }else{\n                int a = sc.nextInt();\n                \n                System.out.println(size[find(a)]);\n            }\n        }\n        \n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nconst int N = 100010;\nint p[N],cnt[N];\n\nint find(int x)\n{\n    if( p[x] == x ) return p[x];\n    else return p[x] = find(p[x]);\n}\n\nint main(){\n    \n    int n , m;\n    cin>>n>>m;\n    for(int i = 1; i <= n; i++) p[i] = i, cnt[i] = 1;\n    \n    while( m -- > 0)\n    {\n        string op;\n        int a, b;\n        \n        cin>>op;\n        \n        if( op == "C") \n        {\n            cin>>a>>b;\n            a = find(a), b = find(b);\n            if(a != b) // \u8fd8\u8981\u8003\u8651\u662f\u540c\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\n            {\n                p[a] = b;\n                cnt[b] += cnt[a];\n            }\n        }\n        else if( op == "Q1") \n        {\n            cin>>a>>b;\n            if( find(a) == find(b) ) cout<<"Yes"<<endl;\n            else cout<<"No"<<endl;\n        }\n        else {\n            cin>>a;\n            cout<<cnt[find(a)]<<endl;\n        }\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("h2",{id:"\u5806"},"\u5806"),(0,a.kt)("h3",{id:"\u5982\u4f55\u624b\u5199\u4e00\u4e2a\u5806"},"\u5982\u4f55\u624b\u5199\u4e00\u4e2a\u5806"),(0,a.kt)("p",null,"\u4e00\u4e2a\u5806\u9700\u8981\u6ee1\u8db3\u7684\u64cd\u4f5c\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u63d2\u5165\u4e00\u4e2a\u6570 "),(0,a.kt)("li",{parentName:"ol"},"\u6c42\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c "),(0,a.kt)("li",{parentName:"ol"},"\u5220\u9664\u6700\u5c0f\u503c "),(0,a.kt)("li",{parentName:"ol"},"\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u5143\u7d20 "),(0,a.kt)("li",{parentName:"ol"},"\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u5143\u7d20 ")),(0,a.kt)("p",null,"\u5806\u7684",(0,a.kt)("strong",{parentName:"p"},"\u6027\u8d28"),"\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5806\u662f\u4e00\u9897",(0,a.kt)("strong",{parentName:"li"},"\u5b8c\u5168\u4e8c\u53c9\u6811")),(0,a.kt)("li",{parentName:"ul"},"\u5c0f\u6839\u5806\u7684\u5b9a\u4e49\uff1a\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6bd4\u5de6\u53f3\u4e24\u4e2a\u5b50\u8282\u70b9\u66f4\u5c0f => \u6839\u8282\u70b9\u6700\u5c0f")),(0,a.kt)("p",null,"\u5806\u7684",(0,a.kt)("strong",{parentName:"p"},"\u5b58\u50a8"),"\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u4e00\u7ef4\u6570\u7ec4\u8fdb\u884c\u5b58\u50a8")),(0,a.kt)("p",null,"\u5de6\u513f\u5b50\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"2 * x"),"\n\u53f3\u513f\u5b50\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"2 * x + 1"),"\n\u57fa\u7840\u64cd\u4f5c\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"down(x)")," "),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"up(x)")," ")),(0,a.kt)("p",null,"\u6240\u6709\u7684\u5176\u5b83\u64cd\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7684\u7ec4\u5408\u6765\u5b8c\u6210"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.*;\n\npublic class Main{\n\n    private static int N = 100010;\n    private static int [] heap = new int [N];\n    private static int size;\n\n    private static void down( int u ){\n        int t  = u;\n        if( u * 2 <= size && heap[u * 2] < heap[t]) t = u * 2;\n        if( u * 2 + 1 <= size && heap[u * 2 + 1] < heap[t]) t = u * 2 + 1;\n\n        if( u != t)\n        {\n            int tmp = heap[u];\n            heap[u] = heap[t];\n            heap[t] = tmp;\n\n            down(t);\n        }\n    }\n\n    private static void up ( int u ){\n        while( heap[u/2] < heap[u] ){\n            u = u / 2;\n        }\n    }\n\n    public static void main (String [] argvs){\n        Scanner sc = new Scanner( System.in );\n\n        int n = sc.nextInt(), m = sc.nextInt();\n\n        for(int i = 1 ; i <= n ; i++) heap[i] = sc.nextInt();\n        size = n;\n\n        for(int i = n / 2 ; i > 0 ; i --) down(i); // \u5efa\u5806\n\n        while( m-- > 0)\n            {\n                System.out.printf("%d ", heap[1]);\n                heap[1] = heap[size --];\n                down(1);\n            }\n\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 1e5 + 10;\nint heap[N];\nint n, m, cnt;\n\n/*\n\u672c\u8d28\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u4f7f\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u5904\u7406\n*/\n\nvoid down(int u){\n    int t = u;\n\n    // \u8fd9\u91cc\u8981\u6ce8\u610f\u4f7f\u7528 u \u6765\u53d6\u5f53\u524d\u6839\u8282\u70b9\u7684\u503c\uff0c\u56e0\u4e3a t \u6709\u53ef\u80fd\u4f1a\u53d8\n    if( u * 2 <= cnt && heap[u * 2] < heap[t] )         t = u * 2;\n    if( u * 2 + 1 <= cnt && heap[u * 2 + 1] < heap[t] ) t = u * 2 + 1;\n    \n    if( t != u ){\n        swap(heap[t], heap[u]);\n        down(t);\n    }\n}\n\nint main (){\n    \n    cin>> n >> m ;\n    cnt = n;\n    for(int i = 1; i <= n; i ++) cin>>heap[i];\n    \n    // \u8fd9\u91cc\u662f\u4ece\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u5f00\u59cb\n    for(int i = n / 2;  i > 0; i -- ) down(i);\n    \n    while( m -- ){\n        // \u5806\u6392\u5e8f\u7684\u53d6\u503c\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u53d6\uff0c\u91cd\u65b0\u6784\u5efa\u6811\n        cout<< heap[1] << " ";\n        heap[1] = heap[cnt --];\n        down(1);\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("p",null,"\u5b8c\u6574\u5b9e\u73b0\n\u6838\u5fc3\u5c31\u662f\u52a0\u4e0a\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"ph | hp"),"\u8fd9\u4e24\u4e2a\u6570\u7ec4\uff0c\u7528\u6765\u6620\u5c04\u63d2\u5165\u987a\u5e8f\u548c\u5728\u5806\u4e2d\u7684\u987a\u5e8f\uff0c\u4e24\u4e2a\u6570\u7ec4\u662f\u4e92\u76f8\u6620\u5c04\u7684\u5173\u7cfb\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <algorithm>\n#include <string.h>\n\nusing namespace std;\n\nconst int N = 100010;\n\nint h[N], ph[N], hp[N], cnt;\n\nvoid heap_swap(int a, int b) // \u548cjava\u4e0d\u540c\u70b9\u5c31\u5728\u8fd9\u91cc\n{\n    swap(ph[hp[a]],ph[hp[b]]);\n    swap(hp[a], hp[b]);\n    swap(h[a], h[b]);\n}\n\nvoid down(int u)\n{\n    int t = u;\n    if (u * 2 <= cnt && h[u * 2] < h[t]) t = u * 2;\n    if (u * 2 + 1 <= cnt && h[u * 2 + 1] < h[t]) t = u * 2 + 1;\n    if (u != t)\n    {\n        heap_swap(u, t);\n        down(t);\n    }\n}\n\nvoid up(int u)\n{\n    while (u / 2 && h[u] < h[u / 2])\n        {\n            heap_swap(u, u / 2);\n            u >>= 1;\n        }\n}\n\nint main()\n{\n    int n, m = 0;\n    scanf("%d", &n);\n    while (n -- )\n        {\n            char op[5];\n            int k, x;\n            scanf("%s", op);\n            if (!strcmp(op, "I"))\n            {\n                scanf("%d", &x);\n                cnt ++ ;\n                m ++ ;\n                ph[m] = cnt, hp[cnt] = m;\n                h[cnt] = x;\n                up(cnt);\n            }\n            else if (!strcmp(op, "PM")) printf("%d\\n", h[1]);\n            else if (!strcmp(op, "DM"))\n            {\n                heap_swap(1, cnt);\n                cnt -- ;\n                down(1);\n            }\n            else if (!strcmp(op, "D"))\n            {\n                scanf("%d", &k);\n                k = ph[k];\n                heap_swap(k, cnt);\n                cnt -- ;\n                up(k);\n                down(k);\n            }\n            else\n            {\n                scanf("%d%d", &k, &x);\n                k = ph[k];\n                h[k] = x;\n                up(k);\n                down(k);\n            }\n        }\n\n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'/*\nI x\uff0c\u63d2\u5165\u4e00\u4e2a\u6570 x\uff1bh[++size] = x;up(size);\nPM\uff0c\u8f93\u51fa\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c\uff1b h[1]\nDM\uff0c\u5220\u9664\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c\uff08\u6570\u636e\u4fdd\u8bc1\u6b64\u65f6\u7684\u6700\u5c0f\u503c\u552f\u4e00\uff09\uff1b h[1] = h[size--];down(1);\nD k\uff0c\u5220\u9664\u7b2c k \u4e2a\u63d2\u5165\u7684\u6570\uff1b h[k] = h[size--];down(k),up(k)\nC k x\uff0c\u4fee\u6539\u7b2c k \u4e2a\u63d2\u5165\u7684\u6570\uff0c\u5c06\u5176\u53d8\u4e3a x\uff1bh[k] = x,down(k) ,up(k);\n*/\nimport java.util.Scanner;\npublic class Main{\n    static int N = 100010,size,m;\n    static int[] h = new int[N];\n    static int[] hp = new int[N];//\u81ea\u8eab\u88ab\u6620\u5c04\u6570\u7ec4\n    static int[] ph = new int[N];//\u6620\u5c04\u6570\u7ec4\n    public static void swap(int[] a,int x,int y){\n        int temp = a[x];\n        a[x] = a[y];\n        a[y] = temp;\n    }\n    public static void head_swap(int x,int y){\n        //\u8fd9\u91cc\u56e0\u4e3a\u6620\u5c04\u6570\u7ec4\u8ddf\u88ab\u6620\u5c04\u6570\u7ec4\u662f\u4e92\u76f8\u6307\u5411\u5bf9\u65b9,\u5982\u679c\u6709\u4e24\u4e2a\u6570\u66f4\u6362\u4f4d\u7f6e\uff0c\u6620\u5c04\u4e0b\u6807\u4e5f\u8981\u8fdb\u884c\u66f4\u6362\n        //ph\u7684\u4e0b\u6807\u6307\u5411\u662f\u6309\u987a\u5e8f\u63d2\u5165\u7684\u4e0b\u6807\uff0chp\u6240\u5bf9\u5e94\u7684\u503c\u662fph\u7684\u6309\u987a\u5e8f\u7684\u4e0b\u6807\uff0c\u7528\u8fd9\u4e24\u4e2a\u5c5e\u6027\u8fdb\u884c\u4ea4\u6362\n        swap(ph,hp[x],hp[y]);\n        //\u56e0\u4e3a\u6309\u7167\u987a\u5e8f\u63d2\u5165ph\u5230\u6307\u5411\u4ea4\u6362\u4e86\uff0c\u5bf9\u5e94\u6307\u5411ph\u7684hp\u4e5f\u8981\u8fdb\u884c\u4ea4\u6362\n        swap(hp,x,y);\n        //\u6700\u540e\u4e24\u4e2a\u503c\u8fdb\u884c\u4ea4\u6362\n        swap(h,x,y);\n    }\n    public static void down(int x){\n        int t = x;//x\u7684\u5206\u8eab\n        //\u5224\u65ad\u4e00\u4e0b\u5de6\u4e0b\u6807\u662f\u4e0d\u662f\u5b58\u5728\n        //\u5224\u65ad\u4e00\u4e0b\u5de6\u4e0b\u6807\u7684\u503c\u662f\u4e0d\u662f\u6bd4\u6211t\u7684\u503c\u5c0f \u3002\u90a3\u4e48\u5c31\u5c06\u5de6\u4e0b\u6807\u7684\u503c\u8d4b\u4e88t\uff1b\u5426\u5219\u4e0d\u53d8\n        if(x * 2 <= size && h[x * 2] < h[t]) t = x * 2;\n        //\u5224\u65ad\u4e00\u4e0b\u53f3\u4e0b\u6807\u7684\u503c\u662f\u4e0d\u662f\u6bd4\u6211t\u7684\u503c\u5c0f\u3002\u90a3\u4e48\u5c31\u5c06\u53f3\u4e0b\u6807\u7684\u503c\u8d4b\u4e88t\uff0c\u5426\u5219\u4e0d\u53d8\n        if(x *2 + 1 <= size && h[x * 2 + 1] < h[t]) t = x * 2 + 1;\n        if(t != x){//\u5982\u679cx\u4e0d\u7b49\u4e8e\u4ed6\u7684\u5206\u8eab\n            head_swap(x,t);//\u90a3\u5c31\u8fdb\u884c\u4ea4\u6362\u987a\u5e8f\n            down(t);//\u7136\u540e\u4e00\u76f4\u5411\u4e0b\u8fdb\u884c\u64cd\u4f5c\n        }\n    }\n    public static void up(int x){\n        //\u5411\u4e0a\u64cd\u4f5c\uff0c\u5224\u65ad\u4e00\u4e0b\u6839\u8282\u70b9\u8fd8\u4e0d\u662f\u5b58\u5728\n        //\u770b\u4e00\u4e0b\u6839\u8282\u70b9\u662f\u4e0d\u662f\u6bd4\u6211\u5de6\u5206\u652f\u6216\u8005\u53f3\u5206\u652f\u7684\u503c\u5927\uff0c\u5927\u7684\u8bdd\u5c31\u8fdb\u884c\u4ea4\u6362\n        while(x / 2 > 0 && h[x / 2] > h[x]){\n            head_swap(x,x/2);\n            x = x / 2;//\u76f8\u5f53\u4e8e\u4e00\u76f4up\n        }\n    }\n    public static void main(String[] args){\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        size = 0;//size\u662f\u539f\u6570\u7ec4\u7684\u4e0b\u6807\n        m = 0;//m\u662f\u6620\u5c04\u6570\u7ec4\u7684\u4e0b\u6807\n        while(n -- > 0){\n            String s = scan.next();\n            if(s.equals("I")){//\u63d2\u5165\u64cd\u4f5c\n                int x= scan.nextInt();\n                size ++;m ++;//\u63d2\u5165\u4e00\u4e2a\u6570\u4e24\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\u90fd\u52a0\u4e0a1\uff1b\n                ph[m] = size;hp[size] = m;//ph\u4e0ehp\u6570\u7ec4\u662f\u6620\u5c04\u5173\u7cfb\n                h[size] = x;//\u5c06\u6570\u63d2\u5165\u5230\u5806\u4e2d\u6700\u540e\u4f4d\u7f6e\n                up(size);//\u7136\u540eup\uff0c\u5f80\u4e0a\u9762\u6392\u5e8f\u4e00\u904d\n            }else if(s.equals("PM")){ //\u8f93\u51fa\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c\n                System.out.println(h[1]);\n            }else if(s.equals("DM")){//\u5220\u9664\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c\n                //\u56e0\u4e3a\u9700\u8981\u7528\u5230\u6620\u5c04\u6570\u7ec4\u4e0e\u88ab\u6620\u5c04\u6570\u7ec4,\u56e0\u4e3a\u9700\u8981\u627e\u5230k\u7684\u4f4d\u7f6e\u5728\u54ea\u91cc\uff0c\u9700\u8981\u8ba9\u6620\u5c04\u7684\u987a\u5e8f\uff0c\n                //\u56e0\u4e3a\u5982\u679c\u7528size\uff0csize\u662f\u4f1a\u968f\u65f6\u6539\u53d8\u7684\uff0c\u4e0d\u662f\u6309\u987a\u5e8f\u7684\uff0c\u56e0\u4e3a\u4f1a\u88abup\u6216\u8005down\u987a\u5e8f\u4f1a\u88ab\u4fee\u6539\n                head_swap(1,size);//\u5c06\u6700\u540e\u4e00\u4e2a\u6570\u66ff\u6362\u6389\u7b2c\u4e00\u4e2a\u6700\u5c0f\u503c\u5143\u7d20\uff0c\u7136\u540e\u6570\u91cf\u51cf1\uff0csize--\n                size--;\n                down(1);//\u63d2\u5165\u4e4b\u540e\u8fdb\u884c\u5411\u4e0b\u64cd\u4f5c\uff0c\u56e0\u4e3a\u53ef\u80fd\u4e0d\u7b26\u5408\u5c0f\u6839\u5806\n            }else if(s.equals("D")){//\u5220\u9664\u5f53\u524d\u96c6\u5408\u4e2d\u7b2ck\u4e2a\u63d2\u5165\u5f97\u6570\n                int k = scan.nextInt();\n                k = ph[k];//ph[k] \u662f\u4e00\u6b65\u4e00\u6b65\u63d2\u5165\u6620\u5c04\u7684\u4e0b\u6807\uff0c\u4e0d\u4f1a\u4e71\u5e8f\uff0c\n                head_swap(k,size);//\u7136\u540e\u5c06k\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u4ea4\u6362\uff0c\u7136\u540e\u957f\u5ea6\u51cf1\uff0csize--\n                size--;\n                up(k);//\u8fdb\u884c\u6392\u5e8f\u4e00\u904d\uff0c\u4e3a\u4e86\u7701\u4ee3\u7801\u91cf\uff0cup\u4e00\u904ddown\u4e00\u904d\u3002\u56e0\u4e3a\u53ea\u4f1a\u6267\u884c\u5176\u4e2d\u4e00\u4e2a\n                down(k);\n            }else{\n                int k = scan.nextInt();\n                int x = scan.nextInt();\n                k = ph[k];//ph[k] \u662f\u4e00\u6b65\u4e00\u6b65\u63d2\u5165\u6620\u5c04\u7684\u4e0b\u6807\uff0c\u987a\u5e8f\u662f\u6309\u7167\u63d2\u5165\u65f6\u5019\u7684\u987a\u5e8f\n                h[k] = x;//\u7136\u540e\u5c06\u7b2ck\u4e3a\u6570\u4fee\u6539\u4e3a\u6570x\n                up(k);//up\u4e00\u904d\uff0cdown\u4e00\u904d\n                down(k);\n\n            }\n        }\n    }\n    }\n')),(0,a.kt)("h2",{id:"hash-\u8868\u548c-stl\u7b80\u4ecb"},"HASH \u8868\u548c STL\u7b80\u4ecb"),(0,a.kt)("h3",{id:"\u54c8\u5e0c\u8868"},"\u54c8\u5e0c\u8868"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u77e5\u8bc6\u70b9\uff1a")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5b58\u50a8\u7ed3\u6784 "),(0,a.kt)("li",{parentName:"ul"},"\u5f00\u653e\u5bfb\u5740\u6cd5 "),(0,a.kt)("li",{parentName:"ul"},"\u62c9\u94fe\u6cd5 "),(0,a.kt)("li",{parentName:"ul"},"\u5b57\u7b26\u4e32\u54c8\u5e0c\u65b9\u5f0f ")),(0,a.kt)("h4",{id:"\u54c8\u5e0c\u8868\u7684\u4e3b\u8981\u4f5c\u7528"},"\u54c8\u5e0c\u8868\u7684\u4e3b\u8981\u4f5c\u7528"),(0,a.kt)("p",null,"\u628a\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u6570\u636e\u8303\u56f4\u6620\u5c04\u5230\u4e00\u4e2a\u66f4\u5c0f\u7684\u6570\u636e\u8303\u56f4\uff08\u5e7f\u4e49\u7684\u79bb\u6563\u5316\uff09, \u540c\u65f6\u53ef\u4ee5\u83b7\u5f97\u66f4\u5feb\u7684\u67e5\u8be2\u901f\u5ea6\u3002\n\u901a\u8fc7\u4e00\u4e2ahash\u51fd\u6570\u5c06\u4e00\u4e2a\u5927\u503c\u6620\u5c04\u5230\u4e00\u4e2a\u5c0f\u503c\u3002\n\u4e00\u822c\u662f\u901a\u8fc7\u53d6\u6a21\u4e00\u4e2a",(0,a.kt)("strong",{parentName:"p"},"\u8d28\u6570"),"\u6765\u5f97\u5230\u5c0f\u7684\u6570\u3002\n\u5904\u7406\u51b2\u7a81\u7684\u4e24\u79cd\u65b9\u5f0f"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u62c9\u94fe\u6cd5")),(0,a.kt)("p",null,"\u4e5f\u5c31\u662f\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u662f\u4e00\u4e2a",(0,a.kt)("strong",{parentName:"p"},"\u94fe\u8868"),"\uff0c\u5f53\u51b2\u7a81\u65f6\uff0c\u5c31\u5c06\u5b83\u6dfb\u52a0\u5230\u94fe\u8868\u672b\u5c3e\u3002"),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u5f00\u653e\u5bfb\u5740\u6cd5")),(0,a.kt)("p",null,"\u4e00\u822c\u662f\u901a\u8fc7\u6253\u4e0a\u4e00\u4e2a\u6807\u8bb0\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u5220\u9664\u7684\u529f\u80fd\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u62c9\u94fe\u6cd5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\nusing namespace std;\n\nconst int N = 100003;\nint h[N], e[N], ne[N], idx;//\u8fd9\u91cc\u662f\u7528\u94fe\u8868\u8f85\u52a9\u6765\u5904\u7406\u51b2\u7a81\n\n\nvoid insert( int x ){\n    int k = (x % N + N) % N;//\u907f\u514d\u8d1f\u6570\u7684\u60c5\u51b5\n    e[idx] = x;\n    ne[idx] = h[k]; // \u63d2\u5165\u5230\u94fe\u8868\u5934\u90e8\n    h[k] = idx++;\n}\n\nbool find( int x)\n{\n    int k = (x % N + N) % N;\n    for(int i = h[k]; i != -1; i = ne[i]) // \u4ece\u5c3e\u90e8\u5f80\u5934\u90e8\u627e\n    {\n        if( e[i] == x) return true;   \n    }\n    \n    return false;\n}\n\nint main ()\n{\n    int n ;\n    scanf("%d", &n);\n    \n    memset(h , -1 , sizeof h);\n    \n    while( n-- > 0)\n    {\n        char op[2];\n        int x ;\n        scanf("%s%d", op, &x);\n        \n        if( *op == \'I\')\n        {\n            insert(x);\n        }else {\n            if( find(x) ) puts("Yes");\n            else puts("No");\n        }\n        \n    }\n    \n    \n    return 0;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'import java.io.*;  \nimport java.util.*;\n\npublic class Main{\n        static int N = 100003;\n        static int [] h = new int[N];\n        static int [] e = new int[N];\n        static int [] ne = new int[N];\n        static int idx = 0;\n\n        static void insert(int x )\n        {\n            int k = (x % N + N) % N;\n\n            e[idx] = x;\n            ne[idx] = h[k];\n            h[k] = idx++;\n        }\n\n        static boolean find(int x)\n        {\n            int k = (x % N + N) % N;\n        \n            for(int i = h[k] ; i != -1 ; i = ne[i])\n            {\n                if( e[i] == x ) return true;  \n            }\n        \n            return false;\n        }\n\n\n        public static void main(String [] argvs) throws IOException\n        {\n            BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ));\n            Arrays.fill(h, -1);\n        \n            int n = Integer.parseInt(reader.readLine());\n\n            while( n -- > 0)\n            {\n                String[] strs = reader.readLine().split(" ");\n                String op = strs[0];\n                int x = Integer.parseInt(strs[1]);\n        \n                if( op.equals("I"))\n                {\n                    insert(x);\n                }else {\n                    if( find(x) ) System.out.println("Yes");\n                    else System.out.println("No");\n                }\n            }\n        }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f00\u653e\u5bfb\u5740\u6cd5")),(0,a.kt)("p",null,"\u53ea\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8fdb\u884c\u5b58\u50a8\uff0c\u5f62\u5f0f\u4e0a\u4f1a\u66f4\u4e3a\u7b80\u5355\n\u4e00\u822c\u60c5\u51b5\u4e0b\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u6570\u636e\u91cf\u7684",(0,a.kt)("strong",{parentName:"p"},"\u4e24\u5230\u4e09\u500d"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'import java.io.*;\nimport java.util.*;\n\npublic class Main{\n    \n    static int N = 200003;\n    static int never = 0x3f3f3f3f;\n    static int[] h = new int[N];\n    \n    static int find(int x) // \u8fd4\u56de\u5728 hash\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\n    {\n        int k = (x % N + N) % N;\n        \n        while( h[k] != never && h[k] != x) // \u5728\u6570\u7ec4\u4e2d\u8f6e\u6d41\u67e5\u627e\n        {\n            k++;\n            if( k == N) k = 0;\n        }\n        return k;\n    }\n    \n    \n    public static void main(String [] argvs) throws IOException\n    {\n        BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ));\n        Arrays.fill(h, never);\n        \n        int n = Integer.parseInt(reader.readLine());\n        \n        while( n -- > 0)\n        {\n            String[] strs = reader.readLine().split(" ");\n            String op = strs[0];\n            int x = Integer.parseInt(strs[1]);\n            \n            if( op.equals("I"))\n            {\n                h[find(x)] = x;\n            }else {\n                if( h[find(x)] == x) System.out.println("Yes");\n                else System.out.println("No");\n            }\n        }\n    }\n}\n')),(0,a.kt)("h4",{id:"\u5b57\u7b26\u4e32\u54c8\u5e0c"},"\u5b57\u7b26\u4e32\u54c8\u5e0c"),(0,a.kt)("p",null,"\u5c06\u5b57\u7b26\u4e32\u770b\u6210\u662f",(0,a.kt)("strong",{parentName:"p"},"p\u8fdb\u5236\u7684\u6570"),"\u8fdb\u884c\u8f6c\u6362\uff0c\u7136\u540e\u5bf9\u5b83\u7684\u5341\u8fdb\u5236\u6570\u53d6\u6a21"),(0,a.kt)("p",null,"p\u7684\u503c\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"131 \u6216\u8005 1331")," \uff0c \u8fd9\u4e2a\u662f\u7ecf\u9a8c\u503c\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u5728\u8fdb\u884c\u8f6c\u6362\u7684\u65f6\u5019\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u6392\u96640"),"\u8fd9\u4e2a\u503c\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u51b2\u7a81\u3002"),(0,a.kt)("p",null,"\u4f5c\u7528\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u6bb5\u662f\u5426\u76f8\u540c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 ",(0,a.kt)("inlineCode",{parentName:"li"},"O(1)")," \uff0c \u5728\u5927\u591a\u6570\u5b57\u7b26\u4e32\u573a\u666f\u8981\u6bd4KMP\u4f18\u79c0")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\ntypedef unsigned long long ULL; // \u7528unsigned \u7c7b\u578b\u7684\u6570\u636e\uff0c \u5728\u6ea2\u51fa\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u53d6\u6a21\n\nconst int N  = 100010;\nULL h[N];//\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u548c\nULL p[N];//\u4ee3\u8868p\u8fdb\u5236\nconst int P = 131; // \u4e5f\u53ef\u4ee5\u662f 13331\uff0c\u8fd9\u4e24\u4e2a\u6570\u4e0d\u5bb9\u6613\u51b2\u7a81\n\nULL query(int l , int r)\n{\n    return h[r] - h[l-1] * p[r - l + 1];\n}\n\nint main()\n{\n    int n , m;\n    char str[N];\n    scanf("%d%d%s", &n ,& m, str + 1);\n    \n    p[0] = 1; // \u907f\u514d\u51b2\u7a81\n    for(int i = 1 ; i <= n;i++)\n    {\n        h[i] = h[i-1] * P + str[i];\n        p[i] = p[i - 1] * P;\n    }\n    \n    while ( m --)\n    {\n        int l1,r1,l2,r2;\n        scanf("%d%d%d%d", &l1,&r1,&l2,&r2);\n        \n        if( query(l1, r1) == query(l2, r2)) puts("Yes");\n        else puts("No");\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"stl\u4ecb\u7ecd"},"STL\u4ecb\u7ecd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"vector \uff0c\u53d8\u957f\u6570\u7ec4\uff0c\u500d\u589e\u7684\u601d\u60f3 , \u652f\u6301\u8fed\u4ee3\u5668\n        size()\n        empty()\n        clear()\n        front()/ back()\n        push_back()/ pop_back()\n        begin() / end()\n        \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c\u6bd4\u8f83\u57fa\u51c6\u662f\u5b57\u5178\u5e8f\npair<type, type> \u5b58\u50a8\u4e00\u4e2a\u4e8c\u5143\u7ec4\n        p.first | p.second \n        \u652f\u6301\u6bd4\u8f83\u8fd0\u7b97\uff0c \u4ee5 first \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57 \uff0c \u4ee5 second \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\n        make_pair()\n        {first, second}\nstring \uff0c \u5b57\u7b26\u4e32, substr(), c_str()\n        size()\n        empty()\n        clear()\n        \u652f\u6301 + \u8fd0\u7b97\n        substr(start , size); \u5f53size > string.size() , \u622a\u53d6\u5230\u672b\u5c3e \nqueue    \u961f\u5217 push() front() pop()\n        size()  \n        push()  // \u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n        front() // \u8fd4\u56de\u961f\u5934\u5143\u7d20 \n        back() // \u8fd4\u56de\u961f\u5c3e\u5143\u7d20\n        pop() // \u5f39\u51fa\u961f\u5934\u5143\u7d20\npriority_queue \u4f18\u5148\u961f\u5217  , \u5b9e\u73b0\u539f\u7406\u662f\u5806 , \u9ed8\u8ba4\u662f\u5927\u6839\u5806\n        push() //\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n        top()  // \u8fd4\u56de\u5806\u9876\u5143\u7d20\n        pop() // \u5f39\u51fa\u5806\u9876\u5143\u7d20\n        priority_queue<int ,vector<int>, greater<int>> heap; //\u8fd9\u6837\u5c31\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5c0f\u6839\u5806\nstack \u6808\n        push()\n        top()\n        pop()\ndeque \u53cc\u7aef\u961f\u5217\uff08\u4e00\u4e2a\u52a0\u5f3a\u7248\u7684 vector\uff09\n        size()\n        empty()\n        clear()\n        front()\n        back()\n        push_back()/pop_back()\n        push_front()/pop_front()\n        begin()/ end()\nset,map, multiset, multimap \u57fa\u4e8e\u5e73\u8861\u4e8c\u53c9\u6811 \uff0c \u52a8\u6001\u7ef4\u62a4\u6709\u5e8f\u5e8f\u5217\n        size()\n        empty()\n        clear()\n        begin()/ end() ++ --\u8fd4\u56de\u524d\u9a71\u548c\u540e\u7ee7\n        \n        set/multiset \n                insert() \u63d2\u5165\u4e00\u4e2a\u6570 O(log n )\n                find() \n                count()\n                erase()\n                        \u8f93\u5165\u4e00\u4e2a\u6570x\uff0c\u5220\u9664\u6240\u6709x O(K + log n)\n                        \u8f93\u5165\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5220\u9664\u8fd9\u4e2a\u8fed\u4ee3\u5668\n                lower_bound()/ upper_bound() \n                        lower_bound(x) \u8fd4\u56de\u5927\u4e8e\u7b49\u4e8ex\u7684\u6700\u5c0f\u7684\u6570\u7684\u8fed\u4ee3\u5668 | \u6700\u5c0f\u4e0b\u754c\n                        uppper_bound(x) \u8fd4\u56de\u5927\u4e8ex\u7684\u6700\u5c0f\u7684\u6570\u7684\u8fed\u4ee3\u5668 | \u6700\u5927\u4e0a\u754c\n        map/mutimap\n                insert() \u63d2\u5165\u7684\u4e00\u4e2a\u6570\u662fpair\n                erase() \u8f93\u5165\u7684\u53c2\u6570\u662fpair \u6216 \u8fed\u4ee3\u5668\n                find()\n                [] \u65f6\u95f4\u590d\u6742\u5ea6\u662f O(logn)\n                lower_bound()/ upper_bound() \n                \nunordered_set, unordered_map, unordered_multiset, unordered_multimap \u54c8\u5e0c\u8868\n        \u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u7edd\u5927\u90e8\u5206\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(1)\n        \u4e0d\u652f\u6301lower_bound() / upper_bound()\n        \u4e0d\u652f\u6301\u8fed\u4ee3\u5668\u7684++ -- \nbitset \uff0c \u538b\u4f4d\n        \u5f53\u6211\u4eec\u5b58\u50a8 bool \u6570\u7ec4\u7684\u65f6\u5019,\u5360\u7528\u7684\u5185\u5b58\u662f\u6b63\u5e38\u6570\u7ec4\u7684 1/8 \n        bitset<size> s;\n        ~ , & , | , ^ \n        >> , <<\n        == , !=\n        []\n        count() \u8fd4\u56de\u6709\u591a\u5c11\u4e2a1\n        any() \u5224\u65ad\u662f\u5426\u81f3\u5c11\u67091\u4e2a1\n        none() \u5224\u65ad\u662f\u5426\u5168\u4e3a 0 \n        set() \u628a\u6240\u6709\u4f4d\u7f6e\u8bbe\u4e3a1\n        set(k, v) \u5c06\u7b2ck\u4f4d\u53d8\u4e3a0\n        flip(k) \u5c06\u7b2ck\u4f4d \u53d6\u53cd\n        flip <=> ~\n")),(0,a.kt)("h1",{id:"\u641c\u7d22\u4e0e\u56fe\u8bba"},"\u641c\u7d22\u4e0e\u56fe\u8bba"),(0,a.kt)("h2",{id:"dfs--bfs--\u6811\u4e0e\u56fe\u7684\u5b58\u50a8--\u62d3\u6251\u6392\u5e8f"},"DFS | BFS | \u6811\u4e0e\u56fe\u7684\u5b58\u50a8 | \u62d3\u6251\u6392\u5e8f"),(0,a.kt)("p",null,"DFS\n\u5168\u6392\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.*;\n\npublic class Main{\n    static int N = 10, n;\n    static int [] path = new int [N];\n    static boolean [] st = new boolean[N];\n\n    static void dfs(int u)\n    {\n        if( u == n )\n        {\n            for(int i = 0 ; i < n; i++)\n                {\n                    System.out.printf("%d ", path[i]);\n                }\n            System.out.printf("\\n");\n        }\n        // \u6bcf\u4e00\u4e2a\u6570\u5b57\u90fd\u904d\u5386\u5230\uff0c \u4e0d\u540c\u9ad8\u5ea6\u7684\u6811\u4e3b\u8981\u901a\u8fc7 st[i] \u6765\u533a\u5206\n        for(int i = 1; i <= n ;i++)\n            {\n                if( !st[i] )\n                {\n                    st[i] = true;\n                    path[u] = i;\n                    dfs(u + 1);\n                    st[i] = false;\n                }\n            }\n    }\n\n    public static void main(String [] argvs)\n    {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        dfs(0);\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\nconst int N = 10;\nint path[N];\nbool st[N];\nint n;\n\nvoid dfs(int u){\n    // \u5f97\u5230\u7ed3\u679c\n    if( n == u ){\n        for(int i = 0 ;i < n ; i ++) cout<<path[i]<<" ";\n        cout<<endl;\n    }\n\n    // \u6bcf\u4e00\u6b21\u904d\u5386 u++\uff0c \u4e14\u4e0d\u4f1a\u904d\u5386\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u70b9\n    for(int i = 1; i <= n; i ++){\n        if( !st[i] ){\n            st[i] = true;\n            path[u] = i;\n            dfs( u + 1 );\n            st[i] = false;\n        }\n    }\n}\n\nint main (){\n    cin>>n;\n\n    dfs(0);\n\n    return 0;\n}\n')),(0,a.kt)("p",null,"N\u7687\u540e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.*;\n\npublic class Main{\n\n    static int N = 20;\n    static boolean [] col = new boolean [N] , dg = new boolean [N] , udg = new boolean [N];\n    static int n ;\n    static char [][] g = new char [N][N];\n\n    static void dfs(int u) // \u6309\u884c\u641c\u7d22\n    {\n        if( u == n ) // \u641c\u7d22\u5230\u6700\u540e\u4e00\u884c\uff0c\u8f93\u51fa\n        {\n            for(int i = 0 ; i < n ; i++) \n                {\n                    for(int j = 0 ; j < n; j++)\n                        System.out.print(g[i][j]);\n                    System.out.println();\n                }\n\n            System.out.println();\n            return ;\n        }\n\n        for(int i = 0 ;i < n; i++) // \u641c\u7d22\u4e00\u884c\u7684\u6bcf\u4e2a\u4f4d\u7f6e\n            {\n                if( !col[i] && !dg[u + i] && !udg[i - u + n]) // \u526a\u679d\n                {\n                    g[u][i] = 'Q';\n                    col[i] =  dg[u + i] = udg[i - u + n] = true;\n\n                    dfs( u + 1 );\n                    //\u56de\u6eaf\n                    col[i] =  dg[u + i] = udg[i - u + n] = false;\n                    g[u][i] = '.';\n                }\n            }\n    }\n\n    public static void main(String [] argvs)\n    {\n        Scanner sc = new Scanner(System.in);\n\n        n = sc.nextInt();\n\n        for(int i = 0 ; i < n; i++) // \u521d\u59cb\u5316\u68cb\u76d8\n            for(int j = 0; j < n;j++)\n                g[i][j] = '.';\n\n        dfs(0);\n\n    }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 20; // \u8fd9\u91cc\u8bbe\u7f6e\u4e3a20\u662f\u4e3a\u4e86\u65b9\u4fbf\u4e0b\u9762\u5bf9\u89d2\u7ebf\u7684\u5224\u5b9a\nchar g[N][N];\nint n;\n// \u5206\u522b\u4ee3\u8868\u5217\u3001\u4e3b\u5bf9\u89d2\u7ebf\u3001\u526f\u5bf9\u89d2\u7ebf\uff0c\u7528\u5750\u6807\u7684\u504f\u79fb\u91cf\u6765\u6807\u8bc6(\u4e5f\u5c31\u662f y = x + b \u4e2d\u7684 b)\n// 20\u662f\u4e3a\u4e86\u4e0d\u8ba9\u6570\u7ec4\u4e0b\u6807\u4e3a\u8d1f\u6570\u8d8a\u754c\u800c+n\u65f6\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u8d8a\u4e0a\u754c\nbool col[N], dg[N], udg[N]; \n\nvoid dfs(int u) {\n    if( u == n ){   // \u641c\u7d22\u5230\u6700\u540e\u4e00\u884c\uff0c\u8f93\u51fa\n        for( int i = 0; i < n; i ++ ) puts(g[i]);\n        puts(\"\");\n        return;\n    }\n    \n    for(int i = 0 ; i < n; i ++){\n        if( !col[i] && !dg[u + i] && !udg[n + i - u] ) // \u4e3b\u8f74\u3001\u4e3b\u5bf9\u89d2\u7ebf\u3001\u526f\u5bf9\u89d2\u7ebf\u90fd\u6ca1\u6709\u68cb\u5b50\n        {\n            g[u][i] = 'Q';\n            col[i] = dg[u + i] = udg[n + i - u] = true;\n            dfs(u + 1);\n            col[i] = dg[u + i] = udg[n + i - u] = false;\n            g[u][i] = '.';\n        }\n    }\n}\n\nint main (){\n    \n    cin>> n;\n    \n    for(int i = 0 ; i < n ; i ++)\n        for(int j = 0 ; j < n; j ++)\n            g[i][j] = '.';\n    \n    \n    dfs(0);\n    \n    return 0;\n}\n")),(0,a.kt)("h3",{id:"bfs"},"BFS"),(0,a.kt)("p",null,"\u8d70\u8ff7\u5bab"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <cstring>\nusing namespace std;\n\ntypedef pair<int , int > PII;\n\nconst int N = 110;\nint n , m;\nPII q[N * N];\nint d[N][N],g[N][N];\n\nint bfs(){\n    int hh = 0  , tt = 0;\n    q[0] = {0 , 0};\n    memset(d, -1, sizeof d);\n\n    d[0][0] = 0;\n\n    int dx[4] = {0, -1, 1, 0};\n    int dy[4] = {1, 0, 0, -1};\n\n\n    while( hh <= tt)\n        {\n            auto node = q[hh++];\n\n            for(int i = 0 ; i < 4; i++)\n                {\n                    int x = node.first + dx[i], y = node.second + dy[i];\n\n                    if( x >= 0 && x < n && y >= 0 && y < m && d[x][y] == -1 && g[x][y] == 0)// \u5728\u8303\u56f4\u5185\uff0c\u4e14\u6ca1\u6765\u8fc7\n                    {\n                        d[x][y] = d[node.first][node.second] + 1;\n                        q[++tt] = {x, y};\n                    }\n                }\n        }\n\n    return d[n - 1][m - 1];\n}\n\n\nint main ()\n{\n    cin>>n>>m;\n\n    for(int i = 0 ; i < n; i++)\n        for(int j = 0; j < m ;j ++)\n            cin>>g[i][j];\n\n    cout<<bfs()<<endl;\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u6811\u548c\u56fe\u7684\u5b58\u50a8"},"\u6811\u548c\u56fe\u7684\u5b58\u50a8"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6811 \uff0c \u6811\u5c31\u662f\u65e0\u73af\u8fde\u901a\u56fe "),(0,a.kt)("li",{parentName:"ol"},"\u56fe ")),(0,a.kt)("p",null,"\u5b58\u50a8\u65b9\u5f0f\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u9886\u63a5\u77e9\u9635 "),(0,a.kt)("li",{parentName:"ol"},"\u90bb\u63a5\u8868 --- -> \u94fe\u5f0f\u524d\u5411\u661f\uff08\u6570\u7ec4\u5f62\u5f0f\uff09 ")),(0,a.kt)("p",null,"\u6811\u7684\u91cd\u5fc3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"/*\n    \u603b\u4f53\u7684\u601d\u8def\u8fd8\u662f\u9012\u5f52\n    \u628a\u6574\u9897\u6811\u62bd\u8c61\u4e3a \uff08\u81ea\u5df1+\u5b50\u6811\uff09 | \u5176\u5b83 \uff0c\u8fd9\u4e24\u4e2a\u90e8\u5206\n     res = max(\u5b50\u6811\u4e2d\u7684\u6700\u5927\uff0c \u5176\u5b83\uff09 \uff0c\u8fd9\u4e2ares\u662f\u91cd\u5fc3\u5de6\u53f3\u4e24\u8fb9\u7684\u6700\u5927\u503c\n    \u6211\u4eec\u9700\u8981\u7684\u4e2d\u5fc3\u662f res \u6700\u5c0f\uff0c\u4e14\u5c31\u8981\u8fd9\u4e2a\u6700\u5c0f\u503c\n    \u6240\u4ee5 ans = min(res, ans);\n*/\n\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nconst int N = 100010;\nconst int M = N * 2;\nint h[N], e[M], ne[M], idx;\nint n , ans = N ;\nbool st[N];\n\nvoid add (int a , int b)\n{\n    e[idx] = b; ne[idx] = h[a]; h[a] = idx; idx++;\n}\n\nint dfs( int u )\n{\n    st[u] = true;\n    int res = 0; // \u5220\u9664\u67d0\u4e2a\u8282\u70b9\u4e4b\u540e\uff0c\u6700\u5927\u7684\u8fde\u901a\u5b50\u56fe\u8282\u70b9\u6570\n    int sum = 1; // \u4ee5 u \u4e3a\u6839\u7684\u6811\u7684\u8282\u70b9\u6570\uff0c\u5305\u62ecu\u672c\u8eab\n    // \u8bbf\u95ee u \u7684\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\n    for(int i = h[u] ; i != -1 ; i = ne[i])\n        {\n            int j = e[i]; // \u53d6\u5230\u8282\u70b9\n            if( !st[j] )\n            {\n                int s = dfs(j); // \u5b50\u6811\u8282\u70b9\u6570\n                res = max(res, s); // \u6700\u5927\u8fde\u901a\u5b50\u56fe\u7684\u8282\u70b9\u6570\n                sum += s;// \u4ee5j \u4e3a\u6839\u7684\u6811\u7684\u8282\u70b9\u6570\n            }\n        }\n\n    res = max( res ,n - sum); // \u9009\u62e9\u4ee5u\u8282\u70b9\u4e3a\u91cd\u5fc3\u7684\uff0c\u6700\u5927\u7684 \u8fde\u63a5\u5b50\u56fe\u8282\u70b9\u6570\n    ans = min( res , ans); // \u904d\u5386\u8fc7\u7684\u5047\u8bbe\u91cd\u5fc3\u4e2d\uff0c\u6700\u5c0f\u7684 \u6700\u5927\u8fde\u901a\u5b50\u56fe\u7684\u8282\u70b9\u6570\n    return sum ; // \u8fd4\u56de\u8fd9\u4e2a\u5b50\u6811\u7684\u5305\u542b\u7684\u8282\u70b9\u4e2a\u6570\n}\n\nint main()\n{\n    cin>>n;\n\n    memset(h , -1, sizeof h);\n\n    int a, b;\n    for(int i = 0 ; i < n ;i ++)\n        {\n            cin>>a>>b;\n            add(a,b), add(b,a);\n        }\n\n    dfs(1);\n\n    cout<<ans<<endl;\n\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u56fe\u7684\u5c42\u6b21\uff08bfs\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nconst int N = 100010;\nconst int M = N * 2;// \u65e0\u5411\u56fe\u6709\u4e24\u6761\u8fb9\nint h[N] , e[M] , ne[M], idx;\nint d[N] , q[N];// \u5206\u522b\u8868\u793a\u5c42\u6b21 \u3001 \u961f\u5217\nint n , m;\n\nvoid add( int a, int b)\n{\n    e[idx] = b , ne[idx] = h[a], h[a] = idx++;\n}\n\nint bfs()\n{\n    int hh = 0 , tt =0;\n    q[0] = 1;\n    \n    memset(d, -1, sizeof d);\n    \n    d[1] = 0;\n    \n    while( hh <= tt)\n    {\n        int t = q[hh++];\n        for(int i = h[t] ; i != -1; i = ne[i])\n        {\n            int j = e[i];\n            if( d[j] == -1)\n            {\n                d[j] = d[t] + 1;\n                q[++tt] = j;    \n            }\n        }\n    }\n    \n    return d[n];\n}\n\n\nint main()\n{\n    cin>>n>>m;\n    \n    memset(h, -1 ,sizeof h);\n    \n    int a, b;\n    for(int i = 0 ;i < m ;i++)\n    {\n        cin>>a>>b;\n        add(a , b);\n    }\n    \n\n    \n    cout<<bfs()<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("p",null,"\u62d3\u6251\u6392\u5e8f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 100010;\nconst int M = 2 * N;\nint h[N], e[M], ne[M] , idx;\nint q[N], d[N]; // \u8fd9\u91cc\u7684d\u6570\u7ec4\u4ee3\u8868\u5165\u5ea6\nint n , m ;\n\nvoid add( int a , int b)\n{\n    e[idx] = b;\n    ne[idx] = h[a];\n    h[a] = idx++;\n}\n\nbool top(){\n    int hh = 0, tt = -1;\n    \n    \n    //\u8bb0\u5f97\u5148\u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u52a0\u5165\u961f\u5217 | \u6ce8\u610f\u904d\u5386\u7684\u662f\u70b9\uff0c \u4e0b\u6807\u4ece1\u5f00\u59cb\n    for(int i = 1 ;i <= n; i++)\n        if( d[i] == 0)\n            q[++ tt] = i;\n    \n    while( hh <= tt)\n    {\n        int t = q[hh++];\n        for(int i = h[t]; i != -1 ; i = ne[i])\n        {\n            int j = e[i];\n            d[j]--;\n            if( d[j] == 0)\n            {\n                q[++tt] = j;\n            }\n        }\n    }\n    \n    return tt == n - 1;// \u8fd9\u91cc\u662f\u56e0\u4e3a tt \u7684\u521d\u59cb\u503c\u662f -1\n}\n\n\nint main()\n{\n    cin>>n>>m;\n    \n    memset(h , -1, sizeof h);\n    \n    int a, b;\n    for(int i = 0 ; i < m ;i++)\n    {\n        cin>>a>>b;\n        add(a,b);\n        d[b]++;\n    }\n    \n    if( top() )\n    {\n        for(int i = 0 ;i < n ;i ++) \n            cout<<q[i]<<" ";\n    }\n    else puts("-1");\n    \n    return 0;\n}\n')),(0,a.kt)("p",null,"\u516b\u6570\u7801"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6838\u5fc3\u5728\u4e8e\u72b6\u6001\u7684\u62bd\u8c61 "),(0,a.kt)("li",{parentName:"ul"},"\u8f6c\u79fb\u7684\u5b9e\u73b0\u4e5f\u662f\u9700\u8981\u6ce8\u610f\u7684\u70b9---\x3e\u6570\u5b66\u8f6c\u6362 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <queue>\n#include <unordered_map>\n\nusing namespace std;\n\nint bfs(string start)\n{\n    queue<string> q ;\n    unordered_map<string, int> d;\n    \n    q.push(start);\n    d[start] = 0;\n    \n    int dx[4] = { 0 , -1, 1, 0}, dy[4] = {1 , 0 , 0, -1};\n    \n    string end = \"12345678x\";\n    while( q.size() )\n    {\n        auto t = q.front();\n        q.pop();\n        \n        if( t == end ) return d[t];\n        \n        int k = t.find('x');\n        int x = k / 3 , y = k % 3;\n        \n        int distance = d[t];\n        \n        for(int i = 0 ; i < 4 ; i++)\n        {\n            int a = x + dx[i] , b = y + dy[i];\n            if( a >= 0 && a < 3 && b >= 0 && b < 3)\n            {\n                swap(t[a * 3 + b] , t[k]);\n                \n                if( !d.count(t) )\n                {\n                    d[t] = distance + 1;\n                    q.push(t);\n                }\n                \n                swap(t[a * 3 + b], t[k]);\n            }\n        }\n    }\n    \n    return -1;\n    \n}\n\nint main ()\n{\n    string start;\n    for(int i = 0 ; i < 9 ; i++)\n    {\n        char a;\n        cin>>a;\n        start += a;\n    }\n    \n    cout<<bfs(start)<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h2",{id:"\u6700\u77ed\u8def"},"\u6700\u77ed\u8def"),(0,a.kt)("h3",{id:"\u6982\u89c8"},"\u6982\u89c8"),(0,a.kt)("p",null,"\u4e00\u822c\u5206\u4e3a\u4e24\u5927\u7c7b"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"n \u4e3a\u70b9\u6570 m \u4e3a\u8fb9\u6570")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5355\u6e90\u6700\u77ed\u8def "),(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709\u8fb9\u6743\u4e3a\u6b63 "),(0,a.kt)("li",{parentName:"ul"},"\u6734\u7d20dijkstra \u7b97\u6cd5( O(n^2) ) -- ",(0,a.kt)("strong",{parentName:"li"},"\u7a20\u5bc6\u56fe")," "),(0,a.kt)("li",{parentName:"ul"},"\u5806\u4f18\u5316\u7684 dijkstra \u7b97\u6cd5( m * logn ) -- ",(0,a.kt)("strong",{parentName:"li"},"\u7a00\u758f\u56fe")," "),(0,a.kt)("li",{parentName:"ul"},"\u6709\u8fb9\u6743\u4e3a\u8d1f "),(0,a.kt)("li",{parentName:"ul"},"Bellman-Ford ( O( nm ) ) "),(0,a.kt)("li",{parentName:"ul"},"spfa \u6700\u574f ( O(nm ) ) \u4e00\u822c\uff08 O(m) \uff09 "),(0,a.kt)("li",{parentName:"ul"},"\u591a\u6e90\u6c47\u6700\u77ed\u8def "),(0,a.kt)("li",{parentName:"ul"},"Floyd ( O(n ^ 3) ) ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u96be\u70b9"),"\uff1a \u4ece\u5b9e\u9645\u95ee\u9898\u4e2d",(0,a.kt)("strong",{parentName:"p"},"\u62bd\u8c61"),"\u51fa\u6700\u77ed\u8def\u7684\u6a21\u578b\u3002"),(0,a.kt)("h3",{id:"dijkstra"},"dijkstra"),(0,a.kt)("h4",{id:"\u6734\u7d20dijkstra"},"\u6734\u7d20dijkstra"),(0,a.kt)("p",null,"\u7a20\u5bc6\u56fe ---\x3e \u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u50a8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <cstring>\nusing namespace std;\n\nconst int N = 510;\nint g[N][N], dist[N], n, m;\nbool st[N];\n\nint dijkstra()\n{\n    memset(dist, 0x3f , sizeof dist);\n    dist[1] = 0;\n    \n    for(int i = 1; i <= n ; i ++)\n    {\n        //\u627e\u5230\u6700\u5c0f\u672a\u786e\u5b9a\u8ddd\u79bb\u7684\u70b9\n        int t = -1;\n        for(int j = 1; j <= n ;j++)\n        {\n            if( !st[j] && ( t == -1 || dist[t] > dist[j]) )\n                t = j;\n        }\n        // \u7528\u6700\u5c0f\u7684\u70b9\u66f4\u65b0\u8ddd\u79bb\n        for(int j = 1; j <= n ; j++)\n            dist[j] = min( dist[j] , dist[t] + g[t][j]); // \u611f\u89c9\u8fd9\u91cc\u5f88\u5999\uff0c\u5982\u679c\u4e0d\u8fde\u901a\u5c31\u53d6\u4e0d\u5230\u540e\u9762\u7684\u503c\n        // \u6807\u8bb0\u5df2\u8bbf\u95ee\n        st[t] = true;\n    }\n    //\u8fd4\u56de\u7b54\u6848\n    return dist[n] == 0x3f3f3f3f ? -1 : dist[n]; // \u627e\u4e0d\u5230\u7684\u8bdd\u8fd4\u56de -1\n}\n\nint main()\n{\n    cin>>n>>m;\n    \n    memset(g, 0x3f, sizeof g);\n    \n    for(int i = 0 ; i < m ;i ++)\n    {\n        int a, b, c;\n        cin>>a>>b>>c;\n        \n        g[a][b] = min(g[a][b] , c);\n    }\n    \n    cout<<dijkstra()<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h4",{id:"\u5806\u4f18\u5316\u7248\u672c"},"\u5806\u4f18\u5316\u7248\u672c"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"tips \u6ca1\u6709\u8c03\u6574\u8fc7\u7684cin \u8981\u6bd4scanf \u6162\u4e00\u500d\u5de6\u53f3")),(0,a.kt)("p",null,"\u4f18\u5316\u7684\u70b9\u5728\u4e8e\u5bfb\u627e\u4e3a\u786e\u5b9a\u7684\u70b9\u4e2d\u7684\u8def\u5f84\u6700\u77ed\u7684\u70b9 -\u300b \u7528\u4f18\u5148\u961f\u5217\u4ee3\u66ff\u5faa\u73af\n\u7f3a\u70b9\uff1a\u4f18\u5148\u961f\u5217\u5bf9\u7a7a\u95f4\u7684\u5360\u7528\u6bd4\u8f83\u9ad8\uff0c\u5982\u679c\u8981\u8ffd\u6c42\u7a7a\u95f4\u5229\u7528\u7387\u7684\u8bdd\uff0c\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff08\u4e3b\u8981\u662f\u5b9e\u73b0\u5220\u9664\u64cd\u4f5c\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n#include <queue>\n// #include <vector> \u5b9a\u4e49\u5c0f\u6839\u5806\u7684\u65f6\u5019\u4e0d\u8981\u628a\u5b83\u5f15\u5165\u8fdb\u6765\nusing namespace std;\n\ntypedef pair<int , int> PII;\n\nconst int N = 1000010;\nint h[N], e[N], ne[N], w[N], idx;\nint n , m ;\nint dist[N];// \u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\nbool st[N]; // \u6807\u8bb0\u5df2\u7ecf\u662f\u6700\u77ed\u8ddd\u79bb\n\nvoid add(int a, int b , int c) // \u90bb\u63a5\u8868\uff0c \u4f7f\u7528w\u6570\u7ec4\u5b58\u50a8\u6743\u91cd\n{\n    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;\n}\n\nint dijkstra()\n{\n    memset(dist, 0x3f, sizeof dist);//\u5355\u6e90\u6700\u77ed\u8def\uff0c\u521d\u59cb\u5316\u8ddd\u79bb\n    dist[1] = 0;\n    priority_queue<PII, vector<PII>, greater<PII>> heap;\n    heap.push({0, 1}); // first \u5b58\u50a8\u8ddd\u79bb, second \u5b58\u50a8\u7f16\u53f7\n    \n    while( heap.size() ) \n    {\n        auto t = heap.top();\n        heap.pop();\n        \n        int ver = t.second,  distance = t.first;\n        \n        if(st[ver]) continue; // \u5df2\u7ecf\u627e\u8fc7\u4e86\u7684\uff0c\u4e0d\u7528\u518d\u627e\u4e86\n        st[ver] = true;//\u5df2\u7ecf\u662f\u5806\u9876\u7684\u4e86\uff0c\u6700\u5c0f\u7684\u4e86\uff0c\u6253\u4e0a\u6807\u8bb0\n        \n        for(int i = h[ver]; i != -1 ; i = ne[i]) // \u8fd9\u91cc\u662f\u901a\u8fc7\u90bb\u63a5\u8868\u5b58\u50a8\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u80fd\u8d70\u5230\u7684\n        {\n            int j = e[i];\n            if( dist[j] > dist[ver] + w[i])\n            {\n                dist[j] = dist[ver] + w[i];\n                heap.push({dist[j], j});\n            }\n        }\n    }\n    \n    return dist[n] == 0x3f3f3f3f ? -1 : dist[n];\n    \n}\n\n\nint main()\n{\n    memset(h , -1, sizeof h); // \u521d\u59cb\u5316\u90bb\u63a5\u8868\u7684\u5934\n    scanf("%d%d", &n, &m);\n    \n    for(int i = 0 ; i < m ; i++)\n    {\n        int a, b ,c;\n        scanf("%d%d%d", &a, &b, &c);\n        add(a, b, c);\n    }\n    \n    cout<<dijkstra()<<endl;\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"bellman---ford"},"Bellman - Ford"),(0,a.kt)("p",null,"\u6ce8\u610f\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u56fe\u4e2d\u4e0d\u80fd\u6709\u8d1f\u6743\u56de\u8def\uff0c \u56e0\u4e3a\u4f1a\u5728\u56de\u8def\u4e2d\u5faa\u73af\uff0c \u5f62\u6210 -\u221e\u7684\u7ed3\u679c\uff0c \u53ef\u4ee5\u7528\u6765\u627e",(0,a.kt)("strong",{parentName:"li"},"\u8d1f\u73af"),"\uff0c \u5f53\u5728\u7b2cn\u91cd\u5faa\u73af\u65f6\u5019\u5982\u679c\u8fd8\u5728\u66f4\u65b0\u65f6\uff0c\u5c31\u8bf4\u660e\u56de\u8def\u4e2d\u5b58\u5728n\u6761\u8fb9\uff0c \u4e5f\u5c31\u662f\u5b58\u5728 n + 1 \u4e2a\u70b9\uff0c \u6240\u4ee5\u5728\u6700\u77ed\u8def\u5f84\u4e2d\u5b58\u5728\u91cd\u590d\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u73af\uff0c\u800c\u4e14\u7531\u4e8e\u6b63\u5728\u66f4\u65b0\uff0c\u6240\u4ee5\u662f\u8d1f\u73af\u3002 "),(0,a.kt)("li",{parentName:"ul"},"\u4f46\u662f\u4e00\u822c\u4e0d\u7528Bellman - Ford \u6765\u5bfb\u627e\u8d1f\u73af\uff0c \u56e0\u4e3aSPFA\u53ef\u4ee5\u66f4\u5feb "),(0,a.kt)("li",{parentName:"ul"},"Bellman-Ford \u7b97\u6cd5\u7684\u7279\u70b9\u5728\u4e8e\u5b83\u7684\u5faa\u73af\u6b21\u6570\u662f\u6709\u610f\u4e49\u7684\uff1a\u5f53\u5faa\u73afk\u6b21\uff0c\u4e5f\u5c31\u662f\u7ecf\u8fc7",(0,a.kt)("strong",{parentName:"li"},"\u4e0d\u8d85\u8fc7k\u6761\u8fb9"),"\u80fd\u5f97\u5230\u7684\u6700\u5c0f\u8ddd\u79bb ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 510, M = 10010;\n\nstruct Edge{ //\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u8fb9\n    int s, t, w;    \n}edges[M]; \n\nint n, m, k;\nint dist[N];\nint backup[N];\n\nvoid bellman_ford(){\n    memset(dist, 0x3f, sizeof dist);\n    dist[1] = 0;\n    \n    for(int i = 0 ; i < k ; i++) // \u904d\u5386\u6bcf\u4e00\u4e2a\u9876\u70b9\n    {\n        memcpy(backup, dist, sizeof dist); // \u5907\u4efd,\u5b58\u50a8\u4e0a\u4e00\u6b21\u66f4\u65b0\u5b8c\u6210\u7684\u8ddd\u79bb\uff0c\u9632\u6b62\u6570\u636e\u77ed\u8def\n        for(int j =  0 ; j < m ; j++)\n        {\n            auto e = edges[j];\n            dist[e.t] = min( dist[e.t], backup[e.s] + e.w); // \u4f7f\u7528\u5907\u4efd\u7684\u8ddd\u79bb\u6765\u66f4\u65b0\n        }\n    }\n}\n\nint main (){\n    scanf("%d%d%d", &n, &m, &k);\n    \n    for(int i = 0 ;i < m ;i++)\n    {\n        int s, t, w;\n        scanf("%d%d%d", &s, &t, &w);\n        edges[i] = {s, t, w};// \u7ed9\u8fb9\u6570\u7ec4\u8d4b\u521d\u503c\n    }\n    \n    bellman_ford();\n    //\u56e0\u4e3a\u6709\u8d1f\u6743\u8fb9\uff0c \u6240\u4ee5\u53ef\u80fd\u4f1a\u5c0f\u4e8e\u5b9a\u4e49\u7684\u6700\u5927\u503c\uff0c\u4f46\u7531\u4e8e\u64cd\u4f5c\u6570\u6709\u9650\u5236\uff0c\u6240\u4ee5\u6700\u5927\u503c/2\u8db3\u591f\u5224\u65ad\n    if( dist[n] > 0x3f3f3f3f / 2) puts("impossible");\n    else printf("%d\\n", dist[n]);\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"spfa"},"SPFA"),(0,a.kt)("h4",{id:"\u6c42\u6700\u77ed\u8def"},"\u6c42\u6700\u77ed\u8def"),(0,a.kt)("p",null,"\u6ce8\u610f\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u56fe\u4e2d\u4e0d\u80fd\u5b58\u5728\u8d1f\u73af "),(0,a.kt)("li",{parentName:"ul"},"\u6838\u5fc3\u5c31\u662f\u53ea\u66f4\u65b0\u53d8\u5c0f\u4e86\u7684\uff0c \u800cBellman-Ford\u662f\u6240\u6709\u7684\u90fd\u66f4\u65b0\u4e00\u904d "),(0,a.kt)("li",{parentName:"ul"},"\u540c\u65f6\u7531\u4e8e\u53ea\u66f4\u65b0\u53d8\u5c0f\u4e86\u7684\uff0c\u5c31\u4e0d\u7528\u5907\u4efd\u6570\u7ec4\u4e86 ")),(0,a.kt)("p",null,"\u603b\u4f53\u601d\u8def\u8fd8\u662f\u904d\u5386\u6240\u6709\u8fb9\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8981\u904d\u5386\u5230\uff0c\u53ea\u904d\u5386\u90a3\u4e9b\u53d8\u5c0f\u4e86\u7684\u70b9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 100010, M = 100010;\nint h[N], e[N], ne[N], w[N], idx;\nint n , m ;\nint dist[N];\nbool st[N];// \u8868\u793a\u5728\u961f\u5217\u91cc\u9762\u7684\u8282\u70b9\n\nvoid add(int a, int b, int c)\n{\n    e[idx] = b;\n    w[idx] = c;\n    ne[idx] = h[a];\n    h[a] = idx++;\n}\n\nint spfa()\n{\n    memset(dist, 0x3f, sizeof dist);\n    dist[1] = 0;\n    \n    queue<int> q;\n    q.push(1);\n    st[1] = true;\n    \n    while( q.size() )\n    {\n        int t = q.front();\n        q.pop();\n        \n        st[t] = false; // \u4e0d\u8981\u5fd8\u4e86\u53d6\u51fa\u6765\u4e4b\u540e\u6062\u590d\u72b6\u6001\n        \n        for(int i = h[t]  ;i != -1 ; i = ne[i])\n        {\n            int j = e[i];\n            if( dist[j] > dist[t] + w[i])\n            {\n                dist[j] = dist[t] + w[i];\n                if( !st[j] )\n                {\n                    q.push(j);\n                    st[j] = true;\n                }\n            }\n        }\n    }\n    \n    return dist[n]; // \u5728\u8fd4\u56de\u5224\u65ad\u6761\u4ef6\u7684\u65f6\u5019\u6ce8\u610f\u9898\u76ee\u8981\u6c42\n     \n}\n\nint main()\n{\n    scanf("%d%d", &n, &m);\n    \n    memset(h , -1, sizeof h);\n    \n    while( m -- )\n    {\n        int a, b, c;\n        scanf("%d%d%d", &a, &b, &c);\n        add(a, b, c);\n    }\n    \n    int res = spfa();\n    \n    if( res == 0x3f3f3f3f ) cout<<"impossible"<<endl;\n    else cout<<res<<endl;\n    \n    return 0;\n}\n')),(0,a.kt)("h4",{id:"spfa\u6c42\u8d1f\u73af"},"spfa\u6c42\u8d1f\u73af"),(0,a.kt)("p",null,"\u539f\u7406\u548cBellman-Ford \u76f8\u540c\uff0c\u90fd\u662f\u62bd\u5c49\u539f\u7406\n\u6ce8\u610f\u70b9\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8d1f\u73af\u5e76\u4e0d\u4e00\u5b9a\u5b58\u5728\u4e8e1->n "),(0,a.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u4e00\u4e2a cnt \u6570\u7ec4\u6765\u8fdb\u884c\u5224\u5b9a ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 2010, M = 10010;\n\nint n , m;\nint h[N], e[M], ne[M], w[M], idx;\nint dist[N], cnt[N];\nbool st[N];\n\n\nvoid add(int a, int b ,int c)\n{\n    e[idx] = b;\n    ne[idx] = h[a];\n    w[idx] = c;\n    h[a] = idx ++;\n}\n\nbool spfa()\n{\n    queue<int> q ;\n    for(int i = 1 ;i <= n; i++) \n    {\n        q.push(i); // \u6240\u6709\u7684\u70b9\u90fd\u627e\u4e00\u904d\uff0c\u8d1f\u73af\u4e0d\u4e00\u5b9a\u5728\u4ee51\u4e3a\u8d77\u70b9\u7684\u6700\u77ed\u8def\u4e0a \n        st[i] = true;\n    }\n    \n    while (q.size())\n    {\n        int t = q.front();\n        q.pop();\n        \n        st[t] = false;\n        \n        for(int i = h[t] ; i != -1; i = ne[i])\n        {\n            int j = e[i];\n            if( dist[j] > dist[t] + w[i]){\n                \n                dist[j] = dist[t] + w[i];\n                cnt[j] = cnt[t] + 1; // \u6ce8\u610f\u8fd9\u91cc\u7684\u9012\u63a8\u5173\u7cfb\n                \n                if( cnt[j] >= n) return true;\n                \n                if( !st[j] )\n                {\n                    q.push(j);\n                    st[j] = true;\n                }\n            }\n        }\n        \n    }\n    \n    return false;\n}\n\nint main ()\n{\n    scanf("%d%d", &n , &m);\n    \n    memset(h , -1, sizeof h);\n    \n    while( m -- > 0)   \n    {\n        int a, b, c;\n        scanf( "%d%d%d", &a, &b, &c);\n        add(a, b, c);\n    }\n    \n    if( spfa() ) puts("Yes");\n    else puts("No");\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"floyd"},"Floyd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 210, INF = 0x3f3f3f3f;\nint g[N][N];\nint n , m , q;\n\nvoid floyd()\n{\n    for(int k = 1; k <= n ; k++)\n        for(int i = 1 ; i <= n ;i++)\n            for(int j = 1; j <= n ; j++)\n                g[i][j] = min( g[i][j] , g[i][k] + g[k][j]);// \u4e00\u6bb5\u7684\u957f\u5ea6\u548c\u4e24\u7aef\u63a5\u8d77\u6765\u7684\u957f\u5ea6\u53d6\u5c0f\n}\n\nint main ()\n{\n    cin>>n>>m>>q;\n    \n    for(int i = 1 ; i <= n ; i++)\n        for(int j = 1 ;j <= n ; j++)\n            if( i == j ) g[i][j] = 0;\n            else g[i][j] = INF;\n    \n    while( m --)\n    {\n        int s, t, w;\n        cin>>s>>t>>w;\n        g[s][t] = min(g[s][t], w); // \u6392\u9664\u91cd\u590d\u7684\u3001\u6bd4\u8f83\u5927\u7684\u8fb9\n    }\n    \n    floyd();\n    \n    while( q -- )\n    {\n        int s , t;\n        cin>>s>>t;\n        \n        if( g[s][t] > INF / 2 ) puts("impossible");\n        else cout<<g[s][t]<<endl;\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u5c0f\u603b\u7ed3"},"\u5c0f\u603b\u7ed3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"---Dijkstra-\u6734\u7d20O(n^2)\n\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4, dist[1] = 0, dist[i] = inf;\nfor n\u6b21\u5faa\u73af \u6bcf\u6b21\u5faa\u73af\u786e\u5b9a\u4e00\u4e2amin\u52a0\u5165S\u96c6\u5408\u4e2d\uff0cn\u6b21\u4e4b\u540e\u5c31\u5f97\u51fa\u6240\u6709\u7684\u6700\u77ed\u8ddd\u79bb\n\u5c06\u4e0d\u5728S\u4e2ddist_min\u7684\u70b9->t\nt->S\u52a0\u5165\u6700\u77ed\u8def\u96c6\u5408\n\u7528t\u66f4\u65b0\u5230\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\n--tips: \u8fd9\u91cc\u7684S\u96c6\u5408\u662f\u901a\u8fc7\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\n\n---Dijkstra-\u5806\u4f18\u5316O(mlogm)\n\u5229\u7528\u90bb\u63a5\u8868\uff0c\u4f18\u5148\u961f\u5217\n\u5728priority_queue[HTML_REMOVED], greater[HTML_REMOVED] > heap;\u4e2d\u5c06\u8fd4\u56de\u5806\u9876\n\u5229\u7528\u5806\u9876\u6765\u66f4\u65b0\u5176\u4ed6\u70b9\uff0c\u5e76\u52a0\u5165\u5806\u4e2d\u7c7b\u4f3c\u5bbd\u641c\n\n---Bellman_fordO(nm)\n\u6ce8\u610f\u8fde\u9501\u73b0\u8c61 \u9700\u8981\u5907\u4efd, struct Edge{inta,b,c} Edge[M];\n\u521d\u59cb\u5316dist, \u677e\u5f1bdist[x.b] = min(dist[x.b], backup[x.a]+x.w);\n\u677e\u5f1bk\u6b21\uff0c\u6bcf\u6b21\u8bbf\u95eem\u6761\u8fb9\n\n----Spfa O(n)~O(nm)\n\u5229\u7528\u961f\u5217\u4f18\u5316\u4ec5\u52a0\u5165\u4fee\u6539\u8fc7\u7684\u5730\u65b9\nfor k\u6b21\nfor \u6240\u6709\u8fb9\u5229\u7528\u5bbd\u641c\u6a21\u578b\u53bb\u4f18\u5316bellman_ford\u7b97\u6cd5\n\u66f4\u65b0\u961f\u5217\u4e2d\u5f53\u524d\u70b9\u7684\u6240\u6709\u51fa\u8fb9\n\n---Floyd O(n^3)\n\u521d\u59cb\u5316d\nk, i, j \u53bb\u66f4\u65b0d\n")),(0,a.kt)("h2",{id:"\u6700\u5c0f\u751f\u6210\u6811"},"\u6700\u5c0f\u751f\u6210\u6811"),(0,a.kt)("h3",{id:"prim-\u7b97\u6cd5"},"Prim \u7b97\u6cd5"),(0,a.kt)("h4",{id:"\u7a20\u5bc6\u56fe\u6734\u7d20\u7248on--2"},"\u7a20\u5bc6\u56fe\uff08\u6734\u7d20\u7248\uff09O(n ^ 2)"),(0,a.kt)("p",null,"\u7b97\u6cd5\u6d41\u7a0b\uff1a\n",(0,a.kt)("strong",{parentName:"p"},"dijkstra"),":"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4 "),(0,a.kt)("li",{parentName:"ol"},"\u8fed\u4ee3n\u6b21\uff0c\u6bcf\u6b21\u5bfb\u627e\u4e0d\u5728\u96c6\u5408\u4e2d\u7684\uff0c \u8ddd\u79bb\u6700\u5c0f\u7684\u70b9 "),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\u6765\u66f4\u65b0\u5176\u5b83\u70b9\u5230",(0,a.kt)("strong",{parentName:"li"},"\u8d77\u70b9"),"\u7684\u8ddd\u79bb ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prim")," :"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4 "),(0,a.kt)("li",{parentName:"ol"},"\u8fed\u4ee3\uff0c\u627e\u5230\u96c6\u5408\u5916\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9 -> t "),(0,a.kt)("li",{parentName:"ol"},"\u7528 t \u66f4\u65b0\u5176\u5b83\u70b9\u5230",(0,a.kt)("strong",{parentName:"li"},"\u96c6\u5408"),"\u7684\u8ddd\u79bb "),(0,a.kt)("li",{parentName:"ol"},"\u5c06 t \u52a0\u5165\u5230\u96c6\u5408\u4e2d ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n\nusing namespace std;\nconst int N = 510, INF = 0x3f3f3f3f;\nint g[N][N], d[N]; // \u7a20\u5bc6\u56fe\uff0c\u4f7f\u7528\u90bb\u63a5\u77e9\u9635 \uff0c d\u5b58\u50a8\u70b9\u5230\u96c6\u5408\u7684\u6700\u77ed\u8ddd\u79bb\nbool st[N]; // \u6807\u8bc6\u96c6\u5408\nint n , m;\n\nint prim(){\n    \n    memset(d, 0x3f, sizeof d);\n    \n    int res = 0;// \u5b58\u50a8\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u6743\u503c\n    \n    for(int i = 0 ; i < n ;i ++){\n            //1.\u67e5\u627e\u5230\u96c6\u5408\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\n        int t = -1;\n        for(int j = 1; j <= n ;j++)\n            if( !st[j] && ( t == -1 || d[t] > d[j]))\n                t = j;\n    \n        if( i && d[t] == INF) return INF;\n        \n        if( i ) res += d[t];\n        st[t] = true;\n        \n        for(int j = 1; j <= n ;j++) d[j] = min(d[j] , g[j][t]); // \u66f4\u65b0\u6bcf\u4e2a\u70b9\u5230\u96c6\u5408\u7684\u6700\u77ed\u8ddd\u79bb\n    }\n    return res;\n}\n\nint main(){\n    \n    cin>>n>>m;\n    \n    memset(g, 0x3f , sizeof g);\n    \n    while( m -- )\n    {\n        int a, b, c;\n        cin>>a>>b>>c;\n        g[a][b] = g[b][a] = min(g[a][b], c); // \u65e0\u5411\u56fe\u5b58\u4e24\u4e2a\u65b9\u5411\n    }\n    \n    int t = prim();\n    \n    if( t == INF) cout<<"impossible"<<endl;\n    else cout<<t<<endl;\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"kruskal-\u7b97\u6cd5-omlogm----\u7a00\u758f\u56fe"},"Kruskal \u7b97\u6cd5 O(mlogm) -- \u7a00\u758f\u56fe"),(0,a.kt)("p",null,"\u7b97\u6cd5\u6d41\u7a0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5c06\u6240\u6709",(0,a.kt)("strong",{parentName:"li"},"\u8fb9"),"\u6309\u6743\u91cd\u6392\u5e8f O( mlogm ) \uff0c\u7b97\u6cd5\u7684\u901f\u5ea6\u74f6\u9888 "),(0,a.kt)("li",{parentName:"ol"},"\u679a\u4e3e\u6bcf\u6761\u8fb9 a -> b \uff0c \u6743\u91cd\u4e3a c ")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c a, b \u4e0d\u8fde\u901a\uff0c\u5c06\u8fb9\u52a0\u5165\u96c6\u5408\u4e2d")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\n\u57fa\u672c\u601d\u8def\uff1a\n1. \u8868\u793a\u8fb9\uff0c \u6309\u8fb9\u6743\u6392\u5e8f\n2. \u5982\u679c\u4e0d\u6210\u73af\uff0c\u5c31\u52a0\u5165\u96c6\u5408(\u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad)\n3. \u8bb0\u5f55\u96c6\u5408\u4e2d\u70b9\u7684\u6570\u91cf\uff0c\u5982\u679c\u5c11\u4e8e\u603b\u6570\uff0c\u8bf4\u660e\u65e0\u6cd5\u751f\u6210\n*/\n\n#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 1e5 + 10, M = 2e5 + 10, INF = 0x3f3f3f3f;\nint p[N];\nint n, m;\n\n// \u5b9a\u4e49\u7ed3\u6784\u4f53\nstruct Edge\n{\n  int a, b, w;\n  // \u7b2c\u4e00\u4e2a const \u8868\u793a\u5e38\u91cf\u5f15\u7528\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u4f20\u5165\u7684\u53d8\u91cf\n  // \u7b2c\u4e8c\u4e2a const \u8868\u793a\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u7ed3\u6784\u4f53\u5185\u7684\u5185\u5bb9\n  bool operator<(const Edge &W) const\n  {\n    return w < W.w;\n  }\n} edges[M];\n\nint find(int x)\n{\n  if (x == p[x])\n    return x;\n  else\n    return p[x] = find(p[x]);\n}\n\nint kruskal()\n{\n  sort(edges, edges + m);\n\n  for (int i = 1; i <= n; i++)\n    p[i] = i;\n\n  int res = 0, cnt = 1; // \u8fd9\u91cccnt\u4ece1\u5f00\u59cb\u65b9\u4fbf\u540e\u9762\u5224\u65ad\n  for (int i = 0; i < m; i++)\n  {\n    int a = edges[i].a, b = edges[i].b, w = edges[i].w;\n    a = find(a), b = find(b);\n\n    // \u6ca1\u6709\u6210\u73af\u4e14\u6ca1\u6709\u52a0\u5165\u8fc7\u96c6\u5408,\u5c31\u52a0\u5165\u96c6\u5408\n    if (a != b)\n    {\n      p[a] = b;\n      res += w;\n      cnt++;\n    }\n  }\n\n  if (cnt < n)\n    return INF;\n  else\n    return res;\n}\n\nint main()\n{\n  cin >> n >> m;\n\n  // \u7ed3\u6784\u4f53\u521d\u59cb\u5316\u7684\u8bed\u6cd5\n  for (int i = 0; i < m; i++)\n  {\n    int a, b, w;\n    cin >> a >> b >> w;\n    edges[i] = {a, b, w};\n  }\n\n  int t = kruskal();\n\n  if (t == INF)\n    cout << "impossible" << endl;\n  else\n    cout << t << endl;\n\n  return 0;\n}\n')),(0,a.kt)("h2",{id:"\u4e8c\u5206\u56fe"},"\u4e8c\u5206\u56fe"),(0,a.kt)("p",null,"\u5b9a\u4e49\uff1a\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4e8c\u5206\u56fe\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff0c\u53ea\u6709\u96c6\u5408\u4e4b\u95f4\u5b58\u5728\u8fb9\uff0c\u800c\u96c6\u5408\u5185\u90e8\u6ca1\u6709\u8fb9\n\u6027\u8d28\uff1a\u5f53\u4e14\u4ec5\u5f53\u56fe\u5f53\u4e2d\u4e0d\u542b",(0,a.kt)("strong",{parentName:"p"},"\u5947\u6570\u73af"),"\uff08\u5145\u8981\u6761\u4ef6\uff09\n\u8fc7\u7a0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u9009\u53d6\u4e00\u4e2a\u70b9\u52a0\u5165\u5de6\u8fb9 "),(0,a.kt)("li",{parentName:"ol"},"\u904d\u5386\u5b83\u8fde\u901a\u7684\u7b2c\u4e00\u5c42\u8282\u70b9\uff0c\u52a0\u5165\u53f3\u8fb9 "),(0,a.kt)("li",{parentName:"ol"},"\u518d\u904d\u5386\u4e0b\u4e00\u5c42\u8282\u70b9\uff0c\u52a0\u5165\u5de6\u8fb9 "),(0,a.kt)("li",{parentName:"ol"},"\u9012\u5f52\u5b9e\u73b0\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u67d3\u8272 ")),(0,a.kt)("p",null,"\u4e0d\u542b\u6709\u5947\u6570\u73af\u65f6\uff0c\u4e0a\u8ff0\u8fc7\u7a0b\u6ca1\u6709\u77db\u76fe"),(0,a.kt)("h3",{id:"\u67d3\u8272\u6cd5-o-m-n-"},"\u67d3\u8272\u6cd5 O( m +n )"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nconst int N = 100010, M = 200020;\n\nint h[N] , e[M], ne[M], idx;\nint color[N];\nint n, m;\n\nvoid add(int a, int b){\n    e[idx] = b;\n    ne[idx] = h[a];\n    h[a] = idx++;\n}\n\nbool dfs(int u, int c)\n{\n    color[u] = c;// \u7ed9\u8fd9\u4e2a\u8282\u70b9\u67d3\u8272\n    \n    for(int i = h[u] ; i != -1 ; i = ne[i]) // \u7ed9\u5b83\u8fde\u901a\u7684\u8282\u70b9\u67d3\u8272\n    {\n        int j = e[i];\n        if( !color[j] )\n        {\n            if( !dfs(j , 3 - c)) return false; // 3 - c \u662f\u4e3a\u4e86\u5728 1 \u548c 2 \u4e4b\u95f4\u5207\u6362\n        }\n        else if( color[j] == c) return false ; // \u548c\u7236\u8282\u70b9\u4e00\u4e2a\u989c\u8272\uff0c\u51b2\u7a81\n    }\n    \n    return true;\n}\n\nint main ()\n{\n    cin>>n>>m;\n    \n    memset(h, -1 , sizeof h);\n    \n    while( m -- )\n    {\n        int a, b;\n        cin>>a>>b;\n        add(a, b), add(b, a);\n    }\n    \n    bool flag = true;\n    \n    for(int i = 1; i <= n ;i++) // \u56e0\u4e3a\u4e0d\u4e00\u5b9a\u662f\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u904d\u5386\u5230\u6240\u6709\u70b9\n    {\n        if( !color[i] )\n        {\n            if( !dfs(i , 1) )\n            {\n                flag = false;\n                break;\n            }\n        }\n    }\n    \n    if( flag ) puts("Yes");\n    else puts("No");\n    \n    return 0;\n}\n')),(0,a.kt)("p",null,"TARGET DECK: \u7b97\u6cd5"),(0,a.kt)("h3",{id:"\u5308\u7259\u5229\u7b97\u6cd5-omn"},"\u5308\u7259\u5229\u7b97\u6cd5 O(mn)"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5b9e\u9645\u8fd0\u884c\u65f6\u95f4\u4e00\u822c\u8fdc\u5c0f\u4e8e O(mn)")),(0,a.kt)("p",null,"\u57fa\u672c\u601d\u8def\uff1a\n\u6709\u4e24\u8fb9"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u9009\u53d6\u5de6\u8fb9\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5728\u548c\u5b83\u8fde\u901a\u7684\u70b9\u4e2d\u5bfb\u627e\u4e00\u4e2a\u672a\u5339\u914d\u7684\u70b9 "),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"\u6838\u5fc3"),"\uff1a \u5982\u679c\u6240\u6709\u70b9\u90fd\u5df2\u7ecf\u5339\u914d\u4e86\uff0c \u90a3\u4e48\u8ba9\u548c\u53f3\u8fb9\u70b9",(0,a.kt)("strong",{parentName:"li"},"\u5339\u914d\u7684\u70b9"),"\u5bfb\u627e\u53f3\u8fb9\u662f\u5426\u8fd8\u6709\u6ca1\u5339\u914d\u7684\u70b9\uff0c\u5982\u679c\u6709\uff0c\u5c31\u5339\u914d "),(0,a.kt)("li",{parentName:"ol"},"\u7136\u540e\u5c06\u5f53\u524d\u5df2\u7ecf\u5339\u914d\u7684\u70b9\u548c\u5f53\u524d\u5de6\u8fb9\u8282\u70b9\u5339\u914d ",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u4e24\u5168\u5176\u7f8e~~~")))),(0,a.kt)("p",null,"\u6ce8\u610f\u70b9\uff1a\u5224\u91cd(\u8fd9\u91cc\u4e3b\u8981\u662f\u5224\u53f3\u8fb9) | find\u51fd\u6570\u7684\u610f\u4e49 | \u4e3a\u5565\u5b58\u5355\u8fb9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 510, M = 100010; // \u8fd9\u91cc\u867d\u7136\u662f\u65e0\u5411\u8fb9\uff0c \u4f46\u662f\u5b9e\u9645\u7684\u7b97\u6cd5\u6d41\u7a0b\u4e2d\u5b58\u6709\u5411\u8fb9\u5c31\u53ef\u4ee5\u5b8c\u6210\nint h[N], e[M], ne[M], idx;\nint match[N]; // \u7528\u6765\u8bb0\u5f55\u5df2\u7ecf\u5339\u914d\u7684\u70b9\nint n1, n2 , m;\nbool st[N]; // \u907f\u514d\u5728\u4e00\u6b21find\u8fc7\u7a0b\u4e2d\u8bbf\u95ee\u91cd\u590d\u7684\u53f3\u8fb9\u7684\u70b9\n\nvoid add(int a, int b){\n    e[idx] = b, ne[idx] = h[a], h[a] = idx++;\n}\n\nbool find(int u )\n{\n    for(int i = h[u]; i != -1; i = ne[i]) // \u7ed9 u \u5bfb\u627e\u5339\u914d\n    {\n        int j = e[i];\n        \n        if( !st[j] )\n        {\n            st[j] = true;\n            if( match[j] == 0 || find(match[j]) )\n            {\n                match[j] = u;\n                return true; // \u53ef\u4ee5\u627e\u5230\uff0c\u8fd4\u56de true\n            }\n        }\n    }\n    \n    return false; // \u627e\u4e0d\u5230\uff0c \u8fd4\u56de false\n}\n\nint main (){\n    \n    cin>>n1>>n2>>m;\n    \n    memset(h , -1, sizeof h);\n    \n    while( m -- )\n    {\n        int a, b;\n        cin>>a>>b;\n        add(a,b);\n    }\n    \n    int res = 0; // \u5b58\u50a8\u5339\u914d\u6570\u91cf\n    \n    for(int i = 1; i <= n1 ;i ++) // \u8003\u8651\u6bcf\u4e00\u4e2a\u5de6\u8fb9\u7684\u70b9\n    {\n        memset(st , false , sizeof st);\n        \n        if( find( i ) ) res ++;\n    }\n    \n    cout<<res<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h1",{id:"\u6570\u5b66\u77e5\u8bc6"},"\u6570\u5b66\u77e5\u8bc6"),(0,a.kt)("h2",{id:"\u6570\u8bba"},"\u6570\u8bba"),(0,a.kt)("h3",{id:"\u8d28\u6570"},"\u8d28\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"1.\u8d28\u6570\u548c\u5408\u6570\u662f\u9488\u5bf9\u6240\u6709\u5927\u4e8e1\u7684 \u201c\u81ea\u7136\u6570\u201d \u6765\u5b9a\u4e49\u7684(\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e1\u7684\u6570\u90fd\u4e0d\u662f\u8d28\u6570).\n2.\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e1\u7684\u6574\u6570\u65e2\u4e0d\u662f\u8d28\u6570\u4e5f\u4e0d\u662f\u5408\u6570.\n3.\u8d28\u6570\u548c\u7d20\u6570\u90fd\u662f\u540c\u4e00\u79cd\u6027\u8d28,\u53ea\u662f\u53eb\u6cd5\u4e0d\u540c.\n\n4.\u8d28\u6570\u7684\u5224\u5b9a------\u8bd5\u9664\u6cd5 \u6216 \u516d\u500d\u539f\u7406.\n(1).\u201dd|n\u201d\u4ee3\u8868\u7684\u542b\u4e49\u662fd\u80fd\u6574\u9664n,(\u8fd9\u91cc\u7684\u201d|\u201d\u4ee3\u8868\u6574\u9664).\n(2).\u4e00\u4e2a\u5408\u6570\u7684\u7ea6\u6570\u603b\u662f\u6210\u5bf9\u51fa\u73b0\u7684,\u5982\u679cd|n,\u90a3\u4e48(n/d)|n,\u56e0\u6b64\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u8d28\u6570\u7684\u65f6\u5019,\n\u53ea\u9700\u8981\u5224\u65ad\u8f83\u5c0f\u7684\u90a3\u4e00\u4e2a\u6570\u80fd\u5426\u6574\u9664n\u5c31\u884c\u4e86,\u5373\u53ea\u9700\u679a\u4e3ed<=(n/d),\u5373dd<=n,d<=sqrt(n)\u5c31\u884c\u4e86.\n(3).sqrt(n)\u8fd9\u4e2a\u51fd\u6570\u6267\u884c\u7684\u65f6\u5019\u6bd4\u8f83\u6162.\n\n\n5.\u5206\u89e3\u8d28\u56e0\u6570------\u8bd5\u9664\u6cd5.(\u7528\u5230\u7684\u539f\u7406:\u552f\u4e00\u5206\u89e3\u5b9a\u7406(\u7b97\u6570\u57fa\u672c\u5b9a\u7406))\n(1).\u7279\u522b\u8981\u6ce8\u610f------\u5206\u89e3\u8d28\u56e0\u6570\u4e0e\u8d28\u56e0\u6570\u4e0d\u4e00\u6837!!!!!!\n(2).\u5206\u89e3\u8d28\u56e0\u6570\u662f\u4e00\u4e2a\u8fc7\u7a0b,\u800c\u8d28\u56e0\u6570\u662f\u4e00\u4e2a\u6570.\n(3).\u4e00\u4e2a\u5408\u6570\u5206\u89e3\u800c\u6210\u7684\u8d28\u56e0\u6570\u6700\u591a\u53ea\u5305\u542b\u4e00\u4e2a\u5927\u4e8esqrt(n)\u7684\u8d28\u56e0\u6570\n(\u53cd\u8bc1\u6cd5,\u82e5n\u53ef\u4ee5\u88ab\u5206\u89e3\u6210\u4e24\u4e2a\u5927\u4e8esqrt(n)\u7684\u8d28\u56e0\u6570,\u5219\u8fd9\u4e24\u4e2a\u8d28\u56e0\u6570\u76f8\u4e58\u7684\u7ed3\u679c\u5927\u4e8en,\u4e0e\u4e8b\u5b9e\u77db\u76fe).\n(4).\u5f53\u679a\u4e3e\u5230\u67d0\u4e00\u4e2a\u6570i\u7684\u65f6\u5019,n\u7684\u56e0\u5b50\u91cc\u9762\u5df2\u7ecf\u4e0d\u5305\u542b2-i-1\u91cc\u9762\u7684\u6570,\n\u5982\u679cn%i==0,\u5219i\u7684\u56e0\u5b50\u91cc\u9762\u4e5f\u5df2\u7ecf\u4e0d\u5305\u542b2-i-1\u91cc\u9762\u7684\u6570,\u56e0\u6b64\u6bcf\u6b21\u679a\u4e3e\u7684\u6570\u90fd\u662f\u8d28\u6570.\n(5).\u7b97\u6570\u57fa\u672c\u5b9a\u7406(\u552f\u4e00\u5206\u89e3\u5b9a\u7406):\u4efb\u4f55\u4e00\u4e2a\u5927\u4e8e1\u7684\u81ea\u7136\u6570N,\u5982\u679cN\u4e0d\u4e3a\u8d28\u6570,\u90a3\u4e48N\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u6210\u6709\u9650\u4e2a\u8d28\u6570\u7684\u4e58\u79ef\nN=P1a1P2a2P3a3......Pnan\uff0c\u8fd9\u91ccP1<P2<P3......<Pn\u5747\u4e3a\u8d28\u6570\uff0c\u5176\u4e2d\u6307\u6570ai\u662f\u6b63\u6574\u6570\u3002\n\u8fd9\u6837\u7684\u5206\u89e3\u79f0\u4e3a N \u7684\u6807\u51c6\u5206\u89e3\u5f0f\u3002\u6700\u65e9\u8bc1\u660e\u662f\u7531\u6b27\u51e0\u91cc\u5f97\u7ed9\u51fa\u7684\uff0c\u7531\u9648\u8ff0\u8bc1\u660e\u3002\n\u6b64\u5b9a\u7406\u53ef\u63a8\u5e7f\u81f3\u66f4\u4e00\u822c\u7684\u4ea4\u6362\u4ee3\u6570\u548c\u4ee3\u6570\u6570\u8bba\u3002\n(6).\u8d28\u56e0\u5b50\uff08\u6216\u8d28\u56e0\u6570\uff09\u5728\u6570\u8bba\u91cc\u662f\u6307\u80fd\u6574\u9664\u7ed9\u5b9a\u6b63\u6574\u6570\u7684\u8d28\u6570\u3002\u6839\u636e\u7b97\u672f\u57fa\u672c\u5b9a\u7406\uff0c\u4e0d\u8003\u8651\u6392\u5217\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\n\u6bcf\u4e2a\u6b63\u6574\u6570\u90fd\u80fd\u591f\u4ee5\u552f\u4e00\u7684\u65b9\u5f0f\u8868\u793a\u6210\u5b83\u7684\u8d28\u56e0\u6570\u7684\u4e58\u79ef\u3002\n(7).\u4e24\u4e2a\u6ca1\u6709\u5171\u540c\u8d28\u56e0\u5b50\u7684\u6b63\u6574\u6570\u79f0\u4e3a\u4e92\u8d28\u3002\u56e0\u4e3a1\u6ca1\u6709\u8d28\u56e0\u5b50\uff0c1\u4e0e\u4efb\u4f55\u6b63\u6574\u6570\uff08\u5305\u62ec1\u672c\u8eab\uff09\u90fd\u662f\u4e92\u8d28\u3002\n(8).\u53ea\u6709\u4e00\u4e2a\u8d28\u56e0\u5b50\u7684\u6b63\u6574\u6570\u4e3a\u8d28\u6570\u3002\n\n\n6.\u7b5b\u8d28\u6570.\n6.1:\u6734\u7d20\u7b5b\u6cd5.\n(1).\u505a\u6cd5:\u628a2~(n-1)\u4e2d\u7684\u6240\u6709\u7684\u6570\u7684\u500d\u6570\u90fd\u6807\u8bb0\u4e0a,\u6700\u540e\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u6570\u5c31\u662f\u8d28\u6570.\n(2).\u539f\u7406:\u5047\u5b9a\u6709\u4e00\u4e2a\u6570p\u672a\u88ab2~(p-1)\u4e2d\u7684\u6570\u6807\u8bb0\u8fc7,\u90a3\u4e48\u8bf4\u660e,\u4e0d\u5b58\u57282~(p-1)\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\u7684\u500d\u6570\u662fp,\n\u4e5f\u5c31\u662f\u8bf4p\u4e0d\u662f2~(p-1)\u4e2d\u7684\u4efb\u4f55\u6570\u7684\u500d\u6570,\u4e5f\u5c31\u662f\u8bf42~(p-1)\u4e2d\u4e0d\u5b58\u5728p\u7684\u7ea6\u6570,\u56e0\u6b64,\u6839\u636e\u8d28\u6570\u7684\u5b9a\u4e49\u53ef\u77e5:\np\u662f\u8d28\u6570.\n(3).\u8c03\u548c\u7ea7\u6570:\u5f53n\u8d8b\u8fd1\u4e8e\u6b63\u65e0\u7a77\u7684\u65f6\u5019,1/2+1/3+1/4+1/5+\u2026+1/n=lnn+c.(c\u662f\u6b27\u9633\u5e38\u6570,\u7ea6\u7b49\u4e8e0.577\u5de6\u53f3.).\n(4).\u5e95\u6570\u8d8a\u5927,log\u6570\u8d8a\u5c0f\n(4).\u65f6\u95f4\u590d\u6742\u5ea6:\u7ea6\u4e3aO(nlogn);(\u6ce8:\u6b64\u5904\u7684log\u6570\u7279\u6307\u4ee52\u4e3a\u5e95\u7684log\u6570).\n\n6.2:\u57c3\u6c0f\u7b5b(\u7a0d\u52a0\u4f18\u5316\u7248\u7684\u7b5b\u6cd5).\n(1).\u8d28\u6570\u5b9a\u7406:1~n\u4e2d\u6709n/lnn\u4e2a\u8d28\u6570.\n(2).\u539f\u7406:\u5728\u6734\u7d20\u7b5b\u6cd5\u7684\u8fc7\u7a0b\u4e2d\u53ea\u7528\u8d28\u6570\u9879\u53bb\u7b5b.\n(3).\u65f6\u95f4\u590d\u6742\u5ea6:\u7c97\u7565\u4f30\u8ba1:O(n).\u5b9e\u9645:O(nlog(logn)).\n(4).1~n\u4e2d,\u53ea\u8ba1\u7b97\u8d28\u6570\u9879\u7684\u8bdd,\u201d1/2+1/3+1/4+1/5+\u2026+1/n\u201d\u7684\u5927\u5c0f\u7ea6\u4e3alog(logn).\n\n6.3:\u7ebf\u6027\u7b5b\n(1).\u82e5n\u572810\u76846\u6b21\u65b9\u7684\u8bdd,\u7ebf\u6027\u7b5b\u548c\u57c3\u6c0f\u7b5b\u7684\u65f6\u95f4\u6548\u7387\u5dee\u4e0d\u591a,\u82e5n\u572810\u76847\u6b21\u65b9\u7684\u8bdd,\u7ebf\u6027\u7b5b\u4f1a\u6bd4\u57c3\u6c0f\u7b5b\u5feb\u4e86\u5927\u6982\u4e00\u500d.\n(2).\u601d\u8003:\u4e00:\u7ebf\u6027\u7b5b\u6cd5\u4e3a\u4ec0\u4e48\u662f\u7ebf\u6027\u7684?\n\u4e8c:\u7ebf\u6027\u7b5b\u6cd5\u7684\u539f\u7406\u662f\u4ec0\u4e48?\n(3).\u6838\u5fc3:1~n\u5185\u7684\u5408\u6570p\u53ea\u4f1a\u88ab\u5176\u6700\u5c0f\u8d28\u56e0\u5b50\u7b5b\u6389.\n(4).\u539f\u7406:1~n\u4e4b\u5185\u7684\u4efb\u4f55\u4e00\u4e2a\u5408\u6570\u4e00\u5b9a\u4f1a\u88ab\u7b5b\u6389,\u800c\u4e14\u7b5b\u7684\u65f6\u5019\u53ea\u7528\u6700\u5c0f\u8d28\u56e0\u5b50\u6765\u7b5b,\n\u7136\u540e\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u8d28\u56e0\u5b50,\u56e0\u6b64\u6bcf\u4e2a\u6570\u90fd\u53ea\u4f1a\u88ab\u7b5b\u4e00\u6b21,\u56e0\u6b64\u7ebf\u6027\u7b5b\u6cd5\u662f\u7ebf\u6027\u7684.\n(5).\u679a\u4e3e\u5230i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u7684\u65f6\u5019\u5c31\u4f1a\u505c\u4e0b\u6765,\u5373\u201dif(i%primes[j]==0) break;\u201d.\n(6).\u56e0\u4e3a\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u6240\u6709\u8d28\u6570,\u6240\u4ee5\u5f53\u201di%primes[j]!=0\u201d\u65f6,primes[j]\u4e00\u5b9a\u5c0f\u4e8ei\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\nprimes[j]\u4e00\u5b9a\u662fprimes[j]i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50.\n(7).\u56e0\u4e3a\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u6240\u6709\u8d28\u6570,\u6240\u4ee5\u5f53\u201di % primes[j] == 0\u201d\u65f6,primes[j]\u4e00\u5b9a\u662fi\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\n\u800cprimes[j]\u53c8\u662fprimes[j]\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\u56e0\u6b64primes[j]\u662fi primes[j]\u7684\u6700\u5c0f\u8d28\u56e0\u5b50.\n(8).\u5173\u4e8efor\u5faa\u73af\u7684\u89e3\u91ca:\n\u6ce8:\u9996\u5148\u8981\u628a\u63e1\u4f4f\u4e00\u4e2a\u91cd\u70b9:\u6211\u4eec\u679a\u4e3e\u7684\u65f6\u5019\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u6240\u6709\u8d28\u6570\n1.\u5f53i%primes[j]==0\u65f6,\u56e0\u4e3a\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u6240\u6709\u8d28\u6570,\u6240\u4ee5primes[j]\u5c31\u662fi\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\u800cprimes[j]\u53c8\u662f\u5176\u672c\u8eab\nprimes[j]\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\u56e0\u6b64\u5f53i%primes[j]==0\u65f6,primes[j]\u662fprimes[j]i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50.\n2.\u5f53i%primes[j]!=0\u65f6,\u56e0\u4e3a\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u6240\u6709\u8d28\u6570,\u4e14\u6b64\u65f6\u5e76\u6ca1\u6709\u51fa\u73b0\u8fc7\u6709\u8d28\u6570\u6ee1\u8db3i%primes[j]==0,\n\u56e0\u6b64\u6b64\u65f6\u7684primes[j]\u4e00\u5b9a\u5c0f\u4e8ei\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\u800cprimes[j]\u53c8\u662f\u5176\u672c\u8eabprimes[j]\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\n\u6240\u4ee5\u5f53i%primes[j]!=0\u65f6,primes[j]\u4e5f\u662fprimes[j]i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50.\n3.\u7efc\u54081,2\u5f97\u77e5,\u5728\u5185\u5c42for\u5faa\u73af\u91cc\u9762\u65e0\u8bba\u4f55\u65f6,primes[j]\u90fd\u662fprimes[j]i\u7684\u6700\u5c0f\u8d28\u56e0\u5b50,\u56e0\u6b64\u201dst[primes[j]i]=true\u201d\n\u8bed\u53e5\u5c31\u662f\u7528primes[j]i\u8fd9\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u6765\u7b5b\u6389\u8fd9\u4e2a\u6570.\n")),(0,a.kt)("h4",{id:"\u4ee3\u7801\u5b9e\u73b0"},"\u4ee3\u7801\u5b9e\u73b0"),(0,a.kt)("h6",{id:"\u8bd5\u9664\u6cd5"},"\u8bd5\u9664\u6cd5"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8bd5\u9664\u6cd5\uff08\u5b9a\u4e49\uff09 O( sqrt( n ) )")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nbool is_prime(int x)\n{\n    if( x < 2) return false;\n    for(int i = 2 ; i <= x / i ; i++) // \u8fd9\u79cd\u5199\u6cd5\u66f4\u63a8\u8350\uff0c\u4e0d\u4f1a\u7206 int \uff0c\u6548\u7387\u4e5f\u4e0d\u4f4e\n    {\n        if( x % i == 0) return false;\n    }\n    return true;\n}\n\nint main(){\n    \n    int n ;\n\n    cin>>n;\n    \n    while( n -- )\n    {\n        int a;\n        cin>>a;\n        \n        if( is_prime(a) ) cout<<"Yes"<<endl;\n        else cout<<"No"<<endl;\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u5206\u89e3\u8d28\u56e0\u6570 O( sqrt( n ) )")),(0,a.kt)("p",null,"\u8fd9\u4e2a sqrt( n ) \u7684\u5e38\u6570\u4f1a\u66f4\u5c0f\uff0c \u65f6\u95f4\u590d\u6742\u5ea6\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"log n --- sqrt(n)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\nusing namespace std;\n\n// \u601d\u8def\u5c31\u662f\u6bcf\u627e\u5230\u4e00\u4e2a\u8d28\u56e0\u5b50\uff0c\u5c31\u628a\u5b83\u4ece\u6570\u4e2d\u9664\u5e72\u51c0\uff0c\u8bb0\u5f55\u4e0b\u5b83\u6709\u591a\u5c11\u4e2a\n// \u8f93\u51fa\u6bcf\u4e00\u5bf9\u8d28\u56e0\u5b50\n// \u5982\u679c\u6700\u540e n != 1 \uff0c \u8bf4\u660e\u5b83\u672c\u8eab\u4e5f\u662f\u8d28\u56e0\u5b50\nvoid divide(int n)\n{\n    for (int i = 2; i <= n / i; i++)\n        {\n            if (n % i == 0)\n            {\n                int s = 0;\n                while (n % i == 0)\n                    {\n                        n /= i;\n                        s++;\n                    }\n                cout << i << " " << s << endl;\n            }\n        }\n\n    if (n > 1)\n        cout << n << " " << 1 << endl;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    while (n--)\n        {\n            int a;\n            cin >> a;\n            divide(a);\n            cout << endl;\n        }\n\n    return 0;\n}\n')),(0,a.kt)("h6",{id:"\u7b5b\u6cd5"},"\u7b5b\u6cd5"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u57c3\u6c0f\u7b5b\u6cd5")),(0,a.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6\u63a5\u8fd1\u4e8e O( n )"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n\nusing namespace std;\n\nconst int N = 1000010;\n\nint get_primes(int n)\n{\n    int primes[N];\n    bool st[N];\n    int cnt = 0;\n    for(int i = 2; i <= n ;i++)\n    {\n        if( st[i] ) continue; // \u7b5b\u8fc7\u4e86\n        primes[cnt ++] = i; // \u8d28\u6570\u5b58\u8d77\u6765\n        for(int j = i + i ; j <= n ; j = j + i) // \u628a\u5b83\u7684\u6574\u6570\u500d\u90fd\u7b5b\u6389 \n            st[j] = true;\n    }\n    \n    return cnt;\n}\n\nint main()\n{\n    int n ;\n    cin>>n;\n    \n    int res = get_primes(n);\n    \n    cout<<res<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u7ebf\u6027\u7b5b")),(0,a.kt)("p",null,"\u6838\u5fc3\u5728\u4e8e\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u4e2a\u5408\u6570\u4e00\u5b9a\u662f\u88ab\u81ea\u5df1\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\u7b5b\u6389\u7684\n\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u4e2d\uff0c\u4e00\u822c\u662f\u4f7f\u7528\u7ebf\u6027\u7b5b\uff0c\u800c\u57c3\u6c0f\u7b5b\u66f4\u591a\u7684\u662f\u7528\u5b83\u7684\u601d\u8def\u6765\u89e3\u51b3\u5176\u5b83\u95ee\u9898"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n\nusing namespace std;\n\nconst int N = 1000010;\n\nint get_primes(int n)\n{\n    int primes[N];\n    bool st[N];\n    int cnt = 0;\n    \n    for(int i = 2;  i <= n ;i++)\n    {\n        if( !st[i] ) primes[ cnt++ ] = i;\n        for(int j = 0 ; primes[j] <= n / i ; j++) // \u4ece\u5f53\u524d\u5df2\u77e5\u7684\u8d28\u56e0\u6570\u91cc\u9762\u9009\n        {\n            st[ primes[j] * i ] = true; // \u628a\u6240\u6709\u8d28\u56e0\u6570\u7684  i  \u500d\u90fd\u7b5b\u6389\n            // \u5982\u679c\u5df2\u7ecf\u5230\u4e86 i \u7684\u6700\u5c0f\u516c\u56e0\u6570\uff0c\u90a3\u4e48\u5c31\u5b8c\u6210\u5bf9\u8fd9\u4e2a\u6570\u7684\u7b5b\u9009\n            // \u5982\u679ci\u80fd\u88ab\u67d0\u4e2a\u8d28\u56e0\u5b50p\u6574\u9664\uff0c\u8bf4\u660ei\u5df2\u7ecf\u88ab\u6807\u8bb0\u4e3a\u5408\u6570\uff0c\u8df3\u51fa\u5185\u90e8\u5faa\u73af\n            if( i % primes[j] == 0 ) break;\n        }\n    }\n    \n    return cnt;\n}\n\nint main()\n{\n    int n ;\n    cin>>n;\n    \n    int res = get_primes(n);\n    \n    cout<<res<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u7ea6\u6570"},"\u7ea6\u6570"),(0,a.kt)("h4",{id:"\u8bd5\u9664\u6cd5-1"},"\u8bd5\u9664\u6cd5"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO( sqrt(n) ) "),(0,a.kt)("li",{parentName:"ul"},"\u601d\u8def\uff1a "),(0,a.kt)("li",{parentName:"ul"},"\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u56e0\u4e3a a | b , a / b | b \uff0c \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u5230 n / i \uff0c \u4e5f\u5c31\u662f\u5f00\u65b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6 "),(0,a.kt)("li",{parentName:"ul"},"\u7ea6\u6570\u6709a, b\u4e24\u4e2a\uff0c\u5f53\u6211\u4eec\u627e\u5230 a | n \u65f6\uff0c b = n / a\uff0c \u4f46\u662f\u8fd9\u91cc\u9700\u8981\u8003\u8651\u5e73\u65b9\u7684\u60c5\u51b5\uff0c\u5224\u65ad\u4e00\u4e0b\u3002 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nvector<int> get_divitors(int n)\n{\n    vector<int> res;\n    for(int i = 1;  i <= n / i ; i++)\n    {\n        if( n % i == 0) \n        {\n            res.push_back(i); // \u5c0f\u7684\u7ea6\u6570\n            if( i != n / i ) res.push_back( n / i );// \u5927\u7684\u7ea6\u6570 \n        }\n    }\n    \n    sort(res.begin(), res.end());\n    \n    return res;\n}\n\nint main(){\n    \n    int n ;\n    cin>>n;\n\n    while( n -- )\n    {\n        int x ;\n        cin>>x;\n        \n        auto arr = get_divitors(x);   \n        \n        for(auto num : arr)\n        {\n            cout<<num<<" ";\n        }\n        \n        cout<<endl;\n    }\n    return 0;\n}\n')),(0,a.kt)("h4",{id:"\u7ea6\u6570\u4e2a\u6570"},"\u7ea6\u6570\u4e2a\u6570"),(0,a.kt)("p",null,"\u516c\u5f0f\uff1a ",(0,a.kt)("inlineCode",{parentName:"p"},"(a1 + 1 ) * (a2 + 1)")," ",(0,a.kt)("inlineCode",{parentName:"p"},"_..._")," ",(0,a.kt)("inlineCode",{parentName:"p"},"( an + 1)")," \uff0c \u8fd9\u91cc\u7684 a \u662f\u6307\u7ea6\u6570\u7684\u5e42\u5f62\u5f0f\u7684",(0,a.kt)("strong",{parentName:"p"},"\u6307\u6570")),(0,a.kt)("p",null,"\u7b97\u6cd5\u6d41\u7a0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5148\u6c42\u7ea6\u6570 "),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u516c\u5f0f\u8ba1\u7b97\u7ea6\u6570\u7684\u4e2a\u6570 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <unordered_map>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int mod = 1e9 + 7;\n\nint main(){\n    \n    int n ;\n    cin>>n;\n    \n    unordered_map<int , int> primes;\n    \n    while( n -- )\n    {\n        int x;\n        cin>>x;\n        \n        for(int i = 2; i <= x / i ; i ++)\n        {\n            while( x % i == 0 )\n            {\n                x /= i;\n                primes[i] ++; // \u6c42\u51fa\u7ea6\u6570\u5bf9\u5e94\u7684\u6b21\u6570\n            }\n        }\n        if( x > 1) primes[x] ++; // \u5982\u679c\u6700\u540e\u5b83\u6ca1\u9664\u5b8c\uff0c \u8bf4\u660e\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\u4e5f\u662f\u7ea6\u6570\n    }\n    \n    LL res = 1;\n    for(auto p : primes ) res = res * ( p.second + 1) % mod; // \u6c42\u7ea6\u6570\u7684\u516c\u5f0f\n    \n    cout<<res<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h4",{id:"\u7ea6\u6570\u4e4b\u548c"},"\u7ea6\u6570\u4e4b\u548c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n#include <unordered_map>\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int mod = 1e9 + 7;\n\nint main (){\n    \n    int x;\n    cin>>x;\n    \n    unordered_map<int, int> primes; \n    \n    while( x -- ) // \u5c06\u8f93\u5165\u7684\u6570\u5206\u89e3\u8d28\u56e0\u6570\n    {\n        int n;\n        cin>>n;\n        \n        for(int i = 2; i <= n / i ; i++)\n        {\n            int cnt = 0;\n            if( n % i == 0 )\n            {\n                while( n % i == 0 )\n                {\n                    n /= i;\n                    primes[i]++;\n                }\n            }\n        }\n        if( n > 1 ) primes[n]++; \n    }\n    \n    LL res = 1;\n    for( auto p : primes ) // \u516c\u5f0f\u6c42\u89e3\u8d28\u56e0\u6570\u7684\u548c\n    {\n        LL t = 1;\n        int a = p.first, b = p.second;\n        while( b -- ) t = ( t * a + 1 ) % mod;\n        res = res * t % mod;\n    }\n    \n    cout<<res<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h4",{id:"\u6700\u5927\u516c\u7ea6\u6570"},"\u6700\u5927\u516c\u7ea6\u6570"),(0,a.kt)("p",null,"\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u8f97\u8f6c\u76f8\u9664\u6cd5\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u5012\u662f\u8bc1\u660e\u6bd4\u8f83\u590d\u6742"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n\nusing namespace std;\n\nint gcd(int a, int b)\n{\n    return b ? gcd(b, a % b) : a;\n}\n\nint main ()\n{\n    int n ;\n    cin>>n;\n    \n    while( n -- )\n    {\n        int a, b;\n        cin>>a>>b;\n        \n        cout<<gcd(a, b)<<endl;\n        \n    }\n    \n    return 0;\n}\n")),(0,a.kt)("h2",{id:"\u6b27\u62c9\u51fd\u6570"},"\u6b27\u62c9\u51fd\u6570"),(0,a.kt)("p",null,"\u516c\u5f0f\u7684\u539f\u7406\u662f\u5bb9\u65a5\u539f\u7406"),(0,a.kt)("h3",{id:"\u6734\u7d20\u5b9e\u73b0"},"\u6734\u7d20\u5b9e\u73b0"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u65f6\u95f4\u590d\u6742\u5ea6 O( sqrt( n ) ) \uff0c \u74f6\u9888\u5728\u6c42\u8d28\u6570")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\nusing namespace std;\n\nint euler (int n )\n{\n    int res = n; \n    for(int i = 2 ; i <= n / i ; i++)\n    {\n        if( n % i == 0 )\n        {\n            res = res / i * ( i - 1 );\n            while( n % i == 0 ) n /= i ;\n        }\n    }\n    if( n > 1 ) res = res / n * (n - 1);\n    \n    return res;\n}\n\nint main()\n{\n    int n;\n    cin>>n;\n    \n    while(  n -- )\n    {\n        int x;\n        cin>>x;\n        cout<<euler(x)<<endl;\n    }\n    \n    return 0;\n    \n}\n")),(0,a.kt)("h3",{id:"\u7ebf\u6027\u7b5b\u5b9e\u73b0"},"\u7ebf\u6027\u7b5b\u5b9e\u73b0"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u91cd\u5408\u7684\u8d28\u56e0\u5b50"),"\u53ea\u7b97\u4e00\u904d")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#include <iostream>\n\nusing namespace std;\n\ntypedef long long LL; // \u56e0\u4e3a\u7d2f\u52a0\u53ef\u80fd\u4f1a\u7206int\n\nconst int N = 1000010;\n\nint primes[N];\nint phi[N];\nbool st[N];\n\nLL get_euler(int n ) // \u5728\u4f7f\u7528\u7b5b\u6cd5\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u6c42\u89e3\n{\n    int cnt = 0 ;\n    phi[1] = 1;// \u6839\u636e\u5b9a\u4e49\u5f97\u5230\n    for(int i = 2 ; i <= n; i++)\n    {\n        if( !st[i] ) // \u662f\u4e00\u4e2a\u8d28\u6570\n        {\n            phi[i] = i - 1; // 1 - i \u7684\u6570\u90fd\u548c\u5b83\u672c\u8eab\u4e92\u8d28\uff0c \u56e0\u4e3a\u5b83\u5c31\u662f\u4e00\u4e2a\u8d28\u6570\n            primes[ cnt++ ] = i;\n        }\n        for(int j = 0 ; primes[j] <= n / i ; j ++)\n        {\n            st[primes[j] * i] = true;\n            if( i % primes[j] == 0 ) {\n                phi[primes[j] * i] = phi[i] * primes[j] ; //\u8fd9\u91cc\u662f\u56e0\u4e3a primes[j] \u5c31\u662f i \u7684\u6700\u5c0f\u8d28\u56e0\u5b50\n                //\u6b27\u62c9\u51fd\u6570\u7684\u9664\u4e86 N \u7684\u90e8\u5206\uff0c\u8868\u793a\u51fa\u6765\u548c phi[i] \u662f\u7b49\u4ef7\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u518d\u4e58\u4e0a\u4e00\u4e2a primes[j] \u5c31\u597d\n                break;\n            }\n            phi[ primes[j] * i ] = phi[i] * ( primes[j] - 1 );\n        }\n    }\n    \n    LL res = 0;\n    for(int i = 1 ; i <= n ;i++) res+= phi[i];\n    \n    return res;\n}\n\nint main(){\n    \n    int n;\n    cin>>n;\n    \n    LL t = get_euler(n);\n    \n    cout<<t<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h2",{id:"\u5feb\u901f\u5e42"},"\u5feb\u901f\u5e42"),(0,a.kt)("p",null,"\u603b\u7684\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u5c06\u4e00\u4e2a\u6570\u7684\u6307\u6570\u5206\u89e3\u4e3a2\u7684\u5e42\u7684\u548c\uff0c \u56e0\u4e3a\u79ef\u7684\u6a21\u7b49\u4e8e\u5206\u522b\u6a21\u4e4b\u540e\u518d\u4e58\u79ef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u5206\u89e3\u8ba1\u7b97\u3001\u518d\u6c42\u79ef\u7684\u65b9\u5f0f\u5f97\u5230\u7ed3\u679c"),(0,a.kt)("p",null,"\u6838\u5fc3\u5728\u4e8e\uff1a\u5206\u89e3\u6307\u6570\u4e3a2\u7684\u5e42\u7684\u548c\uff0c \u5f97\u5230 O( log n ) \u7684\u65f6\u95f4\u590d\u6742\u5ea6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\ntypedef long long LL ;\n\nint qmi(int a, int k, int m)\n{\n    int res = 1 % m;\n    \n    while( k )\n    {\n        if( k & 1 )  res = res * a  %  m ; // \u533a\u5206 k \u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\n        \n        a = a * (LL)a % m ; // \u76f8\u4e58\n        \n        k >>= 1;\n    }\n    \n    return res;\n}\n\nint main (){\n    \n    int n ;\n    \n    scanf("%d" , &n);\n    \n    while( n --)\n    {\n        int a, k, m;\n    \n        scanf("%d%d%d", &a, &k, &m);\n    \n        printf("%lld \\n", qmi(a, k, m ));\n    \n    }\n    \n    return 0;\n}\n')),(0,a.kt)("h3",{id:"\u5feb\u901f\u5e42\u6c42\u9006\u5143"},"\u5feb\u901f\u5e42\u6c42\u9006\u5143"),(0,a.kt)("p",null,"\u7406\u89e3\u7684\u70b9\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6570 * \u9006\u5143 = 1 "),(0,a.kt)("li",{parentName:"ol"},"\u8d39\u9a6c\u5c0f\u5b9a\u7406 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\nLL qmi(int a, int b, int p)\n{\n    LL res = 1; // \u7ed3\u679c\u53ef\u80fd\u7206int\n    while (b)\n    {\n        if (b & 1) res = res * a % p;\n        a = a * (LL)a % p;\n        b >>= 1;\n    }\n    return res;\n}\n\n\nint main()\n{\n    int n;\n    scanf("%d", &n);\n    while (n -- )\n    {\n        int a, p;\n        scanf("%d%d", &a, &p);\n        if (a % p == 0) puts("impossible");\n        else printf("%lld\\n", qmi(a, p - 2, p));\n    }\n\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"},"\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"),(0,a.kt)("h3",{id:"\u88f4\u8700\u5b9a\u7406"},"\u88f4\u8700\u5b9a\u7406"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u4efb\u610f\u7684\u6b63\u6574\u6570 a , b , \u4e00\u5b9a\u5b58\u5728\u975e\u96f6\u6574\u6570 x, y \uff0c\u4f7f\u5f97 ax + by = (a, b) ==> a \u548c b \u7684\u6700\u5927\u516c\u7ea6\u6570"),(0,a.kt)("p",null,"\u4f7f\u7528\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6765\u6c42\u89e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\nusing namespace std;\n\nint exgcd(int a, int b, int &x, int &y)\n{\n    if( !b )\n    {\n        x = 1, y = 0;\n        return a;\n    }\n    \n    int d = exgcd(b, a % b, y ,x );// \u9012\u5f52\u5904\u7406\n    y = y - a / b * x; // \u8fd9\u91cc\u7684x y \u5728\u516c\u5f0f\u4e2d\u7684\u8868\u793a\u662f\u66ff\u6362\u8fc7\u4e86\u7684\n    \n    return d;\n}\n\nint main(){\n    \n    int n;\n    scanf("%d", &n);\n    \n    while(n -- )\n    {\n        int a, b, x, y;\n        scanf("%d%d", &a, &b);\n        \n        exgcd(a, b, x, y);  \n        \n        printf("%d %d \\n", x, y);\n    }\n    \n    return 0;\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u63a8\u5bfc\u4e0d\u96be\uff0c\u4ee3\u7801\u7684\u7406\u89e3\u6709\u96be\u5ea6")),(0,a.kt)("h3",{id:"\u6c42\u89e3\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b"},"\u6c42\u89e3\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b"),(0,a.kt)("p",null,"![","[Pasted image 20221209112733.png]","]"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u6c42\u5f97\u7684\u662f gcd(a, m) \uff0c \u800c b \u662f\u5b83\u7684\u500d\u6570\uff0c \u6240\u4ee5\u6700\u540e\u9700\u8981\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"b / d * x % m")," \u6765\u786e\u5b9a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\nint exgcd(int a, int b, int &x, int &y)\n{\n    if (!b)\n    {\n        x = 1, y = 0;\n        return a;\n    }\n    int d = exgcd(b, a % b, y, x);\n    y -= a / b * x;\n    return d;\n}\n\n\nint main()\n{\n    int n;\n    scanf("%d", &n);\n    while (n -- )\n    {\n        int a, b, m;\n        scanf("%d%d%d", &a, &b, &m);\n\n        int x, y;\n        int d = exgcd(a, m, x, y);\n        if (b % d) puts("impossible");\n        else printf("%d\\n", (LL)b / d * x % m);\n    }\n\n    return 0;\n}\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u540e\u9762\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u8865")),(0,a.kt)("h1",{id:"\u52a8\u6001\u89c4\u5212"},"\u52a8\u6001\u89c4\u5212"),(0,a.kt)("h2",{id:"\u80cc\u5305"},"\u80cc\u5305"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u52a8\u89c4\u7684\u7ecf\u5178\u6a21\u578b")),(0,a.kt)("h4",{id:"01\u80cc\u5305"},"01\u80cc\u5305"),(0,a.kt)("p",null,"\u6bcf\u4e2a\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\uff0c\u80cc\u5305\u5927\u5c0f\u6709\u9650\n\u62bd\u8c61\u4e00\u4e9b\u7406\u89e3\u5c31\u662f\uff1a \u6709\u9650\u7684",(0,a.kt)("strong",{parentName:"p"},"\u5bb9\u5668"),"\uff0c\u53ea\u80fd\u9009\u53d6",(0,a.kt)("strong",{parentName:"p"},"\u4e00\u6b21"),"\u7684\u5404\u79cd\u7269\u54c1\uff08\u4ef7\u503c\uff0c\u4f53\u79ef\uff09\uff0c\u6c42\u5bb9\u5668\u80fd\u591f\u653e\u5165\u7684\u6700\u5927\u4ef7\u503c"),(0,a.kt)("h5",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u72b6\u6001",(0,a.kt)("strong",{parentName:"li"},"\u8868\u793a"),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5206\u6790\u72b6\u6001\u7a7a\u95f4\u662f\u51e0\u7ef4\u7684")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u96c6\u5408 ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u6240\u6709\u9009\u62e9")),(0,a.kt)("li",{parentName:"ul"},"\u6761\u4ef6 ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u53ea\u4ece\u524d i \u4e2a\u7269\u54c1\u4e2d\u9009\uff0c\u53ea\u4ece",(0,a.kt)("strong",{parentName:"li"},"\u5df2\u77e5"),"\u7684\u7269\u54c1\u4e2d\u9009\u53d6 "),(0,a.kt)("li",{parentName:"ul"},"\u603b\u4f53\u79ef ",(0,a.kt)("inlineCode",{parentName:"li"},"<= j")," "),(0,a.kt)("li",{parentName:"ul"},"\u5c5e\u6027\uff1a \u96c6\u5408\u7684\u6240\u6709\u72b6\u6001\u7684",(0,a.kt)("strong",{parentName:"li"},"\u67d0\u79cd\u5c5e\u6027")," -- min | ",(0,a.kt)("strong",{parentName:"li"},"max")," | \u6570\u91cf ")))))),(0,a.kt)("p",null,"\u572801\u80cc\u5305\u4e2d\u8868\u793a\u7684\u5c31\u662f\uff1a\u6240\u6709\u53ea\u4ece\u524di\u4e2a\u7269\u54c1\u4e2d\u9009\uff0c\u4e14\u603b\u4f53\u79ef ",(0,a.kt)("inlineCode",{parentName:"p"},"<= j")," \u7684\u6240\u6709\u72b6\u6001\uff08\u9009\u6cd5\uff09\u7684\u96c6\u5408\uff0c \u8fd9\u4e2a\u96c6\u5408\u91cc\u9762\u5b58\u50a8\u7684\u5c31\u662f\u6240\u6709\u9009\u6cd5\u7684\u4ef7\u503c\u7684\u6700\u5927\u503c"),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u72b6\u6001",(0,a.kt)("strong",{parentName:"li"},"\u8ba1\u7b97"))),(0,a.kt)("p",null,"\u4e00\u822c\u5bf9\u5e94\u96c6\u5408\u7684",(0,a.kt)("strong",{parentName:"p"},"\u5212\u5206")," --- ",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u91cd\uff08\u8fd9\u4e00\u70b9\u4e0d\u4e00\u5b9a\u6ee1\u8db3\uff09 & \u4e0d\u6f0f"),"\n\u8fd9\u91cc\u5212\u5206 ",(0,a.kt)("inlineCode",{parentName:"p"},"f ( i , j )"),"\uff0c\u4ece\u6700\u7ec8\u7684\u76ee\u6807\u5012\u63a8\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u5305\u542b ",(0,a.kt)("inlineCode",{parentName:"li"},"i"),"( \u7b2c i \u4e2a\u7269\u54c1) \uff0c \u4ece ",(0,a.kt)("inlineCode",{parentName:"li"},"i - 1"),"\u4e2d\u9009 \uff0c \u4f53\u79ef\u5c0f\u4e8e",(0,a.kt)("inlineCode",{parentName:"li"},"j"),"\uff0c \u4e14\u4e0d\u5305\u542b ",(0,a.kt)("inlineCode",{parentName:"li"},"i"),"\u3002\u6700\u5927\u503c\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"f(i - 1 , j)")),(0,a.kt)("li",{parentName:"ul"},"\u5305\u542b",(0,a.kt)("inlineCode",{parentName:"li"},"i"),"\uff0c \u4ece",(0,a.kt)("inlineCode",{parentName:"li"},"i - 1")," \u4e2d\u9009 \uff0c \u4f53\u79ef\u5c0f\u4e8e",(0,a.kt)("inlineCode",{parentName:"li"},"j")," \uff0c \u4e14\u5305\u542b",(0,a.kt)("inlineCode",{parentName:"li"},"i"),"\u3002\u6700\u5927\u503c\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"li"},"f(i, j)"),"\u56e0\u4e3a\u4e0d\u8bba\u7b2c",(0,a.kt)("inlineCode",{parentName:"li"},"i")," \u4e2a\u7269\u54c1\u662f\u5426\u52a0\u5165\uff0c\u90fd\u4e0d\u5f71\u54cd ",(0,a.kt)("inlineCode",{parentName:"li"},"i - 1")," \u4e2a\u7269\u54c1\u7684\u6700\u5927\u503c\uff0c \u4ee5\u6b64\u7c7b\u63a8\uff0c \u7b2c ",(0,a.kt)("inlineCode",{parentName:"li"},"i - n")," \u548c\u7b2c ",(0,a.kt)("inlineCode",{parentName:"li"},"i - n - 1")," \u540c\u6837\u6210\u7acb\u3002\u7b2c ",(0,a.kt)("inlineCode",{parentName:"li"},"i")," \u4e2a\u7269\u54c1\u5728v\u4e0b\u7684\u6700\u5927\u503c\u4e5f\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a ",(0,a.kt)("inlineCode",{parentName:"li"},"f(i - 1, v - v[i] ) + w[i]")," \u4e86 "),(0,a.kt)("li",{parentName:"ul"},"\u6700\u540e\uff0c \u56e0\u4e3a\u6211\u4eec\u53d6\u7684\u662f\u4e8c\u8005\u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u5f97\u5230 ",(0,a.kt)("inlineCode",{parentName:"li"},"f(i, j) = max( f(i, j) , f(i - 1, v - v[i]) + w[i]")," \uff0c\u4f5c\u4e3a\u6211\u4eec\u7684\u7ed3\u679c ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1010;\nint f[N][N]; // \u8868\u793a\u5728 j \u5bb9\u91cf\u7684\u524d\u63d0\u4e0b\uff0c \u524d i \u4e2a\u7269\u54c1\u4e2d\u5f97\u5230\u7684\u4ef7\u503c\u7684\u6700\u5927\u503c\nint w[N], v[N];\nint n, m;\n\nint main()\n{\n\n  cin >> n >> m;\n\n  for (int i = 1; i <= n; i++)\n    cin >> v[i] >> w[i];\n\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j < m; j++)\n    {\n      f[i][j] = f[i - 1][j];\n      if (j >= v[i])\n        f[i][j] = max(f[i][j], f[i - 1][j - v[i]] + w[i]);\n    }\n\n  cout << f[n][m] << endl;\n\n  return 0;\n}\n")),(0,a.kt)("p",null,"\u5c06\u72b6\u6001",(0,a.kt)("inlineCode",{parentName:"p"},"f[i][j]"),"\u4f18\u5316\u5230\u4e00\u7ef4",(0,a.kt)("inlineCode",{parentName:"p"},"f[j]"),"\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u505a\u4e00\u4e2a\u7b49\u4ef7\u53d8\u5f62\u3002\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u53d8\u5f62\u5462\uff1f\u6211\u4eec\u5b9a\u4e49\u7684\u72b6\u6001",(0,a.kt)("inlineCode",{parentName:"p"},"f[i][j]"),"\u53ef\u4ee5\u6c42\u5f97",(0,a.kt)("strong",{parentName:"p"},"\u4efb\u610f\u5408\u6cd5\u7684"),(0,a.kt)("inlineCode",{parentName:"p"},"**i**"),(0,a.kt)("strong",{parentName:"p"},"\u4e0e"),(0,a.kt)("inlineCode",{parentName:"p"},"**j**"),(0,a.kt)("strong",{parentName:"p"},"\u6700\u4f18\u89e3"),"\uff0c\u4f46\u9898\u76ee\u53ea\u9700\u8981\u6c42\u5f97",(0,a.kt)("strong",{parentName:"p"},"\u6700\u7ec8\u72b6\u6001"),(0,a.kt)("inlineCode",{parentName:"p"},"f[n][m]"),"\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4e00\u7ef4\u7684\u7a7a\u95f4\u6765\u66f4\u65b0\u72b6\u6001\u3002\n\uff081\uff09\u72b6\u6001",(0,a.kt)("inlineCode",{parentName:"p"},"f[j]"),"\u5b9a\u4e49\uff1aN\u4ef6\u7269\u54c1\uff0c\u80cc\u5305\u5bb9\u91cf",(0,a.kt)("inlineCode",{parentName:"p"},"j"),"\u4e0b\u7684\u6700\u4f18\u89e3\u3002\n\uff082\uff09\u6ce8\u610f\u679a\u4e3e\u80cc\u5305\u5bb9\u91cf",(0,a.kt)("inlineCode",{parentName:"p"},"j"),"\u5fc5\u987b\u4ece",(0,a.kt)("inlineCode",{parentName:"p"},"m"),"\u5f00\u59cb\u3002 -- \u80cc\u5305\u53d8\u91cf\u7684\u6c61\u67d3\n\uff083\uff09\u4e3a\u4ec0\u4e48\u4e00\u7ef4\u60c5\u51b5\u4e0b\u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\u9700\u8981\u9006\u5e8f\uff1f\u5728\u4e8c\u7ef4\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001",(0,a.kt)("inlineCode",{parentName:"p"},"f[i][j]"),"\u662f\u7531\u4e0a\u4e00\u8f6e",(0,a.kt)("inlineCode",{parentName:"p"},"i - 1"),"\u7684\u72b6\u6001\u5f97\u6765\u7684\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"f[i][j]"),"\u4e0e",(0,a.kt)("inlineCode",{parentName:"p"},"f[i - 1][j]"),"\u662f\u72ec\u7acb\u7684\u3002\u800c\u4f18\u5316\u5230\u4e00\u7ef4\u540e\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u662f\u6b63\u5e8f\uff0c\u5219\u6709",(0,a.kt)("inlineCode",{parentName:"p"},"f[\u8f83\u5c0f\u4f53\u79ef]"),"\u66f4\u65b0\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"f[\u8f83\u5927\u4f53\u79ef]"),"\uff0c\u5219\u6709\u53ef\u80fd\u672c\u5e94\u8be5\u7528\u7b2c",(0,a.kt)("inlineCode",{parentName:"p"},"i-1"),"\u8f6e\u7684\u72b6\u6001\u5374\u7528\u7684\u662f\u7b2c",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\u8f6e\u7684\u72b6\u6001\u3002\n\uff084\uff09\u4f8b\u5982\uff0c\u4e00\u7ef4\u72b6\u6001\u7b2ci\u8f6e\u5bf9\u4f53\u79ef\u4e3a3\u7684\u7269\u54c1\u8fdb\u884c\u51b3\u7b56\uff0c\u5219",(0,a.kt)("inlineCode",{parentName:"p"},"f[7]"),"\u7531",(0,a.kt)("inlineCode",{parentName:"p"},"f[4]"),"\u66f4\u65b0\u800c\u6765\uff0c\u8fd9\u91cc\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"f[4]"),"\u6b63\u786e\u5e94\u8be5\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"f[i - 1][4]"),"\uff0c\u4f46\u4ece\u5c0f\u5230\u5927\u679a\u4e3ej\u8fd9\u91cc\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"f[4]"),"\u5728\u7b2c",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\u8f6e\u8ba1\u7b97\u5374\u53d8\u6210\u4e86",(0,a.kt)("inlineCode",{parentName:"p"},"f[i][4]"),"\u3002\u5f53\u9006\u5e8f\u679a\u4e3e\u80cc\u5305\u5bb9\u91cfj\u65f6\uff0c\u6211\u4eec\u6c42",(0,a.kt)("inlineCode",{parentName:"p"},"f[7]"),"\u540c\u6837\u7531",(0,a.kt)("inlineCode",{parentName:"p"},"f[4]"),"\u66f4\u65b0\uff0c\u4f46\u7531\u4e8e\u662f\u9006\u5e8f\uff0c\u8fd9\u91cc\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"f[4]"),"\u8fd8\u6ca1\u6709\u5728\u7b2ci\u8f6e\u8ba1\u7b97\uff0c\u6240\u4ee5\u6b64\u65f6\u5b9e\u9645\u8ba1\u7b97\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"f[4]"),"\u4ecd\u7136\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"f[i - 1][4]"),"\u3002\n\uff085\uff09\u7b80\u5355\u6765\u8bf4\uff0c\u4e00\u7ef4\u60c5\u51b5\u6b63\u5e8f\u66f4\u65b0\u72b6\u6001",(0,a.kt)("inlineCode",{parentName:"p"},"f[j]"),"\u9700\u8981\u7528\u5230\u524d\u9762\u8ba1\u7b97\u7684\u72b6\u6001\u5df2\u7ecf\u88ab\u300c",(0,a.kt)("strong",{parentName:"p"},"\u6c61\u67d3"),"\u300d\uff0c\u9006\u5e8f\u5219\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898\u3002\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"f[j] = max(f[j], f[j - v[i]] + w[i]")," \u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\n\nconst int N = 1e3 + 10;\nint f[N]; \nint v[N], w[N];\nint nn, vv;\n\n// f[i][j] \u8868\u793a\u4ece\u524d i \u4e2a\u7269\u54c1\u4e2d\u9009\uff0c \u4f53\u79ef\u4e0d\u8d85\u8fc7 v \u7684\u6761\u4ef6\u4e0b\u7684\u4ef7\u503c\u7684\u6700\u5927\u503c\n// \u72b6\u6001\u8f6c\u79fb\u4ece\u540e\u5f80\u524d\u63a8\uff0c \u5982\u4f55\u4ece\u524d\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230 f[i][j] \uff0c \u5728\u6211\u4eec\u7684\u80cc\u5305\u80cc\u666f\u4e0b\u5c31\u662f\u662f\u5426\u9009\u53d6\u4e00\u4e2a\u7269\u54c1\n// \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\n// 1. \u4e0d\u9009\u53d6\u7269\u54c1, \u90a3\u4e48 i = i - 1 \uff0c \u800c\u4f53\u79ef\u6ca1\u6709\u8d85\u8fc7 j \u540c\u6837\u6ee1\u8db3\uff0c \u6240\u4ee5 f[i][j] = f[i - 1][j];\n// 2. \u9009\u53d6\u7269\u54c1\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e5f\u53ef\u4ee5\u4ece i - 1 \u8f6c\u79fb\u8fc7\u6765\uff0c\u56e0\u4e3a\u5e73\u5747\u5c11\u4e00\u4e2a i \u5e76\u4e0d\u4f1a\u5f71\u54cd\u6700\u503c, f[i][j] = max(f[i][j] , f[i - 1][j - v[i]) + w[i])\n\n// \u4f18\u5316\uff1a \u72b6\u6001f[j]\u5b9a\u4e49\uff1aN\u4ef6\u7269\u54c1\uff0c\u80cc\u5305\u5bb9\u91cfj\u4e0b\u7684\u6700\u4f18\u89e3\u3002\n/*\n1. \u4e0d\u9009\u7269\u54c1, \u4f53\u79ef\u6ca1\u6709\u53d8\u5316 f[j] = f[j]\n2. \u9009\u53d6\u7269\u54c1, j = j - v[i], w = w + w[i] \n*/\nint main () {\n    cin>> nn >> vv;\n    for(int i = 1; i <= nn ;i ++ ) cin>> v[i] >> w[i];\n    \n    for(int i = 1; i <= nn; i ++)\n        for(int j = vv; j >= v[i];j --)\n        {\n            // f[i][j] = f[i - 1][j]; // \u4e24\u8005\u76f8\u7b49\n            // if( j >= v[i] ){ \u8c03\u6574\u904d\u5386\u987a\u5e8f\n                f[j] = max(f[j], f[j - v[i]] + w[i]);   \n            // }\n        }\n    \n    cout<< f[vv] << endl;\n    return 0;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://cdn.nlark.com/yuque/0/2023/png/22577092/1681551852453-837dc683-690f-45a2-b075-85fae2c1faf5.png#averageHue=%2326292e&clientId=u14308448-eb4b-4&from=paste&height=267&id=ue59f6746&originHeight=267&originWidth=1218&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62664&status=done&style=none&taskId=ua3c0482b-8458-4e6d-8623-f1116dbe1b6&title=&width=1218",alt:"image.png"}),"\n\u6700\u4f18\u5b50\u7ed3\u6784\u6307\u7684\u662f\u4e00\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u53ef\u4ee5\u901a\u8fc7\u5176\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u6765\u6784\u9020\u3002\u5982\u679c\u4e00\u4e2a\u95ee\u9898\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5206\u6cbb\u6216\u8005\u52a8\u6001\u89c4\u5212\u7b49\u65b9\u6cd5\u6765\u6c42\u89e3\u95ee\u9898\u3002\n\u5728\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u6700\u4f18\u5b50\u7ed3\u6784\u7684\u4f53\u73b0\u5728\u4e8e\uff0c\u5f53\u6211\u4eec\u8981\u8fbe\u5230\u5bb9\u91cf\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"j"),"\u65f6\u7684\u6700\u5927\u4ef7\u503c",(0,a.kt)("inlineCode",{parentName:"p"},"f[j]"),"\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5bb9\u91cf\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"j-v[i]"),"\u65f6\u52a0\u5165\u5f53\u524d\u7269\u54c1",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\u6240\u5e26\u6765\u7684\u4ef7\u503c\uff0c\u5373\u53ef\u5f97\u5230\u5bb9\u91cf\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"j"),"\u65f6\u7684\u6700\u5927\u4ef7\u503c",(0,a.kt)("inlineCode",{parentName:"p"},"f[j]"),"\u3002\u6700\u4f18\u5b50\u7ed3\u6784\u7684\u5b58\u5728\u4fdd\u8bc1\u4e86\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u6765\u6784\u9020\u539f\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u95ee\u9898\u7684\u6c42\u89e3\u8fc7\u7a0b\u3002\n\u65e0\u540e\u6548\u6027\u6307\u7684\u662f\u67d0\u4e2a\u72b6\u6001\u7684\u503c\u4e00\u65e6\u786e\u5b9a\uff0c\u5219\u5728\u6574\u4e2a\u6c42\u89e3\u8fc7\u7a0b\u4e2d\u90fd\u4e0d\u4f1a\u518d\u88ab\u4fee\u6539\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u72b6\u6001\u53ea\u80fd\u7531\u4e0a\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u800c\u6765\uff0c\u4e0e\u4e4b\u524d\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u7a0b\u6ca1\u6709\u5173\u7cfb\u3002\n\u5728\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u65e0\u540e\u6548\u6027\u7684\u4f53\u73b0\u5728\u4e8e\uff0c\u5f53\u6211\u4eec\u5c06\u5f53\u524d\u7269\u54c1\u653e\u5165\u80cc\u5305\u540e\uff0c\u80cc\u5305\u5bb9\u91cf\u968f\u4e4b\u53d1\u751f\u6539\u53d8\uff0c\u4f46\u662f\u8fd9\u79cd\u6539\u53d8\u53ea\u5f71\u54cd\u5230\u540e\u9762\u7684\u51b3\u7b56\uff0c\u4e0e\u4e4b\u524d\u7684\u51b3\u7b56\u65e0\u5173\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4e4b\u524d\u7684\u51b3\u7b56\u7ed3\u679c\u6765\u66f4\u65b0\u72b6\u6001\uff0c\u800c\u65e0\u9700\u8003\u8651\u4e4b\u540e\u7684\u51b3\u7b56\u5982\u4f55\u5f71\u54cd\u5f53\u524d\u72b6\u6001\u3002\u65e0\u540e\u6548\u6027\u4fdd\u8bc1\u4e86\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u4e00\u4e2a\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u6765\u66f4\u65b0\u72b6\u6001\uff0c\u800c\u4e0d\u5fc5\u8003\u8651\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u53d8\u5316\u3002"),(0,a.kt)("h4",{id:"\u5b8c\u5168\u80cc\u5305"},"\u5b8c\u5168\u80cc\u5305"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6bcf\u4e2a\u7269\u54c1\u6709\u65e0\u9650\u4e2a")),(0,a.kt)("p",null,"\u548c01\u80cc\u5305\u7684\u533a\u522b\u5c31\u5728\u4e8e\u96c6\u5408\u5212\u5206\uff0c\u6bcf\u4e2a\u7269\u54c1\u6709\u53ef\u80fd\u6709k\u4e2a\n",(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTkyMjA2YjM4NjFlYTk1YWNiZjVjYzljNmNjMmFjYTdfdEx4RmwxMDZOSXpISWN5TEpxZ3dDZFVzWjVmRXBrdGhfVG9rZW46Ym94Y25SVnFIZXN4a2hKZjF2bkR4S29OYTZnXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=OPCtL&originHeight=245&originWidth=655&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=MDkzNjc2YzNkNDc1ZmE4OTQyNDk1NGMzMTYxN2IzNThfaVRFTGEwZVBKdWQ5dTBoOXF4MWswSTRNSDBGTnNlMHRfVG9rZW46Ym94Y25oWnpOdWFpNUFPaENPOUczbUlSSE1oXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=wTVqJ&originHeight=194&originWidth=536&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=NzRkZDkyYzMwNDRkNmU2YTg1MmFmMzQ4MjJkYjNhYTNfQkRGZEh0MURjVTY4NGRCek8waFBuaGd3RFBwMjVoOW1fVG9rZW46Ym94Y252U1FLbFR5MlBzb3h6M3N0QlZBYjVlXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=OVu0j&originHeight=589&originWidth=1462&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("p",null,"\u5bf9k\u7684\u4f18\u5316"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=M2NlNjFlYzQyZjJlZjdiN2YzYjFjM2FmNWM0YzE1YmVfdERUQmNsMmdIR1RGMDRpNGtyWmlyMUJDcmllZ09nZ1VfVG9rZW46Ym94Y25zUlp5dmk4QXF4NUo4TVl4UEkxSktjXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=uy3Fx&originHeight=402&originWidth=1002&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint f[N][N];\nint w[N], v[N];\nint nn, vv;\n\n/*\n\u72b6\u6001 f[i][j] \u7684\u542b\u4e49\u4f9d\u65e7\u662f\u5728\u524d i \u4e2a\u7269\u54c1\u9009\u53d6\uff0c\u4f53\u79ef <= j \u65f6\uff0c\u80fd\u591f\u83b7\u5f97\u7684\u4ef7\u503c\u7684\u6700\u5927\u503c\n\u548c01\u80cc\u5305\u7684\u533a\u522b\u5c31\u5728\u4e8e\u96c6\u5408\u7684\u5212\u5206\uff1a\u5c06 k \u4e2a \u7269\u54c1 i \u770b\u4e3a\u4e00\u4e2a\u6574\u4f53\n\u72b6\u6001\u8f6c\u79fb\u540c\u6837\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n1. \u4e0d\u9009\u524d k \u4ef6 i \u7269\u54c1, f[i][j] = f[i - 1][j];\n2. \u9009\u53d6\u524d k \u4ef6 i \u7269\u54c1, f[i][j] = f[i - 1][j - v[i] * k] + k * w[i]\n\n// \u601d\u8def\u7c7b\u4f3c\u7b49\u5dee\u6570\u5217\n\u5bf9k\u7684\u4f18\u5316: f[i][j] = max(f[i-1][j], f[i - 1][j - v[i]] + w[i], f[i - 1][j - 2 * v[i]] + 2 * w[i] ...)\nf[i][j - v[i]] =max(                f[i - 1][j - v[i]] + w[i], ....)\n\n\u6240\u4ee5 f[i][j] = max(f[i][j], f[i][j - v[i]] + w[i])\n*/\n\nint main(){\n\n    cin>> nn >> vv;\n    for(int i = 1; i <= nn ;i ++) cin>> v[i] >> w[i];\n\n    for(int i = 1; i <= nn; i ++)\n        for(int j = 0; j <= vv; j ++)\n            {\n                f[i][j] = f[i - 1][j];\n                if( j >= v[i] ) f[i][j] = max(f[i][j], f[i][j - v[i]] + w[i]);\n            }\n\n    cout<< f[nn][vv] <<endl;\n\n    return 0;\n}\n")),(0,a.kt)("p",null,"\u4e00\u7ef4\u4f18\u5316\n\u4f18\u5316\u7684\u91cd\u70b9\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5faa\u73af\u7684\u7b49\u4ef7\u53d8\u5f62"),(0,a.kt)("li",{parentName:"ol"},"\u72b6\u6001\u63a8\u5bfc\u7684\u903b\u8f91\u7b49\u4ef7",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u5b8c\u5168\u80cc\u5305\u4e0d\u9700\u8981\u9006\u5e8f\u6c42\u89e3")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1e3 + 10;\nint f[N];\nint w[N], v[N];\nint nn, vv;\n\n/*\n\u72b6\u6001 f[i][j] \u7684\u542b\u4e49\u4f9d\u65e7\u662f\u5728\u524d i \u4e2a\u7269\u54c1\u9009\u53d6\uff0c\u4f53\u79ef <= j \u65f6\uff0c\u80fd\u591f\u83b7\u5f97\u7684\u4ef7\u503c\u7684\u6700\u5927\u503c\n\u548c01\u80cc\u5305\u7684\u533a\u522b\u5c31\u5728\u4e8e\u96c6\u5408\u7684\u5212\u5206\uff1a\u5c06 k \u4e2a \u7269\u54c1 i \u770b\u4e3a\u4e00\u4e2a\u6574\u4f53\n\u72b6\u6001\u8f6c\u79fb\u540c\u6837\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n1. \u4e0d\u9009\u524d k \u4ef6 i \u7269\u54c1, f[i][j] = f[i - 1][j];\n2. \u9009\u53d6\u524d k \u4ef6 i \u7269\u54c1, f[i][j] = f[i - 1][j - v[i] * k] + k * w[i]\n\n\u5bf9k\u7684\u4f18\u5316: f[i][j] = max(f[i-1][j], f[i - 1][j - v[i]] + w[i], f[i - 1][j - 2 * v[i]] + 2 * w[i] ...)\nf[i][j - v[i]] =max(        f[i - 1][j - v[i]] + w[i], ....)\n\n\u6240\u4ee5 f[i][j] = max(f[i - 1][j], f[i][j - v[i]] + w[i])\n*/\n\n/*\n\u72b6\u6001\u538b\u7f29\uff1a\n\u4f18\u5316\u601d\u8def\u548c01\u80cc\u5305\u76f8\u540c\uff0cf[j]\u4ee3\u8868\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u5019\u7684\u6700\u5927\u4ef7\u503c\n\u8fd9\u4e2a\u65f6\u5019\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u548c\u4e00\u7ef4\u6709\u6240\u4e0d\u540c\n1. \u4e0d\u6dfb\u52a0 i \u7269\u54c1 f[j] = f[j]\n2. \u6dfb\u52a0   i \u7269\u54c1 f[j] = f[j - v[i]] + w[i]\n*/\n\nint main(){\n\n    cin>> nn >> vv;\n    for(int i = 1; i <= nn ;i ++) cin>> v[i] >> w[i];\n\n    for(int i = 1; i <= nn; i ++)\n        for(int j = v[i]; j <= vv; j ++)\n            {\n                f[j] = max(f[j], f[j - v[i]] + w[i]);\n            }\n\n    cout<< f[vv] <<endl;\n\n    return 0;\n}\n")),(0,a.kt)("h4",{id:"\u591a\u91cd\u80cc\u5305"},"\u591a\u91cd\u80cc\u5305"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u548c\u524d\u9762\u4e24\u79cd\u60c5\u51b5\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7269\u54c1\u662fn\u4ef6\uff0c\u800c\u4e0d\u662fn\u4ef6\u548c\u65e0\u9650\u4ef6")),(0,a.kt)("p",null,"\u5206\u6790\u8fc7\u7a0b\u548c\u5b8c\u5168\u80cc\u5305\u4e00\u81f4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u66b4\u529b\u505a\u6cd5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 110;\nint f[N][N];\nint v[N], w[N], s[N];\nint n, m;\n\nint main (){\n    \n    cin>> n >> m;\n    \n    for(int i = 1; i <= n ;i ++) cin>> v[i] >> w[i] >> s[i];\n    \n    for(int i = 1; i <= n ;i ++)\n        for(int j = 0;j <= m; j ++)\n            for(int k = 0; k <= s[i] && k * v[i] <= j ; k ++)\n            {\n                f[i][j] = max(f[i][j], f[i - 1][j - v[i] * k] + w[i] * k);\n            }\n    \n    cout<<f[n][m]<<endl;\n    \n    return 0;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nvar(\n    n, m    int\n    v, w, s [110]int\n    f       [110][110]int\n)\n\nfunc main(){\n    \n    fmt.Scan(&n ,&m)\n    \n    for i := 1 ; i <= n ; i ++ {\n        fmt.Scan(&v[i], &w[i], &s[i])\n    }\n    \n    for i := 1 ; i <= n ; i++ {\n        for j := 0 ; j <= m ; j ++ {\n            for k := 0 ; k <= s[i] && k * v[i] <= j ; k ++ {\n                \n                if f[i][j] < f[i - 1][ j - v[i] * k] + w[i] * k {\n                    \n                    f[i][j] = f[i - 1][ j - v[i] * k] + w[i] * k    \n                }\n            }\n        }\n    }\n    \n    fmt.Printf("%v", f[n][m])\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e8c\u8fdb\u5236\u4f18\u5316")),(0,a.kt)("p",null,"\u4e5f\u5c31\u662f\u5c06\u4e00\u4e2a\u591a\u91cd\u80cc\u5305\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a",(0,a.kt)("strong",{parentName:"p"},"01\u80cc\u5305"),"\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u5c06\u7269\u54c1\u62c6\u5206\u4e3a\u4e0d\u540c\u7684\u4efd\uff0c\u4fdd\u8bc1\u7ec4\u5408\u8d77\u6765\u80fd\u591f\u8868\u793a\u539f\u6765\u7684\u6240\u6709\u6570\u3002\n\u4e8c\u8fdb\u5236\u62c6\u5206\u66f4",(0,a.kt)("strong",{parentName:"p"},"\u9ad8\u6548"),"\uff0c\u4e14\u80fd\u8868\u793a\u539f\u6765\u7684",(0,a.kt)("strong",{parentName:"p"},"\u6240\u6709\u6570"),"\n\u5982 s = 10\n\u4e8c\u8fdb\u5236\u62c6\u5206\u7684\u7ed3\u679c\u4e3a 1 2 4 3\n\u4e5f\u5c31\u662f\u51cf\u5230\u4e0d\u80fd\u51cf\u4e3a\u6b62\uff0c\u5269\u4e0b\u7684\u4e00\u90e8\u5206\u5c31\u6210\u4e3a\u4e00\u4efd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <vector>\nusing namespace std;\n\nconst int N = 2010;\nint f[N]; // \u8f6c\u5316\u4e3a01\u80cc\u5305\u4e4b\u540e\u5c31\u53ef\u4ee5\u4f18\u5316\u7a7a\u95f4\u4e86\nint n, m;\n\nstruct Good\n{\n  int v, w;\n};\n\nint main()\n{\n  cin >> n >> m;\n  vector<Good> goods; // \u56e0\u4e3a\u4e0d\u77e5\u9053\u62c6\u5305\u4e4b\u540e\u5305\u7684\u6570\u91cf\uff0c\u4f7f\u7528vector\u6765\u5b58\u50a8\u5206\u5305\n\n  for (int i = 0; i < n; i++)\n  {\n    int v, w, s;\n    cin >> v >> w >> s;\n\n    // \u5f00\u59cb\u62c6\u5305\n    for (int k = 1; k <= s; k *= 2)\n    {\n      s -= k;\n      goods.push_back({v * k, w * k});\n    }\n    if (s > 0)\n      goods.push_back({v * s, w * s});\n  }\n\n  // 01 \u80cc\u5305\u7684\u7a7a\u95f4\u4f18\u5316\n  for (Good good : goods)\n    for (int j = m; j >= good.v; j--)\n      f[j] = max(f[j], f[j - good.v] + good.w);\n\n  cout << f[m] << endl;\n\n  return 0;\n}\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\n// \u4e8c\u8fdb\u5236\u4f18\u5316\u7684\u6838\u5fc3\uff1a\u7528\u4e8c\u8fdb\u5236\u5206\u5305\uff0c\u51cf\u5c11\u7269\u54c1\u6570\u91cf\uff0c\u4e14\u80fd\u591f\u8868\u793a\u539f\u6765\u7684\u6240\u6709\u7684\u60c5\u51b5\n// \u5e76\u4f7f\u7528\u5b8c\u5168\u80cc\u5305\u6765\u5bf9\u6bcf\u4e00\u79cd\u5305\u8fdb\u884c\u8ba1\u7b97\nvar(\n    n, m int \n    v, w [25000]int // \u8fd9\u91cc\u768425000 \u662f 2000 * logs\uff0c\u4fdd\u9669\u53d6\u503c\u7684\u7ed3\u679c\n    f    [25000]int\n)\n\nfunc max(a, b int) int{\n    if a > b {\n        return a\n    } else {\n        return b\n    }\n}\n\nfunc main(){\n    fmt.Scan(&n, &m)\n    \n    cnt := 0 // \u7528\u6765\u7ed9\u5206\u5305\u7f16\u53f7\uff08\u5206\u5305\u6570\u91cf\uff09\n    for i := 1 ; i <= n ; i++ {\n        var a, b, s int\n        fmt.Scan(&a, &b, &s)\n        k := 1 // k \u8868\u793a\u5f53\u524d\u5df2\u7ecf\u5206\u5305\u7684\u4ef7\u503c\n        \n        for k <= s {\n            cnt ++\n            v[cnt] = a * k\n            w[cnt] = b * k\n            s -= k\n            k *= 2\n        }\n        \n        if s > 0 { // \u8868\u793a\u5269\u4f59\u7684\u90e8\u5206\n            cnt ++\n            v[cnt] = a * s\n            w[cnt] = b * s\n        }\n    }\n    \n    n = cnt // \u6700\u540e\u7684\u5206\u5305\u6570\u91cf\n    \n    for i := 1 ; i <= n ; i ++ {\n        for j := m ; j >= v[i] ; j -- {\n            f[j] = max(f[j] , f[ j - v[i] ] + w[i])\n        }\n    }\n    \n    fmt.Printf("%v \\n", f[m])\n}\n')),(0,a.kt)("h4",{id:"\u5206\u7ec4\u80cc\u5305"},"\u5206\u7ec4\u80cc\u5305"),(0,a.kt)("p",null,"\u6bcf\u4e2a\u7269\u54c1\u7ec4\u91cc\u9762\u53ea\u80fd\u9009\u4e00\u4e2a\u7269\u54c1\n\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u89e3\u51b3\u52a8\u6001\u89c4\u5212\u95ee\u9898\u65f6\uff0c\u5982\u679c\u9700\u8981\u8003\u8651",(0,a.kt)("strong",{parentName:"p"},"\u4e4b\u524d\u9636\u6bb5\u7684\u6700\u4f18\u89e3\u5bf9\u5f53\u524d\u9636\u6bb5\u7684\u5f71\u54cd"),"\uff0c\u4e14",(0,a.kt)("strong",{parentName:"p"},"\u6bcf\u4e2a\u9636\u6bb5\u5177\u6709\u76f8\u540c\u7684\u7269\u54c1\u96c6\u5408"),"\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u80cc\u5305\u5bb9\u91cf\u653e\u5230\u5916\u5c42\u5faa\u73af\u4e2d\u3002\n\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5904\u7406\u591a\u7ec4\u7269\u54c1\uff0c\u6bcf\u7ec4\u7269\u54c1\u6570\u91cf\u4e0d\u9650\uff0c\u4f46\u662f\u6bcf\u7ec4\u7269\u54c1\u4e2d\u6240\u9009\u53d6\u7684\u7269\u54c1\u5fc5\u987b\u5c5e\u4e8e\u8be5\u7ec4\u7269\u54c1\u4e2d\u7684\u4e00\u4e2a\uff0c\u5e76\u4e14\u6bcf\u79cd\u7269\u54c1\u90fd\u6709\u81ea\u5df1\u7684\u4f53\u79ef\u548c\u4ef7\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u91c7\u7528\u5c06\u80cc\u5305\u5bb9\u91cf\u653e\u5728\u5916\u5c42\u5faa\u73af\u7684\u65b9\u5f0f\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5bf9\u4e8e\u6bcf\u4e2a\u5bb9\u91cf\uff0c\u90fd\u80fd\u591f\u8003\u8651\u5230\u4e4b\u524d\u7ec4\u7269\u54c1\u4e2d\u6240\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u540c\u9636\u6bb5\u7684\u7269\u54c1\u96c6\u5408\u4e0d\u540c\uff0c\u6216\u8005\u4e0d\u540c\u9636\u6bb5\u7684\u7269\u54c1\u5177\u6709\u4e0d\u540c\u7684\u5c5e\u6027\uff08\u5982\u4e0d\u540c\u4f53\u79ef\u3001\u4e0d\u540c\u91cd\u91cf\u7b49\uff09\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u91c7\u7528\u8fd9\u79cd\u5c06\u80cc\u5305\u5bb9\u91cf\u653e\u5728\u5916\u5c42\u5faa\u73af\u7684\u65b9\u5f0f\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 110;\n\nint f[N], v[N], w[N];\nint n, m;\n\n// \u4e00\u4e2a\u7269\u54c1\u7ec4\u5185\u53ea\u80fd\u9009\u4e00\u4e2a\u7269\u54c1\nint main()\n{\n  cin >> n >> m;\n\n  for (int i = 0; i < n; i++) // \u6bcf\u4e00\u7ec4\u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5728\u6240\u6709\u7684\u60c5\u51b5\u4e2d\u9009\u51fa\u6700\u4f18\u7684\n  {\n    int s;\n    cin >> s;\n    for (int j = 0; j < s; j++)\n      cin >> v[j] >> w[j];\n\n    // \u4f7f\u7528\u5012\u5e8f\u5faa\u73af\u7684\u65b9\u5f0f\u6765\u9009\u62e9,\u56e0\u4e3a\u6bcf\u79cd\u7269\u54c1\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\n    // \u5c06\u4f53\u79ef\u653e\u5230\u5916\u5c42\u5faa\u73af\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e2a\u5bb9\u91cf\uff0c\u80fd\u591f\u5f97\u5230\u4ece\u524d\u9762\u4e00\u7ec4\u7269\u54c1\u4e2d\u6240\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\n    for (int j = m; j >= 0; j--)\n      for (int k = 0; k < s; k++)\n        if (j >= v[k])\n          f[j] = max(f[j], f[j - v[k]] + w[k]);\n  }\n\n  cout << f[m] << endl;\n\n  return 0;\n}\n")),(0,a.kt)("h2",{id:"\u7ebf\u6027dp"},"\u7ebf\u6027DP"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6307\u9012\u63a8\u65b9\u7a0b\u7684\u5173\u7cfb\u662f\u660e\u663e\u7ebf\u6027\u5173\u7cfb\u7684\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c \u6c42\u89e3\u987a\u5e8f\u6709\u4e00\u79cd\u6a21\u7cca\u7684\u7ebf\u6027\u7684\u95ee\u9898\u3002")),(0,a.kt)("h3",{id:"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898"},"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTZkMTQ3ZTJhYjkzYjUzNzk3MzJiNTU2MzA2OTk0NDlfN3RWMDljYjZlTUlMUGhRNmJpakJ5MUNaQTFaNGx4VHJfVG9rZW46QzN1emJFTkpab0hNSWJ4aHI3MGN0N0x3bm5mXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=LqlhO&originHeight=223&originWidth=618&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null}),"\n\u5206\u6790\u8def\u5f84\uff1a\n",(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=YzhjNjc1MjY4ZDk3NzI4M2U4NGNjNmQzMjM0OWM5NjNfV3NpYUt3cHZGTWp6Q1B1NmszdE1LcFhEblhDRXQwT2lfVG9rZW46VTVWc2JXUFFpb3RoZ1V4OHJCbWNabGpnbjliXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=RuhIv&originHeight=617&originWidth=1442&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("h4",{id:"\u65f6\u95f4\u590d\u6742\u5ea6"},"\u65f6\u95f4\u590d\u6742\u5ea6"),(0,a.kt)("p",null,"\u72b6\u6001\u6570\u91cf * \u72b6\u6001\u8f6c\u79fb\u7684\u64cd\u4f5c\u6570\u91cf\n\u6838\u5fc3\u662f",(0,a.kt)("strong",{parentName:"p"},"\u904d\u5386\u7684\u987a\u5e8f"),"\n\u5728\u4fdd\u8bc1\u6b63\u786e\u6027\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8003\u8651\u4f18\u5316"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 510;\nint f[N][N]; // \u8868\u793a\u8d70\u5230 [i, j] \u8fd9\u4e2a\u70b9\u4e0a\u8def\u5f84\u7684\u6700\u5927\u503c\nint n;\n\n// \u601d\u8def\u662f\u4ece\u5e95\u5f80\u4e0a\u8d70\uff0c\u76f4\u5230\u9876\u70b9\nint main()\n{\n    // \u8bfb\u5165\u6570\u636e\uff0c\u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u6570\u636e\u53ea\u4f9d\u8d56\u4e0a\u4e00\u5c42\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u6570\u636e\u8bfb\u5165\u5230f[i][j]\u4e2d\n    // \u901a\u8fc7\u72b6\u6001\u7684\u6539\u53d8\u6765\u5f97\u5230\u7b54\u6848\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= i; j++)\n            cin >> f[i][j];\n\n    // \u4ece\u4e0b\u5f80\u4e0a\n    for (int i = n; i >= 0; i--)\n        for (int j = 1; j <= i; j++)\n            f[i][j] = max(f[i + 1][j], f[i + 1][j + 1]) + f[i][j];\n\n    cout << f[1][1] << endl;\n\n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217"},"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTNkYzBkYTJiODM5OWM0MGUzMmMxN2ZiOTFjNGYxYTlfdm5WMFZMRnJNcGJ3YktHeTFoWnBBODVpdjJXNWlOanJfVG9rZW46WDJadmJpbFlub2hPa3Z4enpnbGNISDJ1blJnXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=jnjHX&originHeight=307&originWidth=588&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'package main\n\nimport "fmt"\n\nvar(\n    n    int\n    a, f [1010]int\n)\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    } else {\n        return b\n    }\n}\n\nfunc main(){\n    fmt.Scan(&n)\n    \n    for i := 1; i <= n ; i ++ {\n        fmt.Scan(&a[i])\n    }\n    \n    for i := 1; i <= n ; i++ {\n        f[i] = 1 // f[i] \u9ed8\u8ba4\u4e3a 1 \uff0c \u56e0\u4e3a\u6bcf\u4e00\u4e2a\u5b57\u7b26\u6700\u5c0f\u957f\u5ea6\u5c31\u4e3a 1\n        for j := 1; j < i ; j ++ {\n            if a[i] > a[j] {\n                f[i] = max(f[i] , f[j] + 1)\n            }\n        }\n    }\n    \n    res := 0\n    \n    for i := 1; i <= n ; i++ {\n        res = max(f[i], res)\n    }\n    \n    fmt.Printf("%v", res)\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\nusing namespace std;\n\nconst int N = 1010;\nint f[N]; // \u8868\u793a\u5230 i \u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\nint a[N];\nint n;\n\nint main()\n{\n  cin >> n;\n  for (int i = 1; i <= n; i++)\n    cin >> a[i];\n\n  for (int i = 1; i <= n; i++)\n  {\n    f[i] = 1; // \u53ea\u6709\u4e00\u4e2a\u6570\u7684\u65f6\u5019\n    for (int j = 1; j < i; j++)\n        if (a[i] > a[j])\n            f[i] = max(f[i], f[j] + 1);\n  }\n  \n  int res = 0;\n  for(int i = 1; i <= n ;i ++) res = max(res, f[i]);\n  \n  cout<< res << endl;\n  \n  return 0;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8d2a\u5fc3\u601d\u60f3+\u4e8c\u5206\u4f18\u5316")),(0,a.kt)("p",null,"\u601d\u8def\uff1a\u9996\u5148\u6570\u7ec4a\u4e2d\u5b58\u8f93\u5165\u7684\u6570\uff08\u539f\u672c\u7684\u6570\uff09\uff0c\u5f00\u8f9f\u4e00\u4e2a\u6570\u7ec4f\u7528\u6765\u5b58\u7ed3\u679c\uff0c\u6700\u7ec8\u6570\u7ec4f\u7684\u957f\u5ea6\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\uff1b\u5047\u5982\u6570\u7ec4f\u73b0\u5728\u5b58\u4e86\u6570\uff0c\u5f53\u5230\u4e86\u6570\u7ec4a\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u9996\u5148\u5224\u65ada","[i]"," > f","[cnt]"," \uff1f \u82e5\u662f\u5927\u4e8e\u5219\u76f4\u63a5\u5c06\u8fd9\u4e2a\u6570\u6dfb\u52a0\u5230\u6570\u7ec4f\u4e2d\uff0c\u5373f","[++cnt]"," = a","[i]",";\u8fd9\u4e2a\u64cd\u4f5c\u65f6\u663e\u7136\u7684\u3002\n\u5f53a","[i]"," <= f","[cnt]"," \u7684\u65f6,\u6211\u4eec\u5c31\u7528a","[i]","\u53bb\u66ff\u4ee3\u6570\u7ec4f\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ea","[i]","\u7684\u6570\uff0c\u56e0\u4e3a\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u7ef4\u62a4\u7684\u6570\u7ec4f \u662f\u4e00\u4e2a\u9012\u589e\u7684\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u5728 logn \u7684\u65f6\u95f4\u590d\u6742\u7684\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u627e\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u66ff\u6362\uff0c\u5373f","[l]"," = a","[i]","\u3002\n\u6211\u4eec\u7528a","[i]","\u53bb\u66ff\u4ee3f","[i]","\u7684\u542b\u4e49\u662f\uff1a\u4ee5a","[i]","\u4e3a\u6700\u540e\u4e00\u4e2a\u6570\u7684\u4e25\u683c\u5355\u8c03\u9012\u589e\u5e8f\u5217,\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6570\u7684\u4e2a\u6570\u4e3al\u4e2a\u3002\n\u8fd9\u6837\u5f53\u6211\u4eec\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4a\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'package main\n\nimport "fmt"\n\nconst N = 100010\n\nvar (\n    n       int\n    q, a    [N]int\n)\n\n/*\n1. \u8fd9\u9898\u7684\u4e3b\u8981\u51fa\u53d1\u70b9\u5728\u4e8e\uff1a\u6bcf\u6b21\u5b58\u5165 f[i] \u4e2d\u7684\u6570\u76f4\u63a5\u4e3a a[0 ~ i - 1] \u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u5c0f\u7684\u6570\u76f8\u5bf9\u4e8e\u5927\u7684\u6570\n\u6709\u66f4\u591a\u7684\u5197\u4f59\u7a7a\u95f4\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u6c42\u5c0f\u7684\u6570\u4e86\n2. \u7531\u4e0a\u5f97\u5230\uff0c f[i] \u4e2d\u5b58\u50a8\u7684\u5c31\u662f\u5728\u5e8f\u5217\u957f\u5ea6\u4e3a i \u7684\u60c5\u51b5\u4e0b\uff0c\u672b\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c\n   \u6240\u4ee5\u5728\u957f\u5ea6\u9012\u589e\u7684\u60c5\u51b5\u4e0b, f[i] \u4e00\u5b9a\u662f\u9012\u589e\u7684\uff0c\u56e0\u4e3a\u662f\u6700\u5c0f\u503c\uff0c\u63a5\u5728\u5b83\u540e\u9762\u7684\u4e00\u5b9a\u8981\u6bd4\u5b83\u5927\n   \u7c7b\u4f3c\u4e8e\u5355\u8c03\u6808\u7684\u601d\u60f3\n   \n3. \u7531\u4e8e\u662f\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u5728\u6bcf\u4e00\u6b21\u4e3af[i]\u5bfb\u627e\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6765\u8fdb\u884c\u67e5\u627e\uff0c\u67e5\u627e\u5230\u7684\u503c\u5982\u679c\u66f4\u5c0f\n   \u5c31\u66ff\u6362\uff08\u5c0f\u7684\u4e00\u5b9a\u6bd4\u5927\u7684\u66f4\u597d\uff09\n*/\n\nfunc max(a, b int ) int {\n    if a > b {\n        return a\n    } else {\n        return b\n    }\n}\n\nfunc main(){\n    fmt.Scan(&n)\n    \n    for i := 0; i < n ; i ++ {\n        fmt.Scan(&a[i])\n    }\n    \n    q[0] = -2e9 // \u786e\u4fdd\u6709\u503c\n    le := 0\n    for i := 0 ; i < n ; i++ {\n        l , r := 0 , le\n        \n        for l < r {\n            mid := ( l + r + 1 ) >> 1\n            if q[mid] < a[i] {\n                l = mid\n            } else {\n                r = mid - 1\n            }\n        }\n        \n        le = max(le, r + 1) // \u66f4\u65b0\u6700\u5927\u7684\u957f\u5ea6\n        q[r + 1] = a[i]    // \u66ff\u6362\u6210\u4e3a\u66f4\u5c0f\u7684\u503c\n    }\n    \n    fmt.Printf("%v", le)\n}\n')),(0,a.kt)("h3",{id:"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=ODQxYmNiNGQzNmQ1ZThlOGUwNTEwYjcxZDhjNWQxMzNfOFgyR21BYzRFbWVWNU04T21UaU9OVlgxSU5CM3RFSVlfVG9rZW46SlBnVGJrd1h5b1prZnV4WHBBV2N5dERGblhkXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=Md9TB&originHeight=616&originWidth=1276&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nconst N = 1010\nvar(\n    n, m     int\n    arr, brr []byte\n    f        [N][N] int\n)\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    } else {\n        return b\n    }\n}\n\nfunc main(){\n    fmt.Scanf("%d%d", &n, &m)\n    arr = make([]byte, 1)\n    brr = make([]byte, 1)\n    \n    var str string\n    fmt.Scanf("%s", &str)\n    arr = append(arr, []byte(str)...)\n    fmt.Scanf("%s", &str)\n    brr = append(brr, []byte(str)...)\n    \n    for i := 1 ; i <= n ; i ++{\n        for j := 1; j <= m ; j++ {\n            f[i][j] = max(f[i - 1][j] , f[i][j - 1])\n            if arr[i] == brr[j] {\n                f[i][j] = max(f[i][j], f[i - 1][j - 1] + 1)\n            }\n        }\n    }\n    \n    fmt.Printf("%d", f[n][m])\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        int n = text1.length(), m = text2.length();\n        vector<vector<int>> f(n + 1, vector<int>(m + 1));\n        text1 = " " + text1;\n        text2 = " " + text2;\n\n        for(int i = 1; i <= n ;i ++)\n        {\n            for(int j = 1; j <= m; j++)\n            {\n                f[i][j] = max(f[i - 1][j], f[i][j - 1]); // 01 10\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u5305\u542b\u4e86 00 \n                if( text1[i] == text2[j] ) // 11\n                {\n                    f[i][j] = max(f[i][j], f[i - 1][j - 1] + 1);\n                }\n            }\n        }\n\n        return f[n][m];\n    }\n};\n')),(0,a.kt)("h3",{id:"\u6700\u77ed\u7f16\u8f91\u8ddd\u79bb"},"\u6700\u77ed\u7f16\u8f91\u8ddd\u79bb"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=MjU0ZDQ4ZWIxN2MyN2U0OWI1ZjAwYWFkNWE4OTViMjJfODVRVWlVWExqSkNTbG95aDBsUEN4a1NuWWVYUmRJaFBfVG9rZW46QllXMGJXNVRlb3dSVHR4QmowY2NJR3pabk5iXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=bzNED&originHeight=616&originWidth=1094&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'package main\n\nimport "fmt"\n\nconst N = 1010\nvar (\n    n, m   int \n    s, p   string\n    f      [N][N]int // \u72b6\u6001f[i][j]\u7684\u542b\u4e49\u662f \u628a\u957f\u5ea6\u4e3ai \u7684a\u4e32\u8f6c\u5316\u4e3a\u957f\u5ea6\u4e3a j \u7684b\u4e32\u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u4ee3\u4ef7\n)\n\nfunc main(){\n    // \u8fd9\u6837\u5904\u7406\u5b57\u7b26\u4e32\u7684\u8bfb\u5165\u662f\u4e0d\u884c\u7684\n    // fmt.Scan(&n)\n    // for i := 1 ; i <= n ; i++ {\n    //     fmt.Scan(&a[i])\n    // }\n    // fmt.Scan(&m)\n    // for j := 1 ; j <= m ; j++ {\n    //     fmt.Scan(&b[j])\n    // }\n    \n    fmt.Scanf("%d\\n%s", &n , &s)\n    fmt.Scanf("%d\\n%s", &m , &p)\n    a := make([]byte, n + 1)\n    b := make([]byte, m + 1)\n    // \u901a\u8fc7\u5207\u7247\u5904\u7406\n    copy(a[1:], s)\n    copy(b[1:], p)\n    \n    // \u521d\u59cb\u5316f[i][j]\u7684\u8fb9\u754c\n    for i := 0 ; i <= n; i ++ {\n        f[i][0] = i\n    }\n    for j := 0 ; j <= m; j++ {\n        f[0][j] = j\n    }\n    \n    for i := 1; i <= n ; i++ {\n        for j := 1; j <= m ; j ++{\n            // \u5220\u4e0e\u589e\u7684\u6700\u5c0f\u503c\n            f[i][j] = min(f[i - 1][j] + 1 , f[i][j - 1] + 1)\n            // \u6539\u6216\u8005\u76f8\u540c\u7684\u6700\u5c0f\u503c\n            if a[i] == b[j] {\n                f[i][j] = min(f[i][j] , f[i - 1][j - 1])\n            } else {\n                f[i][j] = min(f[i][j] , f[i - 1][j - 1] + 1)\n            }\n        }\n    }\n    \n    fmt.Printf("%v", f[n][m])\n}\n\nfunc min(a, b int )int {\n    if a < b {\n        return a\n    } else {\n        return b\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#include <cstring>\nusing namespace std;\n\nconst int N = 1010;\nint f[N][N]; // \u8868\u793a\u7531a[1...i] \u8f6c\u79fb\u5230 b[1...j] \u9700\u8981\u591a\u5c11\u7f16\u8f91\u8ddd\u79bb\nchar a[N], b[N];\nint n, m;\n\nint main(){\n    \n    cin >> n >> a + 1 >> m >> b + 1;\n    \n    // \u521d\u59cb\u72b6\u6001\n    for(int i = 1; i <= n; i ++ )\n        f[i][0] = i;\n    for(int j = 1; j <= m; j ++ )\n        f[0][j] = j;\n    \n    \n    for(int i = 1; i <= n; i ++)\n        for(int j = 1; j <= m; j ++)\n        {\n            // \u589e\u3001\u5220\n            f[i][j] = min(f[i - 1][j], f[i][j - 1]) + 1;\n            if( a[i] == b[j] ){ // 11\n                f[i][j] = min(f[i][j], f[i - 1][j - 1]);\n            } else { // \u6539 \n                f[i][j] = min(f[i][j], f[i - 1][j - 1] + 1);\n            }\n        }\n    \n    cout << f[n][m] << endl;\n    \n    return 0;\n}\n")),(0,a.kt)("h3",{id:"\u7f16\u8f91\u8ddd\u79bb"},"\u7f16\u8f91\u8ddd\u79bb"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8fd9\u4e2a\u9898\u5c31\u662f\u6700\u5c0f\u7f16\u8f91\u8ddd\u79bb\u7684\u4e00\u4e2a\u5e94\u7528")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "os"\n    "bufio"\n)\n\nconst (\n    N int = 1010\n    M int = 20\n)\n\nvar (\n    n, m int\n    f    [M][M]int\n)\n\nfunc main(){\n    input := bufio.NewReader(os.Stdin)\n    \n    fmt.Fscan(input, &n, &m)\n    \n    // \u8bfb\u5165 n \u4e2a\u5b57\u7b26\u4e32\n    str := make([][]byte, N)\n    var mid string\n    for i := 0; i < n ; i++{\n        fmt.Fscan(input, &mid)\n        str[i] = make([]byte, 1)\n        str[i] = append(str[i], mid...)\n    }\n    \n    // \u4f9d\u6b21\u5224\u65ad m \u4e2a\u5b57\u7b26\u4e32\n    for i := 0 ; i < m ; i++ {\n        var limit, res int \n        a := make([]byte, 1)\n        fmt.Fscan(input, &mid, &limit)\n        a = append(a, mid...)\n        \n        for j := 0 ; j < n ; j ++{\n            if get_distance(str[j], a) <= limit{\n                res ++ \n            }\n        }\n        \n        fmt.Println(res)\n    }\n}\n\n// \u6700\u5c0f\u7f16\u8f91\u8ddd\u79bb\u7684\u90e8\u5206\nfunc get_distance(source , target []byte) int {\n    n, m := len(source) - 1, len(target) - 1\n    \n    for i := 1; i <= n ; i ++ {\n        f[i][0] = i\n    }\n    for j := 1; j <= m ; j ++ {\n        f[0][j] = j  \n    }\n    \n    for i := 1 ; i <= n ; i ++{\n        for j := 1; j <= m ; j ++ {\n            f[i][j] = min( f[i - 1][j] + 1, f[i][j - 1] + 1)\n            \n            if source[i] == target[j] {\n                f[i][j] = min( f[i][j] , f[i - 1][j - 1])\n            } else {\n                f[i][j] = min( f[i][j] , f[i - 1][j - 1] + 1)\n            }\n        }\n    }\n    \n    return f[n][m]\n}\n\nfunc min(a, b int) int {\n    if a > b {\n        return b \n    } else {\n        return a\n    }\n}\n')),(0,a.kt)("h2",{id:"\u533a\u95f4dp"},"\u533a\u95f4DP"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=MGViYWUwMTI4NTA0NTk0YTVjZWJkYzUyYWNkOTU3ZDFfYWdETHlJOFhNR1JIbTlqT3MxYUY0VE1rSXFMMVVHODJfVG9rZW46QUNUTWI3NTV3b1N4RGJ4Vzl1S2NwcDY2bm1mXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=Kke6m&originHeight=543&originWidth=1076&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4ee5\u6700\u540e\u4e00\u6b65\u7684\u5206\u754c\u5411\u524d\u63a8\u4e00\u6b65\uff0c\u5f97\u5230\u9012\u63a8\u5f0f")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=YTBiYmM0YmRlM2I4NjhkN2E2MjY4MDU2ZjE4M2ExZTJfWXFMVDA0bmlaS1VoaldVNjl2VzdxaHROZmJOdXVlcXhfVG9rZW46RXVFSGJuWGpmbzM4akV4MTQ4MGNFYmZVbllmXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=PBFQK&originHeight=456&originWidth=1044&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nconst N = 310\nvar (\n    n     int \n    a, s  [N]int\n    f     [N][N]int\n)\n\nfunc min(a, b int) int {\n    if a < b{\n        return a\n    } else {\n        return b\n    }\n}\n\nfunc main(){\n    fmt.Scan(&n)\n    // \u6784\u9020\u524d\u7f00\u548c\n    for i := 1; i <= n; i++ {\n        fmt.Scan(&a[i])\n        s[i] += s[i - 1] + a[i]\n    }\n    \n    // \u533a\u95f4 DP \u5e38\u7528\u904d\u5386\u65b9\u5f0f \uff1a \u957f\u5ea6 + \u5de6\u7aef\u70b9\n    for le := 2 ; le <= n ; le ++ { // \u8868\u793a [i, j] \u7684\u5143\u7d20\u4e2a\u6570\n        for i := 1; i + le - 1 <= n ; i++ {\n            \n            j := i + le - 1; // \u81ea\u52a8\u5f97\u5230\u53f3\u7aef\u70b9\n            \n            f[i][j] = 1e9 // \u521d\u59cb\u5316\u4e00\u4e0b, \u8fd9\u91cc f[1][n] \u662f\u9ed8\u8ba4\u503c\uff0c \u4e3a 0 \uff0c \u6240\u4ee5\u4e0d\u7528\u521d\u59cb\u5316\u8fb9\u754c\u4e86\n            \n            // \u679a\u4e3e\u5206\u5272\u70b9\n            for k := i ; k <= j - 1; k ++ { // \u5fc5\u987b\u6ee1\u8db3 k + 1 <= j , \u9632\u6b62\u8d8a\u754c \n                f[i][j] = min(f[i][j], f[i][k] + f[k + 1][j] + s[j] - s[i - 1])\n            }\n        }\n    }\n    \n    fmt.Printf("%v", f[1][n])\n}\n')),(0,a.kt)("h2",{id:"\u8ba1\u6570\u7c7bdp"},"\u8ba1\u6570\u7c7bDP"),(0,a.kt)("h3",{id:"\u5b8c\u5168\u80cc\u5305\u5199\u6cd5"},"\u5b8c\u5168\u80cc\u5305\u5199\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nconst N int = 1010\nconst mod int = 1e9 + 7\nvar (\n    n  int\n    f  [N]int // f[i][j] \u8868\u793a\u5728 1 ~ i \u4e2d\u9009\u53d6\u7684\uff0c \u548c\u4e3a j \u7684\u65b9\u6848\u6570\n    // \u65b9\u6848\u6709: f[i][j] = f[i - 1][j] + f[i - 1, j - i * 1] + f[i - 1][j - i * 2] + f[i][j - i * 3] ... +  f[i][j - i * k] \uff08k\u662f\u6ee1\u8db3\u5f0f\u5b50\u7684\u6700\u5927\u503c\uff09\n    //         f[i][j - i] =           f[i - 1][j - i * 1] + f[i - 1][j - i * 2] ... \n    // \u6240\u4ee5:   f[i][j] = f[i - 1][j] + f[i][j - i]\n)\n\nfunc main(){\n    fmt.Scan(&n)\n    \n    // \u4e3b\u8981\u7684\u601d\u8def\u5c31\u662f\u5b8c\u5168\u80cc\u5305\n    f[0] = 1\n    for i := 1; i <= n ;i ++{\n        for j := i; j <= n ; j++{\n            f[j] = (f[j] + f[j - i]) % mod\n        }\n    }\n    \n    fmt.Println(f[n])\n}\n')),(0,a.kt)("h3",{id:"\u53e6\u5916\u4e00\u79cd\u5206\u6790\u65b9\u5f0f"},"\u53e6\u5916\u4e00\u79cd\u5206\u6790\u65b9\u5f0f"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=OThkNjQ0MTg0OGIxZGY5MGE1NWFiNjBjMmEzOTJlMWFfM1lEYXhpaEhoWFJGZU5tSEFXOHY0RkQ3S2liTDRUUUdfVG9rZW46QlRxR2JpRkI5b1lBd1R4dHpNV2MzRVBabkpiXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=fma6b&originHeight=640&originWidth=1336&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nconst N int = 1010\nconst mod int = 1e9 + 7\nvar (\n    n  int\n    f  [N][N]int \n)\n\nfunc main(){\n    fmt.Scan(&n)\n\n    f[0][0] = 1\n    for i := 1; i <= n ;i ++{\n        for j := 1; j <= i ; j++{\n            f[i][j] = (f[i - 1][j - 1] + f[i - j][j]) % mod\n        }\n    }\n    \n    res := 0\n    for i := 1; i <= n ; i++{\n        res = (res + f[n][i]) % mod \n    }\n    \n    fmt.Println(res)\n}\n')),(0,a.kt)("h2",{id:"\u6570\u4f4d\u7edf\u8ba1dp"},"\u6570\u4f4d\u7edf\u8ba1DP"),(0,a.kt)("h3",{id:"\u601d\u8def"},"\u601d\u8def"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u524d\u7f00\u5904\u7406 "),(0,a.kt)("li",{parentName:"ol"},"\u5206\u60c5\u51b5\u8ba8\u8bba ")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://gb6tpk84yf.feishu.cn/space/api/box/stream/download/asynccode/?code=NmQxZDQ4ODBkMTIxNGE2NDFmMTk0YmRiYjA0YjA4NzVfaDNTTm5ucW82bEhlQ3FoRmxRNTNwMXBxRFFqR1lMR3pfVG9rZW46RzZoS2JidXhzb1pBOGN4MlhhaWNIMGJWbk1oXzE2ODA3NDkzOTE6MTY4MDc1Mjk5MV9WNA#id=HHjzX&originHeight=732&originWidth=974&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=",alt:null})))}m.isMDXComponent=!0}}]);